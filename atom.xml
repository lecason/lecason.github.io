<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title><![CDATA[LECASON]]></title>
  
  <link href="/atom.xml" rel="self"/>
  <link href="http://lecason.com/"/>
  <updated>2015-09-15T07:28:26.000Z</updated>
  <id>http://lecason.com/</id>
  
  <author>
    <name><![CDATA[Lecason]]></name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title><![CDATA[iOS 远程通知的实现]]></title>
    <link href="http://lecason.com/2015/09/15/iOS-Remote-Notificaton/"/>
    <id>http://lecason.com/2015/09/15/iOS-Remote-Notificaton/</id>
    <published>2015-09-15T02:27:45.000Z</published>
    <updated>2015-09-15T07:28:26.000Z</updated>
    <content type="html"><![CDATA[<h2 id="注册推送证书">注册推送证书</h2><p>我们的客户端与苹果服务器之间和我们自己的服务器与苹果服务器之间都需要证书来进行链接。下面我们来开始进入证书的制作过程。</p>
<h3 id="生成CSR文件">生成CSR文件</h3><p>打开<code>MAC</code> - <code>钥匙串访问</code> - <code>菜单</code> - <code>证书助理</code> - <code>从证书颁发机构请求证书</code> - <code>存储到磁盘</code></p>
<p><img src="/img/remotenotification1.png" alt=""></p>
<h3 id="注册_App_IDs">注册 App IDs</h3><p>这个是程序要填入的Bundle ID,Explicit App ID是固定一个APP，Wildcard App ID是通用前缀的App</p>
<p>打开<code>developer.apple.com</code> - <code>Idenfifiers</code> - <code>App IDs</code> - <code>+</code> - <code>App ID Description</code> - <code>应用名字</code></p>
<p>App ID Description 写上自己应用名字 </p>
<p><img src="/img/remotenotification3.png" alt=""></p>
<p>Bundle ID 写上应用标识 选择<code>App ID Suffix</code> - <code>Explicit App ID</code> - <code>Bundle ID</code> - <code>App 准备用的Bundle ID</code></p>
<p><img src="/img/remotenotification4.png" alt=""></p>
<p>勾选 通知 选择<code>App Services</code> - <code>勾选</code> - <code>Push Notificatioons</code></p>
<p><img src="/img/remotenotification5.png" alt=""></p>
<p>这时候看到 provisioning profiles 是这样子的</p>
<p><img src="/img/remotenotification6.png" alt=""></p>
<h3 id="注册_Certificates">注册 Certificates</h3><p>开发推送选Apple Push Notification service SSL (Sandbox)，生产环境选Apple Push Notification service SSL (Production)</p>
<p>打开<code>developer.apple.com</code> - <code>Certificates</code> - <code>All</code> - <code>+</code> - <code>Apple Push Notification service SSL (Sandbox)</code> </p>
<p><img src="/img/remotenotification2.png" alt=""></p>
<p>选择上面配置的Bundle ID </p>
<p><img src="/img/remotenotification7.png" alt=""></p>
<p>上传生成的CSR文件</p>
<p><img src="/img/remotenotification8.png" alt=""></p>
<p>下载生成的证书，下载完成后，双击导入证书 <code>aps_development.cer</code></p>
<p><img src="/img/remotenotification9.png" alt=""></p>
<h3 id="注册测试设备_Devices">注册测试设备 Devices</h3><p>打开<code>developer.apple.com</code> - <code>Devices</code> - <code>+</code> 添加要测试的设备</p>
<p><img src="/img/remotenotification10.png" alt=""></p>
<h3 id="生成配置文件并下载_Provisioning_Profiles">生成配置文件并下载 Provisioning Profiles</h3><p>打开<code>developer.apple.com</code> - <code>Provisioning Profiles</code> -<code>All</code> - <code>+</code> </p>
<p>选择 iOS App Development</p>
<p><img src="/img/remotenotification11.png" alt=""></p>
<p>选择 App ID </p>
<p><img src="/img/remotenotification12.png" alt=""></p>
<p>选择证书</p>
<p><img src="/img/remotenotification13.png" alt=""></p>
<p>选择设备</p>
<p><img src="/img/remotenotification14.png" alt=""></p>
<p>添加配置文件名</p>
<p><img src="/img/remotenotification15.png" alt=""></p>
<p>下载保存，并双击配置文件</p>
<p><img src="/img/remotenotification16.png" alt=""></p>
<p>如果不双击导入，会出现下面的错误</p>
<p><img src="/img/remotenotification20.png" alt=""></p>
<h3 id="导出密钥">导出密钥</h3><p><code>Mac</code> - <code>钥匙串访问</code> - <code>找到我们双击导入的证书</code></p>
<p><img src="/img/remotenotification17.png" alt=""></p>
<p>设置文件名为<code>Push.p12</code>密码 <code>123456</code></p>
<p><img src="/img/remotenotification18.png" alt=""></p>
<h3 id="生成推送PEM文件">生成推送PEM文件</h3><p><code>Mac</code> - <code>终端</code> - <code>切换到刚才证书下载地址</code></p>
<p>把<code>aps_development.cer</code>的SSL证书转换为<code>PushCert.pem</code>文件:</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">openssl x509 -in aps_development.cer -inform der -out PushCert.pem</span><br></pre></td></tr></table></figure>
<p>把私钥<code>Push.p12</code>文件转化为<code>PushKey.pem</code>文件，在这里要输入原密码<code>123456</code>和设置新密码<code>123456</code>，可以设置不一样。</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">openssl pkcs12 -nocerts -out PushKey.pem -in Push.p12</span><br></pre></td></tr></table></figure>
<p>对生成的这两个pem文件再生成一个pem文件，来把证书和私钥整合到一个文件里：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat PushCert.pem PushKey.pem &gt; ck.pem</span><br></pre></td></tr></table></figure>
<h2 id="推送测试">推送测试</h2><p>下面我们要使用我们生成的SSL证书和私钥来设置一个安全的链接去链接苹果服务器：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">openssl s_client -connect gateway.sandbox.push.apple.com:<span class="number">2195</span> -cert PushCert.pem -key PushKey.pem</span><br></pre></td></tr></table></figure>
<p>执行完这一句命令后需要我们输入密语<br>Enter pass phrase for PushKey.pem:<br>我们输入<code>123456</code>按回车</p>
<p>返回 <code>Verify return code:0(ok)</code> 就成功了</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br></pre></td><td class="code"><pre><span class="line">CONNECTED(<span class="number">00000003</span>)</span><br><span class="line">depth=<span class="number">1</span> /C=US/O=Entrust, Inc./OU=www.entrust.net/rpa is incorporated by reference/OU=(c) <span class="number">2009</span> Entrust, Inc./CN=Entrust Certification Authority - L1C</span><br><span class="line">verify error:num=<span class="number">20</span>:unable to get <span class="built_in">local</span> issuer certificate</span><br><span class="line">verify <span class="built_in">return</span>:<span class="number">0</span></span><br><span class="line">---</span><br><span class="line">Certificate chain</span><br><span class="line"><span class="number">0</span> s:/C=US/ST=California/L=Cupertino/O=Apple Inc./CN=gateway.sandbox.push.apple.com</span><br><span class="line">i:/C=US/O=Entrust, Inc./OU=www.entrust.net/rpa is incorporated by reference/OU=(c) <span class="number">2009</span> Entrust, Inc./CN=Entrust Certification Authority - L1C</span><br><span class="line"><span class="number">1</span> s:/C=US/O=Entrust, Inc./OU=www.entrust.net/rpa is incorporated by reference/OU=(c) <span class="number">2009</span> Entrust, Inc./CN=Entrust Certification Authority - L1C</span><br><span class="line">i:/O=Entrust.net/OU=www.entrust.net/CPS_2048 incorp. by ref. (limits liab.)/OU=(c) <span class="number">1999</span> Entrust.net Limited/CN=Entrust.net Certification Authority (<span class="number">2048</span>)</span><br><span class="line">---</span><br><span class="line">Server certificate</span><br><span class="line">-----BEGIN CERTIFICATE-----</span><br><span class="line">MIIFMzCCBBugAwIBAgIETCMmsDANBgkqhkiG9w0BAQUFADCBsTELMAkGA1UEBhMC</span><br><span class="line">VVMxFjAUBgNVBAoTDUVudHJ1c3QsIEluYy4xOTA3BgNVBAsTMHd3dy5lbnRydXN0</span><br><span class="line">Lm5ldC9ycGEgaXMgaW5jb3Jwb3JhdGVkIGJ5IHJlZmVyZW5jZTEfMB0GA1UECxMW</span><br><span class="line">KGMpIDIwMDkgRW50cnVzdCwgSW5jLjEuMCwGA1UEAxMlRW50cnVzdCBDZXJ0aWZp</span><br><span class="line">Y2F0aW9uIEF1dGhvcml0eSAtIEwxQzAeFw0xNDA1MjMxNzQyNDJaFw0xNjA1MjQw</span><br><span class="line">NzA1MTNaMHQxCzAJBgNVBAYTAlVTMRMwEQYDVQQIEwpDYWxpZm9ybmlhMRIwEAYD</span><br><span class="line">VQQHEwlDdXBlcnRpbm8xEzARBgNVBAoTCkFwcGxlIEluYy4xJzAlBgNVBAMTHmdh</span><br><span class="line">dGV3YXkuc2FuZGJveC5wdXNoLmFwcGxlLmNvbTCCASIwDQYJKoZIhvcNAQEBBQAD</span><br><span class="line">ggEPADCCAQoCggEBAOQpUlXpU3+LJ2XR01QdVooN7S9OFOINp3/tomPaenQAwFGo</span><br><span class="line">qIakKFcN7AotWLFXFcR0QXKJkn4PL/zPKDBucyRFkc79S5+ZraGRISW<span class="keyword">fi</span>7G8XeaG</span><br><span class="line">G3GzgeVQ977Qrn0IdCswnbwLsJoErnmq4AveQajUbYueR9SxhkWBwMimSxXzXoOS</span><br><span class="line">XUOPzRvzObCxVZrvBBDSRJCeNVnVxtCmb17DM3+z5GZatBwWnvw0jgvSQsgof+uC</span><br><span class="line">idXgqcN4msv3tVH54ipmuD9kbbwvtnDCHBZRXMMmhUfFXZRuE8GBEbPfVkqB16ad</span><br><span class="line">JV4TVrVxwFENwdnsX9CXavHCgFJhtHRWKOoCH48CAwEAAaOCAY0wggGJMAsGA1Ud</span><br><span class="line">DwQEAwIFoDAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwMwYDVR0fBCww</span><br><span class="line">KjAooCagJIYiaHR0cDovL2NybC5lbnRydXN0Lm5ldC9sZXZlbDFjLmNybDBkBggr</span><br><span class="line">BgEFBQcBAQRYMFYwIwYIKwYBBQUHMAGGF2h0dHA6Ly9vY3NwLmVudHJ1c3QubmV0</span><br><span class="line">MC8GCCsGAQUFBzAChiNodHRwOi8vYWlhLmVudHJ1c3QubmV0LzIwNDgtbDFjLmNl</span><br><span class="line">cjBKBgNVHSAEQzBBMDUGCSqGSIb2fQdLAjAoMCYGCCsGAQUFBwIBFhpodHRwOi8v</span><br><span class="line">d3d3LmVudHJ1c3QubmV0L3JwYTAIBgZngQwBAgIwKQYDVR0RBCIwIIIeZ2F0ZXdh</span><br><span class="line">eS5zYW5kYm94LnB1c2guYXBwbGUuY29tMB8GA1UdIwQYMBaAFB7xq4kG+EkPATN3</span><br><span class="line"><span class="number">7</span>hR67hl8kyhNMB0GA1UdDgQWBBSSGfpGPmr9+FPcqRiStH0iKRBL7DAJBgNVHRME</span><br><span class="line">AjAAMA0GCSqGSIb3DQEBBQUAA4IBAQAkj6+okMFVl7NHqQoii4e4iPDFiia+LmHX</span><br><span class="line">BCc+<span class="number">2</span>UEOOjilYWYoZ61oeqRXQ2b4Um3dT/LPmzMkKmgEt9epKNBLA6lSkL+IzEnF</span><br><span class="line">wLQCHkL3BgvV20n5D8syzREV+<span class="number">8</span>RKmSqiYmrF8dFq8cDcstu2joEKd173EfrymWW1</span><br><span class="line">fMeaYTbjrn+vNkgM94+M4c/JnIDOhiPPbeAx9TESQZH+/<span class="number">6</span>S98hrbuPIIlmaOJsOT</span><br><span class="line">GMOUWeOTHXTCfGb1EM4SPVcyCW28TlWUBl8miqnsEO8g95jZZ25wFANlVxhfxBnP</span><br><span class="line">fwUYU5NTM3h0xi3rIlXwAKD6zLKipcQ/YXRx7oMYnAm53tfU2MxV</span><br><span class="line">-----END CERTIFICATE-----</span><br><span class="line">subject=/C=US/ST=California/L=Cupertino/O=Apple Inc./CN=gateway.sandbox.push.apple.com</span><br><span class="line">issuer=/C=US/O=Entrust, Inc./OU=www.entrust.net/rpa is incorporated by reference/OU=(c) <span class="number">2009</span> Entrust, Inc./CN=Entrust Certification Authority - L1C</span><br><span class="line">---</span><br><span class="line">Acceptable client certificate CA names</span><br><span class="line">/C=US/O=Apple Inc./OU=Apple Certification Authority/CN=Apple Root CA</span><br><span class="line">/C=US/O=Apple Inc./OU=Apple Worldwide Developer Relations/CN=Apple Worldwide Developer Relations Certification Authority</span><br><span class="line">/C=US/O=Apple Inc./OU=Apple Certification Authority/CN=Apple Application Integration Certification Authority</span><br><span class="line">---</span><br><span class="line">SSL handshake has <span class="built_in">read</span> <span class="number">3160</span> bytes and written <span class="number">2155</span> bytes</span><br><span class="line">---</span><br><span class="line">New, TLSv1/SSLv3, Cipher is AES256-SHA</span><br><span class="line">Server public key is <span class="number">2048</span> bit</span><br><span class="line">Secure Renegotiation IS supported</span><br><span class="line">Compression: NONE</span><br><span class="line">Expansion: NONE</span><br><span class="line">SSL-Session:</span><br><span class="line">Protocol  : TLSv1</span><br><span class="line">Cipher    : AES256-SHA</span><br><span class="line">Session-ID: </span><br><span class="line">Session-ID-ctx: </span><br><span class="line">Master-Key: <span class="number">208</span>E318208EB463C7F924DFDA0E80C82FC7A6B04CE89FE7AE0D99C789DE653F20F6B7FB8073C3DBBF6ED74F90A4B389D</span><br><span class="line">Key-Arg   : None</span><br><span class="line">Start Time: <span class="number">1442292792</span></span><br><span class="line">Timeout   : <span class="number">300</span> (sec)</span><br><span class="line">Verify <span class="built_in">return</span> code: <span class="number">0</span> (ok)</span><br><span class="line">---</span><br></pre></td></tr></table></figure>
<h2 id="项目测试">项目测试</h2><p>建立我们的推送的项目 <em><code>注意Bundle Identifier必须和我们推送应用的Bundle Identifier一致</code></em></p>
<p><img src="/img/remotenotification19.png" alt=""></p>
<p>iOS 8 以上在AppDelegate获得远程通知权限并注册的方法：</p>
<figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">@implementation</span> <span class="title">AppDelegate</span></span></span><br><span class="line"></span><br><span class="line">- (<span class="built_in">BOOL</span>)application:(<span class="built_in">UIApplication</span> *)application didFinishLaunchingWithOptions:(<span class="built_in">NSDictionary</span> *)launchOptions</span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">// 注册远程通知</span></span><br><span class="line">    <span class="built_in">UIUserNotificationType</span> types = <span class="built_in">UIUserNotificationTypeBadge</span> |</span><br><span class="line">    <span class="built_in">UIUserNotificationTypeSound</span> | <span class="built_in">UIUserNotificationTypeAlert</span>;</span><br><span class="line">    <span class="built_in">UIUserNotificationSettings</span> *mySettings =</span><br><span class="line">    [<span class="built_in">UIUserNotificationSettings</span> settingsForTypes:types categories:<span class="literal">nil</span>];</span><br><span class="line">    [[<span class="built_in">UIApplication</span> sharedApplication] registerUserNotificationSettings:mySettings];</span><br><span class="line">    [[<span class="built_in">UIApplication</span> sharedApplication] registerForRemoteNotifications];</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="literal">YES</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 获取DeviceToken成功</span></span><br><span class="line">- (<span class="keyword">void</span>)application:(<span class="built_in">UIApplication</span> *)application</span><br><span class="line">didRegisterForRemoteNotificationsWithDeviceToken:(<span class="built_in">NSData</span> *)deviceToken</span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">NSLog</span>(<span class="string">@"DeviceToken : %@"</span>,deviceToken);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 注册消息推送失败</span></span><br><span class="line">- (<span class="keyword">void</span>)application:(<span class="built_in">UIApplication</span> *)application</span><br><span class="line">didFailToRegisterForRemoteNotificationsWithError:(<span class="built_in">NSError</span> *)error</span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">NSLog</span>(<span class="string">@"Register Remote Notifications error : %@"</span>,error);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 处理收到的消息推送</span></span><br><span class="line">- (<span class="keyword">void</span>)application:(<span class="built_in">UIApplication</span> *)application</span><br><span class="line">didReceiveRemoteNotification:(<span class="built_in">NSDictionary</span> *)userInfo</span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">NSLog</span>(<span class="string">@"Receive remote notification : %@"</span>,userInfo);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">@end</span></span><br></pre></td></tr></table></figure>
<p>完成后，启动一次App,申请权限 </p>
<p><img src="/img/remotenotification21.jpg" alt=""></p>
<p>新建一个和<code>ck.pem</code>在同一个目录下的<code>push.php</code>文件</p>
<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// Put your device token here (without spaces):</span></span><br><span class="line"><span class="variable">$deviceToken</span> = <span class="string">'74314cc9e8f747e2fa96c2c1585c830cdf994de6b453ce9fa1c09ba396b2f9e9'</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Put your private key's passphrase here:</span></span><br><span class="line"><span class="variable">$passphrase</span> = <span class="string">'123456'</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Put your alert message here:</span></span><br><span class="line"><span class="variable">$message</span> = <span class="string">'这是一条推送消息'</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">////////////////////////////////////////////////////////////////////////////////</span></span><br><span class="line"></span><br><span class="line"><span class="variable">$ctx</span> = stream_context_create();</span><br><span class="line">stream_context_set_option(<span class="variable">$ctx</span>, <span class="string">'ssl'</span>, <span class="string">'local_cert'</span>, <span class="string">'ck.pem'</span>);</span><br><span class="line">stream_context_set_option(<span class="variable">$ctx</span>, <span class="string">'ssl'</span>, <span class="string">'passphrase'</span>, <span class="variable">$passphrase</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// Open a connection to the APNS server</span></span><br><span class="line"><span class="variable">$fp</span> = stream_socket_client(</span><br><span class="line"><span class="string">'ssl://gateway.sandbox.push.apple.com:2195'</span>, <span class="variable">$err</span>,</span><br><span class="line"><span class="variable">$errstr</span>, <span class="number">60</span>, STREAM_CLIENT_CONNECT|STREAM_CLIENT_PERSISTENT, <span class="variable">$ctx</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (!<span class="variable">$fp</span>)</span><br><span class="line"><span class="keyword">exit</span>(<span class="string">"Failed to connect: $err $errstr"</span> . PHP_EOL);</span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> <span class="string">'Connected to APNS'</span> . PHP_EOL;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Create the payload body</span></span><br><span class="line"><span class="variable">$body</span>[<span class="string">'aps'</span>] = <span class="keyword">array</span>(</span><br><span class="line"><span class="string">'alert'</span> =&gt; <span class="variable">$message</span>,</span><br><span class="line"><span class="string">'sound'</span> =&gt; <span class="string">'default'</span></span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="comment">// Encode the payload as JSON</span></span><br><span class="line"><span class="variable">$payload</span> = json_encode(<span class="variable">$body</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// Build the binary notification</span></span><br><span class="line"><span class="variable">$msg</span> = chr(<span class="number">0</span>) . pack(<span class="string">'n'</span>, <span class="number">32</span>) . pack(<span class="string">'H*'</span>, <span class="variable">$deviceToken</span>) . pack(<span class="string">'n'</span>, strlen(<span class="variable">$payload</span>)) . <span class="variable">$payload</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Send it to the server</span></span><br><span class="line"><span class="variable">$result</span> = fwrite(<span class="variable">$fp</span>, <span class="variable">$msg</span>, strlen(<span class="variable">$msg</span>));</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (!<span class="variable">$result</span>)</span><br><span class="line"><span class="keyword">echo</span> <span class="string">'Message not delivered'</span> . PHP_EOL;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="keyword">echo</span> <span class="string">'Message successfully delivered'</span> . PHP_EOL;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Close the connection to the server</span></span><br><span class="line">fclose(<span class="variable">$fp</span>);</span><br><span class="line"></span><br><span class="line"><span class="preprocessor">?&gt;</span></span><br></pre></td></tr></table></figure>
<p>切换到<code>push.php</code>所在目录,输入命令</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">php push.php</span><br></pre></td></tr></table></figure>
<p>提示下面信息就可以收到推送了</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Lecasons-RMBP:Push lecason$ php push.php</span><br><span class="line">Connected to APNS</span><br><span class="line">Message successfully delivered</span><br><span class="line">Lecasons-RMBP:Push lecason$</span><br></pre></td></tr></table></figure>
<p>这时候手机就可以收到推送消息了，测试效果：</p>
<p><img src="/img/remotenotification22.jpg" alt=""></p>
<h2 id="个推测试">个推测试</h2><p>新建一个<code>App</code> <code>应用标识</code> 要和 <code>Bundle ID</code> 一致</p>
<p><img src="/img/remotenotification23.png" alt=""></p>
<p>参考<a href="http://docs.igetui.com/pages/viewpage.action?pageId=1934126" target="_blank" rel="external">个推官方集成文档</a>集成到我们的应用里面。</p>
<p>导入<code>dist</code>文件夹和<code>所有的库文件</code>后，填好从个推上申请到的<code>AppId</code> <code>AppKey</code> <code>AppSecret</code></p>
<p><code>AppDelegate.h</code>:</p>
<figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor">#import <span class="title">&lt;UIKit/UIKit.h&gt;</span></span></span><br><span class="line"><span class="preprocessor">#import <span class="title">"GeTuiSdk.h"</span></span></span><br><span class="line"></span><br><span class="line"><span class="preprocessor">#define kAppId           @<span class="title">"PntQOqaY8H69wtmvYYjBJA"</span></span></span><br><span class="line"><span class="preprocessor">#define kAppKey          @<span class="title">"v3evaqV8Ll8DNJeb4f5o74"</span></span></span><br><span class="line"><span class="preprocessor">#define kAppSecret       @<span class="title">"82KMEAqBWt6Bntxz2L9Wd8"</span></span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">@interface</span> <span class="title">AppDelegate</span> : <span class="title">UIResponder</span> &lt;<span class="title">UIApplicationDelegate</span>,<span class="title">GeTuiSdkDelegate</span>&gt; </span>&#123;</span><br><span class="line"><span class="keyword">@private</span></span><br><span class="line"><span class="built_in">NSString</span> *_deviceToken;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">@property</span> (<span class="keyword">strong</span>, <span class="keyword">nonatomic</span>) <span class="built_in">UIWindow</span> *window;</span><br><span class="line"></span><br><span class="line"><span class="keyword">@property</span> (retain, <span class="keyword">nonatomic</span>) <span class="built_in">NSString</span> *appKey;</span><br><span class="line"><span class="keyword">@property</span> (retain, <span class="keyword">nonatomic</span>) <span class="built_in">NSString</span> *appSecret;</span><br><span class="line"><span class="keyword">@property</span> (retain, <span class="keyword">nonatomic</span>) <span class="built_in">NSString</span> *appID;</span><br><span class="line"><span class="keyword">@property</span> (retain, <span class="keyword">nonatomic</span>) <span class="built_in">NSString</span> *clientId;</span><br><span class="line"></span><br><span class="line"><span class="keyword">@end</span></span><br></pre></td></tr></table></figure>
<p><code>AppDelegate.m</code>:</p>
<figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor">#import <span class="title">"AppDelegate.h"</span></span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">@interface</span> <span class="title">AppDelegate</span> ()</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">@end</span></span><br><span class="line"></span><br><span class="line"><span class="preprocessor">#define NotifyActionKey <span class="title">"NotifyAction"</span></span></span><br><span class="line"><span class="built_in">NSString</span>* <span class="keyword">const</span> NotificationCategoryIdent  = <span class="string">@"ACTIONABLE"</span>;</span><br><span class="line"><span class="built_in">NSString</span>* <span class="keyword">const</span> NotificationActionOneIdent = <span class="string">@"ACTION_ONE"</span>;</span><br><span class="line"><span class="built_in">NSString</span>* <span class="keyword">const</span> NotificationActionTwoIdent = <span class="string">@"ACTION_TWO"</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">@implementation</span> <span class="title">AppDelegate</span></span></span><br><span class="line"></span><br><span class="line">- (<span class="built_in">BOOL</span>)application:(<span class="built_in">UIApplication</span> *)application didFinishLaunchingWithOptions:(<span class="built_in">NSDictionary</span> *)launchOptions</span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">// [1]:使用APPID/APPKEY/APPSECRENT创建个推实例</span></span><br><span class="line">    [<span class="keyword">self</span> startSdkWith:kAppId appKey:kAppKey appSecret:kAppSecret];</span><br><span class="line"></span><br><span class="line">    <span class="comment">// [2]:注册APNS</span></span><br><span class="line">    [<span class="keyword">self</span> registerRemoteNotification];</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="literal">YES</span>;</span><br><span class="line">&#125;</span><br><span class="line">- (<span class="keyword">void</span>)registerRemoteNotification </span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> ([[[<span class="built_in">UIDevice</span> currentDevice] systemVersion] floatValue] &gt;= <span class="number">8.0</span>) &#123;</span><br><span class="line">        <span class="comment">//IOS8 新的通知机制category注册</span></span><br><span class="line">        <span class="built_in">UIMutableUserNotificationAction</span> *action1;</span><br><span class="line">        action1 = [[<span class="built_in">UIMutableUserNotificationAction</span> alloc] init];</span><br><span class="line">        [action1 setActivationMode:<span class="built_in">UIUserNotificationActivationModeBackground</span>];</span><br><span class="line">        [action1 setTitle:<span class="string">@"取消"</span>];</span><br><span class="line">        [action1 setIdentifier:NotificationActionOneIdent];</span><br><span class="line">        [action1 setDestructive:<span class="literal">NO</span>];</span><br><span class="line">        [action1 setAuthenticationRequired:<span class="literal">NO</span>];</span><br><span class="line"></span><br><span class="line">        <span class="built_in">UIMutableUserNotificationAction</span> *action2;</span><br><span class="line">        action2 = [[<span class="built_in">UIMutableUserNotificationAction</span> alloc] init];</span><br><span class="line">        [action2 setActivationMode:<span class="built_in">UIUserNotificationActivationModeBackground</span>];</span><br><span class="line">        [action2 setTitle:<span class="string">@"回复"</span>];</span><br><span class="line">        [action2 setIdentifier:NotificationActionTwoIdent];</span><br><span class="line">        [action2 setDestructive:<span class="literal">NO</span>];</span><br><span class="line">        [action2 setAuthenticationRequired:<span class="literal">NO</span>];</span><br><span class="line"></span><br><span class="line">        <span class="built_in">UIMutableUserNotificationCategory</span> *actionCategory;</span><br><span class="line">        actionCategory = [[<span class="built_in">UIMutableUserNotificationCategory</span> alloc] init];</span><br><span class="line">        [actionCategory setIdentifier:NotificationCategoryIdent];</span><br><span class="line">        [actionCategory setActions:@[action1, action2]</span><br><span class="line">        forContext:<span class="built_in">UIUserNotificationActionContextDefault</span>];</span><br><span class="line"></span><br><span class="line">        <span class="built_in">NSSet</span> *categories = [<span class="built_in">NSSet</span> setWithObject:actionCategory];</span><br><span class="line">        <span class="built_in">UIUserNotificationType</span> types = (<span class="built_in">UIUserNotificationTypeAlert</span>|</span><br><span class="line">        <span class="built_in">UIUserNotificationTypeSound</span>|</span><br><span class="line">        <span class="built_in">UIUserNotificationTypeBadge</span>);</span><br><span class="line"></span><br><span class="line">        <span class="built_in">UIUserNotificationSettings</span> *settings;</span><br><span class="line">        settings = [<span class="built_in">UIUserNotificationSettings</span> settingsForTypes:types categories:categories];</span><br><span class="line">        [[<span class="built_in">UIApplication</span> sharedApplication] registerForRemoteNotifications];</span><br><span class="line">        [[<span class="built_in">UIApplication</span> sharedApplication] registerUserNotificationSettings:settings];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 获取DeviceToken成功</span></span><br><span class="line">- (<span class="keyword">void</span>)application:(<span class="built_in">UIApplication</span> *)application didRegisterForRemoteNotificationsWithDeviceToken:(<span class="built_in">NSData</span>*)deviceToken</span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">NSString</span> *token = [[deviceToken description] stringByTrimmingCharactersInSet:[<span class="built_in">NSCharacterSet</span> characterSetWithCharactersInString:<span class="string">@"&lt;&gt;"</span>]];</span><br><span class="line">    _deviceToken = [token stringByReplacingOccurrencesOfString:<span class="string">@" "</span> withString:<span class="string">@""</span>];</span><br><span class="line">    <span class="built_in">NSLog</span>(<span class="string">@"deviceToken:%@"</span>, _deviceToken);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// [3]:向个推服务器注册deviceToken</span></span><br><span class="line">    [GeTuiSdk registerDeviceToken:_deviceToken];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">- (<span class="keyword">void</span>)GeTuiSdkDidRegisterClient:(<span class="built_in">NSString</span> *)clientId</span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">// [4-EXT-1]: 个推SDK已注册，返回clientId</span></span><br><span class="line">    <span class="keyword">if</span> (_deviceToken) &#123;</span><br><span class="line">        [GeTuiSdk registerDeviceToken:_deviceToken];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 注册消息推送失败</span></span><br><span class="line">- (<span class="keyword">void</span>)application:(<span class="built_in">UIApplication</span> *)application</span><br><span class="line">didFailToRegisterForRemoteNotificationsWithError:(<span class="built_in">NSError</span> *)error</span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">NSLog</span>(<span class="string">@"Register Remote Notifications error : %@"</span>,error);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 处理收到的消息推送</span></span><br><span class="line">- (<span class="keyword">void</span>)application:(<span class="built_in">UIApplication</span> *)application</span><br><span class="line">didReceiveRemoteNotification:(<span class="built_in">NSDictionary</span> *)userInfo</span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">NSLog</span>(<span class="string">@"Receive remote notification : %@"</span>,userInfo);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">- (<span class="keyword">void</span>)startSdkWith:(<span class="built_in">NSString</span> *)appID appKey:(<span class="built_in">NSString</span> *)appKey appSecret:(<span class="built_in">NSString</span> *)appSecret</span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">NSError</span> *err = <span class="literal">nil</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//[1-1]:通过 AppId、 appKey 、appSecret 启动SDK</span></span><br><span class="line">    [GeTuiSdk startSdkWithAppId:appID appKey:appKey appSecret:appSecret delegate:<span class="keyword">self</span> error:&amp;err];</span><br><span class="line"></span><br><span class="line">    <span class="comment">//[1-2]:设置是否后台运行开关</span></span><br><span class="line">    [GeTuiSdk runBackgroundEnable:<span class="literal">YES</span>];</span><br><span class="line">    <span class="comment">//[1-3]:设置电子围栏功能，开启LBS定位服务 和 是否允许SDK 弹出用户定位请求</span></span><br><span class="line">    [GeTuiSdk lbsLocationEnable:<span class="literal">YES</span> andUserVerify:<span class="literal">YES</span>];</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">-(<span class="keyword">void</span>)applicationDidEnterBackground:(<span class="built_in">UIApplication</span> *)application</span><br><span class="line">    &#123;</span><br><span class="line">    <span class="comment">// [EXT] APP进入后台时，通知个推SDK进入后台</span></span><br><span class="line">    [GeTuiSdk enterBackground];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">@end</span></span><br></pre></td></tr></table></figure>
<p>运行APP，成功后会提示</p>
<p><img src="/img/remotenotification24.png" alt=""></p>
<p>发送透传消息</p>
<p><img src="/img/remotenotification25.png" alt=""></p>
]]></content>
    <summary type="html">
    <![CDATA[<h2 id="注册推送证书">注册推送证书</h2><p>我们的客户端与苹果服务器之间和我们自己的服务器与苹果服务器之间都需要证书来进行链接。下面我们来开始进入证书的制作过程。</p>
<h3 id="生成CSR文件">生成CSR文件</h3><p>打开<code>MAC</c]]>
    </summary>
    
      <category term="iOS" scheme="http://lecason.com/tags/iOS/"/>
    
      <category term="iOS" scheme="http://lecason.com/categories/iOS/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Debug 导入自定义库提示 Library not loaded]]></title>
    <link href="http://lecason.com/2015/09/14/Debug-Libray-not-loaded/"/>
    <id>http://lecason.com/2015/09/14/Debug-Libray-not-loaded/</id>
    <published>2015-09-14T04:57:02.000Z</published>
    <updated>2015-09-14T05:14:10.000Z</updated>
    <content type="html"><![CDATA[<p>导入自定义的库的时候，提示错误</p>
<figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">dyld:</span> Library not <span class="string">loaded:</span> <span class="regexp">/System/</span>Library<span class="regexp">/Frameworks/</span>Chart.framework/Social</span><br><span class="line">Referenced <span class="string">from:</span> <span class="regexp">/var/</span>mobile<span class="regexp">/Applications/</span><span class="number">00</span>D3E0A7-<span class="number">4</span>FF6-<span class="number">451</span>E-B11C-<span class="number">87</span>D7A189F425<span class="regexp">/sample.app/</span>sample</span><br><span class="line"><span class="string">dyld:</span> Library not <span class="string">loaded:</span> <span class="regexp">/System/</span>Library<span class="regexp">/Frameworks/</span>Chart.framework/Social</span><br><span class="line">Referenced <span class="string">from:</span> <span class="regexp">/var/</span>mobile<span class="regexp">/Applications/</span><span class="number">00</span>D3E0A7-<span class="number">4</span>FF6-<span class="number">451</span>E-B11C-<span class="number">87</span>D7A189F425<span class="regexp">/sample.app/</span>sample</span><br><span class="line"><span class="string">Reason:</span> image not found</span><br></pre></td></tr></table></figure>
<p>这时候如图点击<code>+</code> - <code>New Headers Phase</code></p>
<p><img src="/img/imagenotfound1.png" alt=""></p>
<p>再在 <code>Copy Files (0 item)</code> Destination里面选择 <code>Frameworks</code>，<code>+</code>号里面选择<code>自定义的库</code></p>
<p><img src="/img/imagenotfound2.png" alt=""></p>
<p>如果还不行可以尝试把<code>Build Phases</code> - <code>Link Binary With Libraries</code> 里<code>Chart.framework</code>后边的选项修改成为<code>Optional</code></p>
]]></content>
    <summary type="html">
    <![CDATA[<p>导入自定义的库的时候，提示错误</p>
<figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line"]]>
    </summary>
    
      <category term="Debug" scheme="http://lecason.com/tags/Debug/"/>
    
      <category term="Debug" scheme="http://lecason.com/categories/Debug/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[iOS 自定义导航栏标题]]></title>
    <link href="http://lecason.com/2015/09/11/iOS-Custom-backBarButtonItem/"/>
    <id>http://lecason.com/2015/09/11/iOS-Custom-backBarButtonItem/</id>
    <published>2015-09-11T12:45:10.000Z</published>
    <updated>2015-09-11T12:55:44.000Z</updated>
    <content type="html"><![CDATA[<p>在OC的时候很容易就设置导航栏的返回按钮标题</p>
<figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 返回按钮</span></span><br><span class="line"><span class="built_in">UIBarButtonItem</span> *backItem = [[<span class="built_in">UIBarButtonItem</span> alloc] init];</span><br><span class="line">backItem<span class="variable">.title</span> = <span class="string">@""</span>;</span><br><span class="line"><span class="keyword">self</span><span class="variable">.navigationItem</span><span class="variable">.backBarButtonItem</span> = backItem;</span><br></pre></td></tr></table></figure>
<p>但在Swift下试过很多方法都不行</p>
<figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> barBack = <span class="type">UIBarButtonItem</span>(title: <span class="string">"Reset"</span>, style: <span class="type">UIBarButtonItemStyle</span>.<span class="type">Plain</span>, target: <span class="keyword">self</span>, action: <span class="string">"reset:"</span>)</span><br><span class="line"><span class="keyword">self</span>.navigationItem.leftBarButtonItem = barBack</span><br></pre></td></tr></table></figure>
<p>或者</p>
<figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">self</span>.navigationItem.backBarButtonItem.title = <span class="string">"Reset"</span></span><br></pre></td></tr></table></figure>
<p>最后只能在pushViewController前设置NavigationBar自身的Title为空</p>
<figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="func"><span class="keyword">func</span> <span class="title">presentShareViewController</span><span class="params">()</span></span> &#123;</span><br><span class="line">    <span class="keyword">var</span> shareVC: <span class="type">HWShareViewController</span> = <span class="type">HWShareViewController</span>()</span><br><span class="line">    title = <span class="string">""</span></span><br><span class="line">    <span class="keyword">self</span>.navigationController?.pushViewController(shareVC, animated: <span class="literal">true</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    <summary type="html">
    <![CDATA[<p>在OC的时候很容易就设置导航栏的返回按钮标题</p>
<figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span c]]>
    </summary>
    
      <category term="iOS" scheme="http://lecason.com/tags/iOS/"/>
    
      <category term="iOS" scheme="http://lecason.com/categories/iOS/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[iOS 创建UIImageView圆形头像并添加边框]]></title>
    <link href="http://lecason.com/2015/09/11/iOS-Create-Round-Photo-And-Boder/"/>
    <id>http://lecason.com/2015/09/11/iOS-Create-Round-Photo-And-Boder/</id>
    <published>2015-09-11T06:57:19.000Z</published>
    <updated>2015-09-11T06:59:29.000Z</updated>
    <content type="html"><![CDATA[<h2 id="Swift_版本">Swift 版本</h2><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">override</span> <span class="func"><span class="keyword">func</span> <span class="title">viewDidLoad</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="keyword">super</span>.viewDidLoad()</span><br><span class="line"></span><br><span class="line"><span class="comment">// 圆形头像</span></span><br><span class="line"><span class="keyword">var</span> avater: <span class="type">UIImageView</span> = <span class="type">UIImageView</span>(frame: <span class="type">CGRectMake</span>(<span class="number">60</span>, <span class="number">85</span>, <span class="number">60</span>, <span class="number">60</span>))</span><br><span class="line">avater.image = <span class="type">UIImage</span>(named: <span class="string">"avater"</span>)</span><br><span class="line"><span class="keyword">var</span> path: <span class="type">UIBezierPath</span> = <span class="type">UIBezierPath</span>(arcCenter: <span class="type">CGPointMake</span>(<span class="number">30</span>, <span class="number">30</span>), radius: <span class="number">30</span>, startAngle: <span class="number">0</span>, endAngle: <span class="number">720</span> , clockwise: <span class="literal">true</span>)</span><br><span class="line"><span class="keyword">var</span> shape: <span class="type">CAShapeLayer</span> = <span class="type">CAShapeLayer</span>(layer: <span class="literal">nil</span>)</span><br><span class="line">shape.path = path.<span class="type">CGPath</span></span><br><span class="line">avater.layer.mask = shape</span><br><span class="line"></span><br><span class="line"><span class="comment">// 圆形背景</span></span><br><span class="line"><span class="keyword">var</span> avaterbg: <span class="type">UIImageView</span> = <span class="type">UIImageView</span>(frame: <span class="type">CGRectMake</span>(<span class="number">10</span>, <span class="number">35</span>, <span class="number">64</span>, <span class="number">64</span>))</span><br><span class="line">avaterbg.backgroundColor = <span class="type">UIColor</span>.whiteColor()</span><br><span class="line">avaterbg.center = avater.center</span><br><span class="line"><span class="keyword">var</span> pathbg: <span class="type">UIBezierPath</span> = <span class="type">UIBezierPath</span>(arcCenter: <span class="type">CGPointMake</span>(<span class="number">32</span>, <span class="number">32</span>), radius: <span class="number">32</span>, startAngle: <span class="number">0</span>, endAngle: <span class="number">720</span> , clockwise: <span class="literal">true</span>)</span><br><span class="line"><span class="keyword">var</span> shapebg: <span class="type">CAShapeLayer</span> = <span class="type">CAShapeLayer</span>(layer: <span class="literal">nil</span>)</span><br><span class="line">shapebg.path = pathbg.<span class="type">CGPath</span></span><br><span class="line">avaterbg.layer.mask = shapebg</span><br><span class="line"></span><br><span class="line"><span class="keyword">self</span>.view.addSubview(avaterbg)</span><br><span class="line"><span class="keyword">self</span>.view.addSubview(avater)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>效果，<code>UIBezierPath</code>还是有锯齿<br><img src="/img/roundavater1.png" alt=""></p>
]]></content>
    <summary type="html">
    <![CDATA[<h2 id="Swift_版本">Swift 版本</h2><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class]]>
    </summary>
    
      <category term="iOS" scheme="http://lecason.com/tags/iOS/"/>
    
      <category term="iOS" scheme="http://lecason.com/categories/iOS/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Swift 自定义TableViewCell]]></title>
    <link href="http://lecason.com/2015/09/11/Swift-Custom-TablewViewCell/"/>
    <id>http://lecason.com/2015/09/11/Swift-Custom-TablewViewCell/</id>
    <published>2015-09-11T05:16:14.000Z</published>
    <updated>2015-09-11T05:38:44.000Z</updated>
    <content type="html"><![CDATA[<h2 id="在_LeftMenuViewController_里面_创建延迟加载_tableView_属性">在 LeftMenuViewController 里面 创建延迟加载 tableView 属性</h2><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">LeftMenuViewController</span>: <span class="title">UIViewController</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    lazy <span class="keyword">var</span> tableView: <span class="type">UITableView</span> = &#123;</span><br><span class="line">    <span class="keyword">let</span> tableView = <span class="type">UITableView</span>()</span><br><span class="line">    tableView.delegate = <span class="keyword">self</span></span><br><span class="line">    tableView.dataSource = <span class="keyword">self</span></span><br><span class="line">    tableView.separatorStyle = .<span class="type">None</span></span><br><span class="line">    tableView.frame = <span class="type">CGRectMake</span>(<span class="number">20</span>, (<span class="keyword">self</span>.view.frame.size.height - <span class="number">54</span> * <span class="number">5</span>) / <span class="number">2.0</span>, <span class="keyword">self</span>.view.frame.size.width, <span class="number">54</span> * <span class="number">5</span>)</span><br><span class="line">    tableView.autoresizingMask = .<span class="type">FlexibleTopMargin</span> | .<span class="type">FlexibleBottomMargin</span> | .<span class="type">FlexibleWidth</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 注册我们复用的HWLeftTableViewCell</span></span><br><span class="line">    tableView.registerClass(<span class="type">HWLeftTableViewCell</span>.<span class="keyword">self</span>, forCellReuseIdentifier: <span class="string">"cell"</span>)</span><br><span class="line">    </span><br><span class="line">    tableView.opaque = <span class="literal">false</span></span><br><span class="line">    tableView.backgroundColor = <span class="type">UIColor</span>.clearColor()</span><br><span class="line">    tableView.backgroundView = <span class="literal">nil</span></span><br><span class="line">    tableView.bounces = <span class="literal">false</span></span><br><span class="line">    <span class="keyword">return</span> tableView</span><br><span class="line">    &#125;()</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="viewDidLoad()里面加载_tableView">viewDidLoad()里面加载 tableView</h2><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">override</span> <span class="func"><span class="keyword">func</span> <span class="title">viewDidLoad</span><span class="params">()</span></span> &#123;</span><br><span class="line">    <span class="keyword">super</span>.viewDidLoad()</span><br><span class="line">    view.addSubview(tableView)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="扩展_extension">扩展 extension</h2><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">extension</span> <span class="title">LeftMenuViewController</span>: <span class="title">UITableViewDelegate</span>, <span class="title">UITableViewDataSource</span> </span>&#123;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 行数</span></span><br><span class="line">    <span class="func"><span class="keyword">func</span> <span class="title">tableView</span><span class="params">(tableView: UITableView, numberOfRowsInSection section: Int)</span></span> -&gt; <span class="type">Int</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">4</span></span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 行高</span></span><br><span class="line">    <span class="func"><span class="keyword">func</span> <span class="title">tableView</span><span class="params">(tableView: UITableView, heightForRowAtIndexPath indexPath: NSIndexPath)</span></span> -&gt; <span class="type">CGFloat</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">54</span></span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// Cell内容</span></span><br><span class="line">    <span class="func"><span class="keyword">func</span> <span class="title">tableView</span><span class="params">(tableView: UITableView, cellForRowAtIndexPath indexPath: NSIndexPath)</span></span> -&gt; <span class="type">UITableViewCell</span> &#123;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 重用我们的Cell</span></span><br><span class="line">        <span class="keyword">let</span> cell = tableView.dequeueReusableCellWithIdentifier(<span class="string">"cell"</span>, forIndexPath: indexPath) <span class="keyword">as</span>! <span class="type">HWLeftTableViewCell</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">let</span> titles: [<span class="type">String</span>] = [<span class="string">"电话提醒"</span>, <span class="string">"信息提醒"</span>, <span class="string">"闹钟设置"</span>, <span class="string">"蓝牙同步"</span>]</span><br><span class="line">        <span class="keyword">let</span> images: [<span class="type">String</span>] = [<span class="string">"left_phone"</span>, <span class="string">"left_message"</span>, <span class="string">"left_clock"</span>, <span class="string">"left_bluetooth"</span>]</span><br><span class="line"></span><br><span class="line">        cell.backgroundColor = <span class="type">UIColor</span>.clearColor()</span><br><span class="line">        cell.textLabel?.font = <span class="type">UIFont</span>(name: <span class="string">"HelveticaNeue"</span>, size: <span class="number">16</span>)</span><br><span class="line">        cell.textLabel?.textColor = <span class="type">UIColor</span>.whiteColor()</span><br><span class="line">        cell.textLabel?.text  = titles[indexPath.row]</span><br><span class="line">        cell.selectionStyle = .<span class="type">None</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// 第三行设置 &gt; 图标</span></span><br><span class="line">        <span class="keyword">if</span> indexPath.row == <span class="number">3</span> &#123;</span><br><span class="line">            cell.arrow.image = <span class="type">UIImage</span>(named: <span class="string">"left_arrow"</span>)</span><br><span class="line">        &#125;</span><br><span class="line">        cell.imageView?.image = <span class="type">UIImage</span>(named: images[indexPath.row])</span><br><span class="line">        <span class="keyword">return</span> cell</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 点击方法</span></span><br><span class="line">    <span class="func"><span class="keyword">func</span> <span class="title">tableView</span><span class="params">(tableView: UITableView, didSelectRowAtIndexPath indexPath: NSIndexPath)</span></span> &#123;</span><br><span class="line"></span><br><span class="line">        tableView.deselectRowAtIndexPath(indexPath, animated: <span class="literal">true</span>)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">switch</span> indexPath.row &#123;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">0</span>:</span><br><span class="line">            <span class="built_in">println</span>(<span class="string">"Select Row At Index 0"</span>)</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">        <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">            <span class="built_in">println</span>(<span class="string">"Select Row At Index 1"</span>)  </span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">        <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">            <span class="built_in">println</span>(<span class="string">"Select Row At Index 2"</span>)  </span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">        <span class="keyword">default</span>:</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="在_HWLeftTableViewCell-swift_里面自定义TableViewCell">在 HWLeftTableViewCell.swift 里面自定义TableViewCell</h2><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="type">UIKit</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">HWLeftTableViewCell</span>: <span class="title">UITableViewCell</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 创建并初使化arrow</span></span><br><span class="line">    <span class="keyword">var</span> arrow: <span class="type">UIImageView</span> = <span class="type">UIImageView</span>()</span><br><span class="line"></span><br><span class="line">    <span class="keyword">override</span> <span class="func"><span class="keyword">func</span> <span class="title">awakeFromNib</span><span class="params">()</span></span> &#123;</span><br><span class="line">        <span class="keyword">super</span>.awakeFromNib()</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 重写 init</span></span><br><span class="line">    <span class="keyword">override</span> <span class="keyword">init</span>(style: <span class="type">UITableViewCellStyle</span>, reuseIdentifier: <span class="type">String</span>!) &#123;</span><br><span class="line">        <span class="keyword">super</span>.<span class="keyword">init</span>(style: style, reuseIdentifier: reuseIdentifier)</span><br><span class="line">        arrow = <span class="type">UIImageView</span>(frame: <span class="type">CGRectMake</span>(<span class="number">155</span>, <span class="number">21</span>, <span class="number">8</span>, <span class="number">12</span>))</span><br><span class="line">        arrow.contentMode = <span class="type">UIViewContentMode</span>.<span class="type">ScaleAspectFill</span></span><br><span class="line">        <span class="keyword">self</span>.addSubview(arrow)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 要求 required init</span></span><br><span class="line">    required <span class="keyword">init</span>(coder aDecoder: <span class="type">NSCoder</span>) &#123;</span><br><span class="line">        fatalError(<span class="string">"init(coder:) has not been implemented"</span>)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">override</span> <span class="func"><span class="keyword">func</span> <span class="title">setSelected</span><span class="params">(selected: Bool, animated: Bool)</span></span> &#123;</span><br><span class="line">        <span class="keyword">super</span>.setSelected(selected, animated: animated)</span><br><span class="line"></span><br><span class="line">        <span class="comment">// Configure the view for the selected state</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>效果:<br><img src="\img\swiftcustomtableviewcell1.png" alt=""></p>
]]></content>
    <summary type="html">
    <![CDATA[<h2 id="在_LeftMenuViewController_里面_创建延迟加载_tableView_属性">在 LeftMenuViewController 里面 创建延迟加载 tableView 属性</h2><figure class="highlight swift"]]>
    </summary>
    
      <category term="Swift" scheme="http://lecason.com/tags/Swift/"/>
    
      <category term="Swift" scheme="http://lecason.com/categories/Swift/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[iOS 设置导航栏透明并去除1px细线]]></title>
    <link href="http://lecason.com/2015/09/10/iOS-Set-Transarent-NavigationBar/"/>
    <id>http://lecason.com/2015/09/10/iOS-Set-Transarent-NavigationBar/</id>
    <published>2015-09-10T03:45:49.000Z</published>
    <updated>2015-09-10T03:50:04.000Z</updated>
    <content type="html"><![CDATA[<p>设置导航栏透明只要在viewDidLoad()写上</p>
<figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">self</span>.navigationItem.title =  <span class="string">"智能手环"</span></span><br><span class="line"><span class="keyword">self</span>.navigationController?.navigationBar.setBackgroundImage(<span class="type">UIImage</span>.<span class="keyword">new</span>(), forBarPosition: <span class="type">UIBarPosition</span>.<span class="type">Any</span>, barMetrics: <span class="type">UIBarMetrics</span>.<span class="type">Compact</span>)</span><br><span class="line"><span class="keyword">self</span>.navigationController?.navigationBar.shadowImage = <span class="type">UIImage</span>.<span class="keyword">new</span>()</span><br></pre></td></tr></table></figure>
<p>发现有1px线线<br><img src="/img/navigartionbartransparents1.png" alt=""></p>
<p>这时候只要再加上下面代码就可以完全透明了</p>
<figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">self</span>.navigationController?.navigationBar.barStyle = <span class="type">UIBarStyle</span>.<span class="type">BlackTranslucent</span></span><br><span class="line"><span class="keyword">self</span>.navigationController?.navigationBar.clipsToBounds = <span class="literal">true</span></span><br></pre></td></tr></table></figure>
<p><img src="/img/navigartionbartransparents2.png" alt=""></p>
]]></content>
    <summary type="html">
    <![CDATA[<p>设置导航栏透明只要在viewDidLoad()写上</p>
<figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span cla]]>
    </summary>
    
      <category term="iOS" scheme="http://lecason.com/tags/iOS/"/>
    
      <category term="iOS" scheme="http://lecason.com/categories/iOS/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[CoAP Linux服务器上安装以及使用]]></title>
    <link href="http://lecason.com/2015/09/09/CoAP-Linux-Server-Install/"/>
    <id>http://lecason.com/2015/09/09/CoAP-Linux-Server-Install/</id>
    <published>2015-09-09T01:22:56.000Z</published>
    <updated>2015-09-09T05:29:44.000Z</updated>
    <content type="html"><![CDATA[<p>要求软件版本 <code>autoconf &gt; 2.65</code> <code>gcc</code><br>FireFox <code>Copper</code>插件地址 <code>https://addons.mozilla.org/en-US/firefox/addon/copper-270430/</code></p>
<h2 id="获得libCoAP">获得libCoAP</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget https://github.com/lecason/libCoAP/archive/master.zip</span><br></pre></td></tr></table></figure>
<h2 id="编译安装libCoAP">编译安装libCoAP</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> libCoAP-master</span><br><span class="line">autoconf</span><br><span class="line">./configure</span><br><span class="line">make</span><br></pre></td></tr></table></figure>
<p>如果提示<code>has modification time 2.5e+08 s in the future</code>，是机器时间设置的问题,重新设置下机器时间就搞定了。</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">yum install -y ntp</span><br><span class="line">ntpdate time.nist.gov</span><br></pre></td></tr></table></figure>
<h2 id="libCoAP使用">libCoAP使用</h2><p>开启服务端</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> examples/</span><br><span class="line">./coap-server</span><br></pre></td></tr></table></figure>
<p>这时候就可以在安装好了<code>Copper</code>插件的FireFox上打开服务器所在地址，注意防火墙开端口，测试的话直接关了。点击<code>GET</code>就可以看到返回信息了。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">This is a <span class="built_in">test</span> server made with libcoap (see http://libcoap.sf.net)</span><br><span class="line">Copyright (C) <span class="number">2010</span>--<span class="number">2013</span> Olaf Bergmann &lt;bergmann@tzi.org&gt;</span><br></pre></td></tr></table></figure></p>
<p><img src="/img/coap1.png" alt=""></p>
<p>客户端测试</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./coap-client -m put get coap://<span class="number">10.172</span>.<span class="number">1.199</span></span><br></pre></td></tr></table></figure>
<p>返回</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">v:<span class="number">1</span> t:<span class="number">0</span> tkl:<span class="number">0</span> c:<span class="number">3</span> id:<span class="number">54574</span></span><br></pre></td></tr></table></figure>
<ul>
<li>【v】表示coap的版本编号，此时的coap的版本编号为1。</li>
<li>【t】表示报文类型为CON，</li>
<li>【tkl】表示token区域的长度，此时的token区域的长度为0。</li>
<li>【c】表示访问方法（该处还需要分析）</li>
<li>【id】表示message id</li>
</ul>
]]></content>
    <summary type="html">
    <![CDATA[<p>要求软件版本 <code>autoconf &gt; 2.65</code> <code>gcc</code><br>FireFox <code>Copper</code>插件地址 <code>https://addons.mozilla.org/en-US/firefox]]>
    </summary>
    
      <category term="CoAP" scheme="http://lecason.com/categories/CoAP/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Swift Int 值用两进制打印出来]]></title>
    <link href="http://lecason.com/2015/09/07/Swift-Print-In-To-Binary/"/>
    <id>http://lecason.com/2015/09/07/Swift-Print-In-To-Binary/</id>
    <published>2015-09-07T07:16:21.000Z</published>
    <updated>2015-09-09T15:48:52.000Z</updated>
    <content type="html"><![CDATA[<p>用Swift版本写了一个Int值用二进制打印出来的方法</p>
<p><code>String</code>本来就有一个打印进制的构造方法</p>
<figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">init</span>&lt;<span class="type">T</span> : _SignedIntegerType&gt;(<span class="number">_</span> v: <span class="type">T</span>, radix: <span class="type">Int</span>, uppercase: <span class="type">Bool</span> = <span class="keyword">default</span>)</span><br><span class="line"><span class="keyword">init</span>&lt;<span class="type">T</span> : _UnsignedIntegerType&gt;(<span class="number">_</span> v: <span class="type">T</span>, radix: <span class="type">Int</span>, uppercase: <span class="type">Bool</span> = <span class="keyword">default</span>)</span><br></pre></td></tr></table></figure>
<p>使用</p>
<figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> num = <span class="number">100</span></span><br><span class="line"><span class="keyword">let</span> str = <span class="type">String</span>(num, radix: <span class="number">2</span>)</span><br><span class="line"><span class="built_in">println</span>(str)</span><br><span class="line"><span class="comment">// Output: 1100100</span></span><br></pre></td></tr></table></figure>
<p>由于上面打印的不是补0的，所以自己完善了一下写了下面版本<br><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="func"><span class="keyword">func</span> <span class="title">printIntToBinary</span><span class="params">(intNum:Int)</span></span> &#123;</span><br><span class="line">    <span class="keyword">let</span> num = intNum</span><br><span class="line">    <span class="keyword">var</span> str = <span class="type">String</span>(num, radix: <span class="number">2</span>)</span><br><span class="line">    <span class="keyword">var</span> <span class="built_in">c</span> = <span class="built_in">count</span>(str)</span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">c</span> &lt;= <span class="number">8</span> &#123;</span><br><span class="line">        <span class="keyword">for</span> <span class="number">_</span> <span class="keyword">in</span> <span class="number">0</span>..&lt;(<span class="number">8</span> - <span class="built_in">c</span>) &#123;</span><br><span class="line">        str = <span class="string">"0"</span> + str</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">c</span> &gt; <span class="number">8</span> &#123;</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="number">0</span>..&lt;((<span class="number">8</span> - <span class="built_in">c</span>%<span class="number">8</span>)) &#123;</span><br><span class="line">        str = <span class="string">"0"</span> + str</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">var</span> co = <span class="number">0</span></span><br><span class="line">    <span class="keyword">var</span> result = <span class="string">""</span></span><br><span class="line">    <span class="keyword">for</span> char <span class="keyword">in</span> str &#123;</span><br><span class="line">        result.append(char)</span><br><span class="line">        co = co + <span class="number">1</span></span><br><span class="line">            <span class="keyword">if</span> co % <span class="number">8</span> == <span class="number">0</span> &#123;</span><br><span class="line">        result = result + <span class="string">" "</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">println</span>(result)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
]]></content>
    <summary type="html">
    <![CDATA[<p>用Swift版本写了一个Int值用二进制打印出来的方法</p>
<p><code>String</code>本来就有一个打印进制的构造方法</p>
<figure class="highlight swift"><table><tr><td class="gutter"><]]>
    </summary>
    
      <category term="Swift" scheme="http://lecason.com/categories/Swift/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Objective-C 4个字节十六进制字符串+1运算]]></title>
    <link href="http://lecason.com/2015/09/07/Objective-C-4byte-HexString-Operation/"/>
    <id>http://lecason.com/2015/09/07/Objective-C-4byte-HexString-Operation/</id>
    <published>2015-09-07T02:00:26.000Z</published>
    <updated>2015-09-07T04:33:29.000Z</updated>
    <content type="html"><![CDATA[<p>在做项目的时候，加密授权码更改要记录次数，而授权码要用十六进制字符串来表示，用4个字节的十六进制字符串来表示次数。也就是<code>0x00000000</code>。这时候就想转成<code>int</code>类型再+1。</p>
<p>首先转换成int并+1</p>
<figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> hex = <span class="number">0x0000000f</span>;</span><br><span class="line">hex = hex + <span class="number">1</span>;</span><br><span class="line"><span class="built_in">NSData</span> *numData = [<span class="built_in">NSData</span> dataWithBytes:&amp;hex length:<span class="keyword">sizeof</span>(hex)];</span><br><span class="line"><span class="built_in">NSMutableString</span> *str = [[<span class="built_in">NSMutableString</span> alloc]initWithFormat:<span class="string">@"%08x"</span>,hex];</span><br><span class="line"><span class="built_in">NSLog</span>(<span class="string">@"Hex Str: %@"</span>,str);</span><br><span class="line">[<span class="keyword">self</span> printData:numData];</span><br></pre></td></tr></table></figure>
<p>打印数据是这个样子的</p>
<p><img src="/img/hexstring1.png" alt=""></p>
<p>但是这不符合我的需求，虽然运算是正确的，但是我要的是用00000000 00000000 00000000 00000001 这样子来显示。</p>
<h2 id="方法一">方法一</h2><p>目前我的数据是这个样子的</p>
<figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">NSLog</span>(<span class="string">@"十六进制字符串------%@"</span>,num);</span><br><span class="line"><span class="built_in">NSLog</span>(<span class="string">@"转换成二进制数据------"</span>);</span><br><span class="line">[<span class="keyword">self</span> printData:num<span class="variable">.hexToBytes</span>];</span><br></pre></td></tr></table></figure>
<p>打印是这个样子的<br><img src="/img/hexstring2.png" alt=""></p>
<p>加一后是这样子的<br><figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> a;</span><br><span class="line">[num<span class="variable">.hexToBytes</span> getBytes:&amp;a length:<span class="keyword">sizeof</span>(a)];</span><br><span class="line">a = a + <span class="number">1</span>;</span><br><span class="line"><span class="built_in">NSData</span> *data = [<span class="built_in">NSData</span> dataWithBytes:&amp;a length:<span class="keyword">sizeof</span>(a)];</span><br><span class="line"><span class="built_in">NSLog</span>(<span class="string">@"+1后的二进制数据------"</span>);</span><br><span class="line">[<span class="keyword">self</span> printData:data];</span><br><span class="line"><span class="built_in">NSLog</span>(<span class="string">@"%d"</span>,a);</span><br></pre></td></tr></table></figure></p>
<p>这时候看到是从首个字节第8位+1的<br><img src="/img/hexstring3.png" alt=""></p>
<p>这时候，先把第4个字节的交换位置，运算后再交换回来就达到了目的。</p>
<figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="built_in">NSRange</span> rangeHex;</span><br><span class="line">rangeHex<span class="variable">.length</span> = <span class="number">2</span>;</span><br><span class="line">rangeHex<span class="variable">.location</span> = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="built_in">NSMutableString</span> *mutaStr = [[<span class="built_in">NSMutableString</span> alloc] init];</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">6</span>; i &gt;= <span class="number">0</span> ; i = i - <span class="number">2</span>) &#123;</span><br><span class="line">    rangeHex<span class="variable">.location</span> = i;</span><br><span class="line">    [mutaStr appendString:[num substringWithRange:rangeHex]];</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">NSData</span> *numData = [<span class="built_in">NSData</span> dataWithData:mutaStr<span class="variable">.hexToBytes</span>];</span><br><span class="line"><span class="keyword">int</span> i;</span><br><span class="line">[numData getBytes:&amp;i length:<span class="keyword">sizeof</span>(i)];</span><br><span class="line">i = i + <span class="number">1</span>;</span><br><span class="line"><span class="built_in">NSData</span> *data = [<span class="built_in">NSData</span> dataWithBytes:&amp;i length:<span class="keyword">sizeof</span>(i)];</span><br><span class="line"><span class="built_in">NSLog</span>(<span class="string">@"+1后的二进制数据------"</span>);</span><br><span class="line">[<span class="keyword">self</span> printData:data];</span><br><span class="line"><span class="built_in">NSLog</span>(<span class="string">@"%d"</span>,i);</span><br></pre></td></tr></table></figure>
<p>打印<br><img src="/img/hexstring4.png" alt=""></p>
]]></content>
    <summary type="html">
    <![CDATA[<p>在做项目的时候，加密授权码更改要记录次数，而授权码要用十六进制字符串来表示，用4个字节的十六进制字符串来表示次数。也就是<code>0x00000000</code>。这时候就想转成<code>int</code>类型再+1。</p>
<p>首先转换成int并+1</p>
]]>
    </summary>
    
      <category term="Objective-C" scheme="http://lecason.com/categories/Objective-C/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Swift 怎么使用sizeof]]></title>
    <link href="http://lecason.com/2015/09/06/Swift-Sizeof/"/>
    <id>http://lecason.com/2015/09/06/Swift-Sizeof/</id>
    <published>2015-09-06T05:18:18.000Z</published>
    <updated>2015-09-06T14:48:47.000Z</updated>
    <content type="html"><![CDATA[<p>以前用Objective-C 的时候,可以很方便的用<code>sizeof()</code>来查看字节的长度</p>
<figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">NSMutableData</span> *data = [[<span class="built_in">NSMutableData</span> alloc] init];</span><br><span class="line"><span class="keyword">int</span> i = <span class="number">1</span>;</span><br><span class="line">[data appendBytes:&amp;i length:<span class="keyword">sizeof</span>(i)];</span><br><span class="line"><span class="built_in">NSLog</span>(<span class="string">@"data:%@ size:%lu"</span>,data,<span class="keyword">sizeof</span>(i));</span><br></pre></td></tr></table></figure>
<p>但在Swift里要这样子来查看<br><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> data:<span class="type">NSMutableData</span> = <span class="type">NSMutableData</span>()</span><br><span class="line"><span class="keyword">var</span> i:<span class="type">Int</span> = <span class="number">1</span></span><br><span class="line"><span class="keyword">let</span> size:<span class="type">Int</span> = <span class="built_in">sizeof</span>(i.<span class="keyword">dynamicType</span>)</span><br><span class="line">data.appendBytes(&amp;i, length:size)</span><br><span class="line"><span class="built_in">println</span>(<span class="string">"data:<span class="subst">\(data)</span> size:<span class="subst">\(size)</span>"</span>)</span><br></pre></td></tr></table></figure></p>
]]></content>
    <summary type="html">
    <![CDATA[<p>以前用Objective-C 的时候,可以很方便的用<code>sizeof()</code>来查看字节的长度</p>
<figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span]]>
    </summary>
    
      <category term="Swift" scheme="http://lecason.com/tags/Swift/"/>
    
      <category term="Swift" scheme="http://lecason.com/categories/Swift/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[iOS 应用程序本地化]]></title>
    <link href="http://lecason.com/2015/09/02/iOS-Localizaion/"/>
    <id>http://lecason.com/2015/09/02/iOS-Localizaion/</id>
    <published>2015-09-02T08:39:24.000Z</published>
    <updated>2015-09-05T08:47:54.000Z</updated>
    <content type="html"><![CDATA[<h2 id="程序名称本地化">程序名称本地化</h2><p>点击<code>项目</code> &gt; <code>PROJECT</code> &gt; <code>Info</code> &gt; <code>Localizations</code> 添加要支持的语言</p>
<p><img src="/img/localizion3.png" alt=""><br><a id="more"></a></p>
<p>新建一个文件<code>InfoPlist.strings</code> 然后在文件里点击 <code>InfoPlist.strings</code></p>
<p><img src="/img/localizion1.png" alt=""></p>
<p>点击右侧<code>localization</code>添加Chinese</p>
<p><img src="/img/localizion2.png" alt=""></p>
<p>在InfoPlist.strings(English)添加</p>
<figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">CFBundleDisplayName</span>=<span class="string">"China"</span>;</span><br></pre></td></tr></table></figure>
<p>在InfoPlist.strings(Chinese(Simplified))添加</p>
<figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">CFBundleDisplayName</span>=<span class="string">"中国"</span>;</span><br></pre></td></tr></table></figure>
<h2 id="程序内容本地化">程序内容本地化</h2><p>新建一个文件 <code>Localizable.strings</code></p>
<p>在Localizable.strings(English)添加<br><figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">"key"</span> = <span class="string">"english value"</span>;</span><br></pre></td></tr></table></figure></p>
<p>在Localizable.strings(Chinese(Simplified))添加</p>
<figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">"key"</span> = <span class="string">"中文内容"</span>;</span><br></pre></td></tr></table></figure>
<p>使用方法</p>
<figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">- (<span class="keyword">void</span>)viewDidLoad</span><br><span class="line">&#123;</span><br><span class="line">    [<span class="keyword">super</span> viewDidLoad];</span><br><span class="line">    <span class="built_in">UILabel</span> *label = [[<span class="built_in">UILabel</span> alloc] init];</span><br><span class="line">    label<span class="variable">.frame</span> = <span class="built_in">CGRectMake</span>(<span class="number">20</span>, <span class="number">40</span>, <span class="number">250</span>, <span class="number">60</span>);</span><br><span class="line">    label<span class="variable">.text</span> = <span class="built_in">NSLocalizedString</span>(<span class="string">@"key"</span>, <span class="string">@"这里是注释"</span>);</span><br><span class="line">    [<span class="keyword">self</span><span class="variable">.view</span> addSubview:label];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    <summary type="html">
    <![CDATA[<h2 id="程序名称本地化">程序名称本地化</h2><p>点击<code>项目</code> &gt; <code>PROJECT</code> &gt; <code>Info</code> &gt; <code>Localizations</code> 添加要支持的语言</p>
<p><img src="/img/localizion3.png" alt=""><br>]]>
    
    </summary>
    
      <category term="Localizaion" scheme="http://lecason.com/tags/Localizaion/"/>
    
      <category term="iOS" scheme="http://lecason.com/tags/iOS/"/>
    
      <category term="iOS" scheme="http://lecason.com/categories/iOS/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[iOS PNChart 图表生成使用]]></title>
    <link href="http://lecason.com/2015/09/02/iOS-PNChart-Use/"/>
    <id>http://lecason.com/2015/09/02/iOS-PNChart-Use/</id>
    <published>2015-09-02T07:27:20.000Z</published>
    <updated>2015-09-05T08:54:46.000Z</updated>
    <content type="html"><![CDATA[<h2 id="项目导入_PNLineChart">项目导入 PNLineChart</h2><p>确保已安装 <code>CocoaPods</code>，切换到你的项目目录。</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> pod \<span class="string">'PNChart\'</span> &gt; podfile</span><br><span class="line">pod install</span><br></pre></td></tr></table></figure>
<h2 id="使用_PNLineChart">使用 PNLineChart</h2><p>创建一个PNLineChart</p>
<figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor">#import <span class="title">"PNChart.h"</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 初使化PNLineChart</span></span><br><span class="line">PNLineChart * lineChart = [[PNLineChart alloc] initWithFrame:<span class="built_in">CGRectMake</span>(<span class="number">0</span>, <span class="number">135.0</span>, SCREEN_WIDTH, <span class="number">200.0</span>)];</span><br><span class="line"><span class="comment">// 设置X轴</span></span><br><span class="line">[lineChart setXLabels:@[<span class="string">@"SEP 1"</span>,<span class="string">@"SEP 2"</span>,<span class="string">@"SEP 3"</span>,<span class="string">@"SEP 4"</span>,<span class="string">@"SEP 5"</span>]];</span><br><span class="line"><span class="comment">// 设置Y轴</span></span><br><span class="line">[<span class="keyword">self</span><span class="variable">.lineChart</span> setYLabels:@[</span><br><span class="line">    <span class="string">@"0 min"</span>,</span><br><span class="line">    <span class="string">@"50 min"</span>,</span><br><span class="line">    <span class="string">@"100 min"</span>,</span><br><span class="line">    <span class="string">@"150 min"</span>,</span><br><span class="line">    <span class="string">@"200 min"</span>,</span><br><span class="line">    <span class="string">@"250 min"</span>,</span><br><span class="line">    <span class="string">@"300 min"</span>,</span><br><span class="line">]</span><br><span class="line">];</span><br><span class="line"></span><br><span class="line"><span class="comment">// 创建线1</span></span><br><span class="line"><span class="built_in">NSArray</span> * data01Array = @[@<span class="number">60.1</span>, @<span class="number">160.1</span>, @<span class="number">126.4</span>, @<span class="number">262.2</span>, @<span class="number">186.2</span>];</span><br><span class="line">PNLineChartData *data01 = [PNLineChartData new];</span><br><span class="line">data01<span class="variable">.color</span> = PNFreshGreen;</span><br><span class="line">data01<span class="variable">.itemCount</span> = lineChart<span class="variable">.xLabels</span><span class="variable">.count</span>;</span><br><span class="line"><span class="comment">//点的样式</span></span><br><span class="line">data01<span class="variable">.inflexionPointStyle</span> = PNLineChartPointStyleCircle;</span><br><span class="line">data01<span class="variable">.getData</span> = ^(<span class="built_in">NSUInteger</span> index) &#123;</span><br><span class="line"><span class="built_in">CGFloat</span> yValue = [data01Array[index] floatValue];</span><br><span class="line"><span class="keyword">return</span> [PNLineChartDataItem dataItemWithY:yValue];</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 创建线2</span></span><br><span class="line"><span class="built_in">NSArray</span> * data02Array = @[@<span class="number">20.1</span>, @<span class="number">180.1</span>, @<span class="number">26.4</span>, @<span class="number">202.2</span>, @<span class="number">126.2</span>];</span><br><span class="line">PNLineChartData *data02 = [PNLineChartData new];</span><br><span class="line">data02<span class="variable">.color</span> = PNTwitterColor;</span><br><span class="line">data02<span class="variable">.itemCount</span> = lineChart<span class="variable">.xLabels</span><span class="variable">.count</span>;</span><br><span class="line"><span class="comment">//点的样式</span></span><br><span class="line">data02<span class="variable">.inflexionPointStyle</span> = PNLineChartPointStyleCircle;</span><br><span class="line">data02<span class="variable">.getData</span> = ^(<span class="built_in">NSUInteger</span> index) &#123;</span><br><span class="line"><span class="built_in">CGFloat</span> yValue = [data02Array[index] floatValue];</span><br><span class="line"><span class="keyword">return</span> [PNLineChartDataItem dataItemWithY:yValue];</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 把线添加到表里</span></span><br><span class="line">lineChart<span class="variable">.chartData</span> = @[data01, data02];</span><br><span class="line">[lineChart strokeChart];</span><br><span class="line"></span><br><span class="line"><span class="comment">//添加表添加到视图里</span></span><br><span class="line">[<span class="keyword">self</span><span class="variable">.view</span> addSubview:lineChart];</span><br></pre></td></tr></table></figure>
<a id="more"></a>
<p>实现代理</p>
<figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">//添加协议</span></span><br><span class="line"><span class="class"><span class="keyword">@interface</span> <span class="title">ViewController</span> () &lt;<span class="title">PNChartDelegate</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//设置代理</span></span><br><span class="line">lineChart<span class="variable">.delegate</span> = <span class="keyword">self</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//实现方法</span></span><br><span class="line">- (<span class="keyword">void</span>)userClickedOnLineKeyPoint:(<span class="built_in">CGPoint</span>)point lineIndex:(<span class="built_in">NSInteger</span>)lineIndex pointIndex:(<span class="built_in">NSInteger</span>)pointIndex&#123;</span><br><span class="line"><span class="built_in">NSLog</span>(<span class="string">@"Click Key on line %f, %f line index is %d and point index is %d"</span>,point<span class="variable">.x</span>, point<span class="variable">.y</span>,(<span class="keyword">int</span>)lineIndex, (<span class="keyword">int</span>)pointIndex);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">- (<span class="keyword">void</span>)userClickedOnLinePoint:(<span class="built_in">CGPoint</span>)point lineIndex:(<span class="built_in">NSInteger</span>)lineIndex&#123;</span><br><span class="line"><span class="built_in">NSLog</span>(<span class="string">@"Click on line %f, %f, line index is %d"</span>,point<span class="variable">.x</span>, point<span class="variable">.y</span>, (<span class="keyword">int</span>)lineIndex);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
    <summary type="html">
    <![CDATA[<h2 id="项目导入_PNLineChart">项目导入 PNLineChart</h2><p>确保已安装 <code>CocoaPods</code>，切换到你的项目目录。</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> pod \<span class="string">'PNChart\'</span> &gt; podfile</span><br><span class="line">pod install</span><br></pre></td></tr></table></figure>
<h2 id="使用_PNLineChart">使用 PNLineChart</h2><p>创建一个PNLineChart</p>
<figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor">#import <span class="title">"PNChart.h"</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 初使化PNLineChart</span></span><br><span class="line">PNLineChart * lineChart = [[PNLineChart alloc] initWithFrame:<span class="built_in">CGRectMake</span>(<span class="number">0</span>, <span class="number">135.0</span>, SCREEN_WIDTH, <span class="number">200.0</span>)];</span><br><span class="line"><span class="comment">// 设置X轴</span></span><br><span class="line">[lineChart setXLabels:@[<span class="string">@"SEP 1"</span>,<span class="string">@"SEP 2"</span>,<span class="string">@"SEP 3"</span>,<span class="string">@"SEP 4"</span>,<span class="string">@"SEP 5"</span>]];</span><br><span class="line"><span class="comment">// 设置Y轴</span></span><br><span class="line">[<span class="keyword">self</span><span class="variable">.lineChart</span> setYLabels:@[</span><br><span class="line">    <span class="string">@"0 min"</span>,</span><br><span class="line">    <span class="string">@"50 min"</span>,</span><br><span class="line">    <span class="string">@"100 min"</span>,</span><br><span class="line">    <span class="string">@"150 min"</span>,</span><br><span class="line">    <span class="string">@"200 min"</span>,</span><br><span class="line">    <span class="string">@"250 min"</span>,</span><br><span class="line">    <span class="string">@"300 min"</span>,</span><br><span class="line">]</span><br><span class="line">];</span><br><span class="line"></span><br><span class="line"><span class="comment">// 创建线1</span></span><br><span class="line"><span class="built_in">NSArray</span> * data01Array = @[@<span class="number">60.1</span>, @<span class="number">160.1</span>, @<span class="number">126.4</span>, @<span class="number">262.2</span>, @<span class="number">186.2</span>];</span><br><span class="line">PNLineChartData *data01 = [PNLineChartData new];</span><br><span class="line">data01<span class="variable">.color</span> = PNFreshGreen;</span><br><span class="line">data01<span class="variable">.itemCount</span> = lineChart<span class="variable">.xLabels</span><span class="variable">.count</span>;</span><br><span class="line"><span class="comment">//点的样式</span></span><br><span class="line">data01<span class="variable">.inflexionPointStyle</span> = PNLineChartPointStyleCircle;</span><br><span class="line">data01<span class="variable">.getData</span> = ^(<span class="built_in">NSUInteger</span> index) &#123;</span><br><span class="line"><span class="built_in">CGFloat</span> yValue = [data01Array[index] floatValue];</span><br><span class="line"><span class="keyword">return</span> [PNLineChartDataItem dataItemWithY:yValue];</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 创建线2</span></span><br><span class="line"><span class="built_in">NSArray</span> * data02Array = @[@<span class="number">20.1</span>, @<span class="number">180.1</span>, @<span class="number">26.4</span>, @<span class="number">202.2</span>, @<span class="number">126.2</span>];</span><br><span class="line">PNLineChartData *data02 = [PNLineChartData new];</span><br><span class="line">data02<span class="variable">.color</span> = PNTwitterColor;</span><br><span class="line">data02<span class="variable">.itemCount</span> = lineChart<span class="variable">.xLabels</span><span class="variable">.count</span>;</span><br><span class="line"><span class="comment">//点的样式</span></span><br><span class="line">data02<span class="variable">.inflexionPointStyle</span> = PNLineChartPointStyleCircle;</span><br><span class="line">data02<span class="variable">.getData</span> = ^(<span class="built_in">NSUInteger</span> index) &#123;</span><br><span class="line"><span class="built_in">CGFloat</span> yValue = [data02Array[index] floatValue];</span><br><span class="line"><span class="keyword">return</span> [PNLineChartDataItem dataItemWithY:yValue];</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 把线添加到表里</span></span><br><span class="line">lineChart<span class="variable">.chartData</span> = @[data01, data02];</span><br><span class="line">[lineChart strokeChart];</span><br><span class="line"></span><br><span class="line"><span class="comment">//添加表添加到视图里</span></span><br><span class="line">[<span class="keyword">self</span><span class="variable">.view</span> addSubview:lineChart];</span><br></pre></td></tr></table></figure>]]>
    
    </summary>
    
      <category term="iOS" scheme="http://lecason.com/tags/iOS/"/>
    
      <category term="iOS" scheme="http://lecason.com/categories/iOS/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Objective-C NSDictionary 与 JsonString 之间的转换]]></title>
    <link href="http://lecason.com/2015/08/31/Objective-C-Dictonary-To-JsonString-And-Back/"/>
    <id>http://lecason.com/2015/08/31/Objective-C-Dictonary-To-JsonString-And-Back/</id>
    <published>2015-08-31T05:11:43.000Z</published>
    <updated>2015-09-05T09:20:15.000Z</updated>
    <content type="html"><![CDATA[<h2 id="NSDictionary_转_JsonString">NSDictionary 转 JsonString</h2><figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">NSDictionary</span> *dic = @&#123;<span class="string">@"cmd"</span>:<span class="string">@"login"</span>,<span class="string">@"account"</span>:<span class="string">@"18688889999"</span>,<span class="string">@"password"</span>:<span class="string">@"0ca175b9c0f726a831d895e269332461"</span>&#125;;</span><br><span class="line"></span><br><span class="line"><span class="built_in">NSData</span> *jsonData = [<span class="built_in">NSJSONSerialization</span></span><br><span class="line">                        dataWithJSONObject:dic options:<span class="built_in">NSJSONWritingPrettyPrinted</span> error:<span class="literal">nil</span>];</span><br><span class="line"></span><br><span class="line"><span class="built_in">NSString</span> *jsonString = [[<span class="built_in">NSString</span> alloc] initWithData:jsonData encoding:<span class="built_in">NSUTF8StringEncoding</span>];</span><br><span class="line"></span><br><span class="line"><span class="built_in">NSLog</span>(<span class="string">@"jsonStirng %@"</span>,jsonString);</span><br></pre></td></tr></table></figure>
<h2 id="JsonString_转_NSDicionary">JsonString 转 NSDicionary</h2><figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">NSString</span> *jsonString = <span class="string">@"&#123;\"cmd\":\"login\",\"account\": \"18688889999\",\"password\": \"0ca175b9c0f726a831d895e269332461\"&#125;"</span>;</span><br><span class="line"></span><br><span class="line"><span class="built_in">NSData</span> *jsonData = [jsonString dataUsingEncoding:<span class="built_in">NSUTF8StringEncoding</span>];</span><br><span class="line">   </span><br><span class="line"><span class="built_in">NSDictionary</span> *jsonDic = [<span class="built_in">NSJSONSerialization</span> JSONObjectWithData:data options:<span class="built_in">NSJSONReadingMutableLeaves</span> error:<span class="literal">nil</span>];</span><br><span class="line"></span><br><span class="line"><span class="built_in">NSLog</span>(<span class="string">@"jsonDic %@"</span>, jsonDic);</span><br></pre></td></tr></table></figure>]]></content>
    <summary type="html">
    <![CDATA[<h2 id="NSDictionary_转_JsonString">NSDictionary 转 JsonString</h2><figure class="highlight objectivec"><table><tr><td class="gutter"><pre><sp]]>
    </summary>
    
      <category term="Objective-C" scheme="http://lecason.com/tags/Objective-C/"/>
    
      <category term="Objective-C" scheme="http://lecason.com/categories/Objective-C/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[PHP 写个简单的Post API 以及 iOS 请求分析]]></title>
    <link href="http://lecason.com/2015/08/30/PHP-JSON-Test/"/>
    <id>http://lecason.com/2015/08/30/PHP-JSON-Test/</id>
    <published>2015-08-30T04:20:56.000Z</published>
    <updated>2015-09-05T09:22:13.000Z</updated>
    <content type="html"><![CDATA[<p>由于各种原因，以及没写过后台API，想测试一下POST，但是没有API,就想用PHP自己写一个，查了一下。发现PHP请求POST数据有3种方法。由于没有以前没有学过PHP，找了一下资料，就试试，写了以下博文。所以这些都是个人推测。</p>
<h2 id="方法1_用表单方法接收">方法1 用表单方法接收</h2><p>最常见的方法是：$_POST[‘fieldname’];</p>
<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$_POST</span>[<span class="string">'fieldname'</span>];</span><br></pre></td></tr></table></figure>
<p>说明：只能接收 Content-Type: application/x-www-form-urlencoded 提交的数据<br>解释：也就是表单POST过来的数据</p>
<h3 id="PHP_源码">PHP 源码</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor">&lt;?php</span></span><br><span class="line"><span class="variable">$username</span> = <span class="variable">$_POST</span>[<span class="string">'username'</span>];  </span><br><span class="line"><span class="variable">$password</span> = <span class="variable">$_POST</span>[<span class="string">'password'</span>];</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"username:"</span>.<span class="variable">$username</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"\n"</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"password:"</span>.<span class="variable">$password</span>; <span class="comment">//只是简单的打印</span></span><br><span class="line"><span class="preprocessor">?&gt;</span></span><br></pre></td></tr></table></figure>
<a id="more"></a>
<h3 id="iOS_NSString测试代码">iOS NSString测试代码</h3><figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//请求URL</span></span><br><span class="line"><span class="built_in">NSString</span> *urlStr = <span class="string">@"http://121.201.63.206/wel.php"</span>;</span><br><span class="line"><span class="built_in">NSURL</span> *url = [<span class="built_in">NSURL</span> URLWithString:urlStr];</span><br><span class="line"></span><br><span class="line"><span class="comment">//请求方法</span></span><br><span class="line"><span class="built_in">NSMutableURLRequest</span> *request = [<span class="built_in">NSMutableURLRequest</span> requestWithURL:url];</span><br><span class="line">request<span class="variable">.HTTPMethod</span> = <span class="string">@"POST"</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//请求参数</span></span><br><span class="line"><span class="built_in">NSString</span> *str = <span class="string">@"username=lecason&amp;password=0ca175b9c0f726a831d895e269332461"</span>;</span><br><span class="line"><span class="built_in">NSData</span> *data = [str dataUsingEncoding:<span class="built_in">NSUTF8StringEncoding</span>];</span><br><span class="line"></span><br><span class="line"><span class="comment">//发送请求</span></span><br><span class="line">[request setHTTPBody:data];</span><br><span class="line"></span><br><span class="line"><span class="comment">//打印请求</span></span><br><span class="line"><span class="built_in">NSData</span> *received = [<span class="built_in">NSURLConnection</span> sendSynchronousRequest:request returningResponse:<span class="literal">nil</span> error:<span class="literal">nil</span>];</span><br><span class="line"><span class="built_in">NSString</span> *returnStr = [[<span class="built_in">NSString</span> alloc]initWithData:received encoding:<span class="built_in">NSUTF8StringEncoding</span>];</span><br><span class="line"><span class="built_in">NSLog</span>(<span class="string">@"%@"</span>,returnStr);</span><br></pre></td></tr></table></figure>
<p>这时候查看<code>Form</code>请求数据是这个样子的：</p>
<p><img src="/img/phppost1.png" alt=""></p>
<p>这时候查看<code>Text</code>请求数据是这个样子的：</p>
<p><img src="/img/phppost2.png" alt=""></p>
<p>这时候查看返回是这样子的:</p>
<p><img src="/img/phppost3.png" alt=""></p>
<p>iOS打印是这样子的:</p>
<p><img src="/img/phppost4.png" alt=""></p>
<h3 id="iOS_NSDictionary测试代码">iOS NSDictionary测试代码</h3><figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"> <span class="comment">//请求URL</span></span><br><span class="line"><span class="built_in">NSString</span> *urlStr = <span class="string">@"http://121.201.63.206/wel.php"</span>;</span><br><span class="line"><span class="built_in">NSURL</span> *url = [<span class="built_in">NSURL</span> URLWithString:urlStr];</span><br><span class="line"></span><br><span class="line"><span class="comment">//请求方法</span></span><br><span class="line"><span class="built_in">NSMutableURLRequest</span> *request = [<span class="built_in">NSMutableURLRequest</span> requestWithURL:url];</span><br><span class="line">request<span class="variable">.HTTPMethod</span> = <span class="string">@"POST"</span>;</span><br><span class="line"></span><br><span class="line"><span class="built_in">NSDictionary</span> *jsonDic = [<span class="built_in">NSDictionary</span> dictionaryWithObjectsAndKeys: <span class="string">@"lecason"</span>,<span class="string">@"username"</span>,<span class="string">@"0ca175b9c0f726a831d895e269332461"</span>,<span class="string">@"password"</span>,<span class="literal">nil</span>];</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> ([<span class="built_in">NSJSONSerialization</span> isValidJSONObject:jsonDic])</span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">NSError</span> *error;</span><br><span class="line">    <span class="built_in">NSData</span> *jsonData = [<span class="built_in">NSJSONSerialization</span> dataWithJSONObject:jsonDic options:<span class="built_in">NSJSONWritingPrettyPrinted</span> error:&amp;error];</span><br><span class="line">    <span class="built_in">NSString</span> *json =[[<span class="built_in">NSString</span> alloc] initWithData:jsonData encoding:<span class="built_in">NSUTF8StringEncoding</span>];</span><br><span class="line">    <span class="built_in">NSLog</span>(<span class="string">@"请求的Json数据 :%@"</span>,json);</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">    <span class="comment">//发送请求</span></span><br><span class="line">    [request setHTTPBody:jsonData];</span><br><span class="line"></span><br><span class="line">    <span class="built_in">NSData</span> *received = [<span class="built_in">NSURLConnection</span> sendSynchronousRequest:request returningResponse:<span class="literal">nil</span> error:<span class="literal">nil</span>];</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">NSString</span> *returnStr = [[<span class="built_in">NSString</span> alloc]initWithData:received encoding:<span class="built_in">NSUTF8StringEncoding</span>];</span><br><span class="line">    <span class="built_in">NSLog</span>(<span class="string">@"返回的Json数据 :%@"</span>,returnStr);</span><br><span class="line">    </span><br><span class="line"> </span><br><span class="line">    <span class="comment">//转化成字典并打印返回的Json</span></span><br><span class="line">    <span class="built_in">NSDictionary</span> *dic = [<span class="built_in">NSJSONSerialization</span> JSONObjectWithData:received</span><br><span class="line">                                                        options:<span class="built_in">NSJSONReadingAllowFragments</span></span><br><span class="line">                                                          error:&amp;error];</span><br><span class="line">    <span class="built_in">NSLog</span>(<span class="string">@"转化成字典 %@"</span>,dic);</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>这时候查看<code>Form</code>请求数据是这个样子的：可以看到请求的内容已经成为了<em>表单名</em> ！</p>
<p><img src="/img/phppost5.png" alt=""></p>
<p>这时候查看<code>Text</code>请求数据是这个样子的：</p>
<p><img src="/img/phppost6.png" alt=""></p>
<p>结果为空，因为我们表单【username】【password】都没有接收到数据。这时候查看返回是这样子的:</p>
<p><img src="/img/phppost7.png" alt=""></p>
<p>iOS打印是这样子的:</p>
<p><img src="/img/phppost8.png" alt=""></p>
<h2 id="方法2_读取_POST_的原始数据">方法2 读取 POST 的原始数据</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">file_get_contents(<span class="string">"php://input"</span>)</span><br></pre></td></tr></table></figure>
<p>说明：<br>允许读取 POST 的原始数据。<br>和 <code>$HTTP_RAW_POST_DATA</code> 比起来，它给内存带来的压力较小，并且不需要任何特殊的 php.ini 设置。<br><code>php://input</code> 不能用于 <code>enctype=”multipart/form-data”</code><br>由于APP端用<code>Dictionary</code>和<code>NSJSONSerialization</code>组建出来是个纯<code>Json</code>格式文件。所以用这种方法来得到APP推送上来的数据最好。</p>
<h3 id="PHP_源码-1">PHP 源码</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor">&lt;?php</span></span><br><span class="line"><span class="variable">$postValue</span> = file_get_contents(<span class="string">"php://input"</span>);</span><br><span class="line"><span class="variable">$postValue</span> = str_replace(<span class="string">"\n"</span>,<span class="keyword">null</span>,<span class="variable">$postValue</span>); <span class="comment">//把换行符去掉</span></span><br><span class="line"><span class="keyword">echo</span> json_encode(<span class="variable">$postValue</span>); <span class="comment">//json化输出</span></span><br><span class="line"><span class="preprocessor">?&gt;</span></span><br></pre></td></tr></table></figure>
<h3 id="iOS_NSString测试代码-1">iOS NSString测试代码</h3><figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//请求URL</span></span><br><span class="line"><span class="built_in">NSString</span> *urlStr = <span class="string">@"http://121.201.63.206/wel.php"</span>;</span><br><span class="line"><span class="built_in">NSURL</span> *url = [<span class="built_in">NSURL</span> URLWithString:urlStr];</span><br><span class="line"></span><br><span class="line"><span class="comment">//请求方法</span></span><br><span class="line"><span class="built_in">NSMutableURLRequest</span> *request = [<span class="built_in">NSMutableURLRequest</span> requestWithURL:url];</span><br><span class="line">request<span class="variable">.HTTPMethod</span> = <span class="string">@"POST"</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//请求参数</span></span><br><span class="line"><span class="built_in">NSString</span> *str = <span class="string">@"username=lecason&amp;password=0ca175b9c0f726a831d895e269332461"</span>;</span><br><span class="line"><span class="built_in">NSData</span> *data = [str dataUsingEncoding:<span class="built_in">NSUTF8StringEncoding</span>];</span><br><span class="line"></span><br><span class="line"><span class="comment">//发送请求</span></span><br><span class="line">[request setHTTPBody:data];</span><br><span class="line"></span><br><span class="line"><span class="comment">//打印请求</span></span><br><span class="line"><span class="built_in">NSData</span> *received = [<span class="built_in">NSURLConnection</span> sendSynchronousRequest:request returningResponse:<span class="literal">nil</span> error:<span class="literal">nil</span>];</span><br><span class="line"><span class="built_in">NSString</span> *returnStr = [[<span class="built_in">NSString</span> alloc]initWithData:received encoding:<span class="built_in">NSUTF8StringEncoding</span>];</span><br><span class="line"><span class="built_in">NSLog</span>(<span class="string">@"%@"</span>,returnStr);</span><br></pre></td></tr></table></figure>
<p>这时候查看<code>Form</code>请求数据是这个样子的：</p>
<p><img src="/img/phppost9.png" alt=""></p>
<p>这时候查看<code>Text</code>请求数据是这个样子的：</p>
<p><img src="/img/phppost10.png" alt=""></p>
<p>这时候查看返回是这样子的:</p>
<p><img src="/img/phppost11.png" alt=""></p>
<p>iOS打印是这样子的:</p>
<p><img src="/img/phppost12.png" alt=""></p>
<h3 id="iOS_NSDictionary测试代码-1">iOS NSDictionary测试代码</h3><figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"> <span class="comment">//请求URL</span></span><br><span class="line"><span class="built_in">NSString</span> *urlStr = <span class="string">@"http://121.201.63.206/wel.php"</span>;</span><br><span class="line"><span class="built_in">NSURL</span> *url = [<span class="built_in">NSURL</span> URLWithString:urlStr];</span><br><span class="line"></span><br><span class="line"><span class="comment">//请求方法</span></span><br><span class="line"><span class="built_in">NSMutableURLRequest</span> *request = [<span class="built_in">NSMutableURLRequest</span> requestWithURL:url];</span><br><span class="line">request<span class="variable">.HTTPMethod</span> = <span class="string">@"POST"</span>;</span><br><span class="line"></span><br><span class="line"><span class="built_in">NSDictionary</span> *jsonDic = [<span class="built_in">NSDictionary</span> dictionaryWithObjectsAndKeys: <span class="string">@"lecason"</span>,<span class="string">@"username"</span>,<span class="string">@"0ca175b9c0f726a831d895e269332461"</span>,<span class="string">@"password"</span>,<span class="literal">nil</span>];</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> ([<span class="built_in">NSJSONSerialization</span> isValidJSONObject:jsonDic])</span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">NSError</span> *error;</span><br><span class="line">    <span class="built_in">NSData</span> *jsonData = [<span class="built_in">NSJSONSerialization</span> dataWithJSONObject:jsonDic options:<span class="built_in">NSJSONWritingPrettyPrinted</span> error:&amp;error];</span><br><span class="line">    <span class="built_in">NSString</span> *json =[[<span class="built_in">NSString</span> alloc] initWithData:jsonData encoding:<span class="built_in">NSUTF8StringEncoding</span>];</span><br><span class="line">    <span class="built_in">NSLog</span>(<span class="string">@"请求的Json数据 :%@"</span>,json);</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">    <span class="comment">//发送请求</span></span><br><span class="line">    [request setHTTPBody:jsonData];</span><br><span class="line"></span><br><span class="line">    <span class="built_in">NSData</span> *received = [<span class="built_in">NSURLConnection</span> sendSynchronousRequest:request returningResponse:<span class="literal">nil</span> error:<span class="literal">nil</span>];</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">NSString</span> *returnStr = [[<span class="built_in">NSString</span> alloc]initWithData:received encoding:<span class="built_in">NSUTF8StringEncoding</span>];</span><br><span class="line">    <span class="built_in">NSLog</span>(<span class="string">@"返回的Json数据 :%@"</span>,returnStr);</span><br><span class="line">    </span><br><span class="line"> </span><br><span class="line">    <span class="comment">//转化成字典并打印返回的Json</span></span><br><span class="line">    <span class="built_in">NSDictionary</span> *dic = [<span class="built_in">NSJSONSerialization</span> JSONObjectWithData:received</span><br><span class="line">                                                        options:<span class="built_in">NSJSONReadingAllowFragments</span></span><br><span class="line">                                                          error:&amp;error];</span><br><span class="line">    <span class="built_in">NSLog</span>(<span class="string">@"转化成字典 %@"</span>,dic);</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>这时候查看<code>Form</code>请求数据是这个样子的：</p>
<p><img src="/img/phppost13.png" alt=""></p>
<p>这时候查看<code>Text</code>请求数据是这个样子的：</p>
<p><img src="/img/phppost14.png" alt=""></p>
<p>因为我们接收到的是流，所以我们得到了POST上来的Json数据！这时候查看返回是这样子的:</p>
<p><img src="/img/phppost15.png" alt=""></p>
<p>iOS打印是这样子的:</p>
<p><img src="/img/phppost16.png" alt=""></p>
<h3 id="用AFNetworking来请求">用AFNetworking来请求</h3><figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">NSString</span> *urlStr = <span class="string">@"http://121.201.63.206/wel.php"</span>;</span><br><span class="line"></span><br><span class="line"><span class="built_in">NSDictionary</span> *parmas = @&#123;<span class="string">@"cmd"</span>:<span class="string">@"login"</span>,<span class="string">@"account"</span>:<span class="string">@"18688888999"</span>,<span class="string">@"password"</span>:<span class="string">@"0ca175b9c0f726a831d895e269332461"</span>&#125;;</span><br><span class="line"></span><br><span class="line">AFHTTPRequestOperationManager *manager = [AFHTTPRequestOperationManager manager];</span><br><span class="line">manager<span class="variable">.responseSerializer</span> = [AFHTTPResponseSerializer serializer];</span><br><span class="line">manager<span class="variable">.responseSerializer</span><span class="variable">.acceptableContentTypes</span> = [<span class="built_in">NSSet</span> setWithObject:<span class="string">@"text/html"</span>];</span><br><span class="line"></span><br><span class="line">[manager POST:urlStr parameters:parmas success:^(AFHTTPRequestOperation *operation, <span class="keyword">id</span> responseObject) &#123;</span><br><span class="line">            <span class="built_in">NSString</span> *returnStr = [[<span class="built_in">NSString</span> alloc]initWithData:responseObject encoding:<span class="built_in">NSUTF8StringEncoding</span>];</span><br><span class="line">            <span class="built_in">NSLog</span>(<span class="string">@"返回的Json数据 :%@"</span>,returnStr);</span><br><span class="line">    </span><br><span class="line">&#125; failure:^(AFHTTPRequestOperation *operation, <span class="built_in">NSError</span> *error) &#123;</span><br><span class="line">        <span class="built_in">NSLog</span>(<span class="string">@"error : %@"</span>,error);</span><br><span class="line">&#125;];</span><br></pre></td></tr></table></figure>
<p>这时候查看<code>Form</code>请求数据是这个样子的：</p>
<p><img src="/img/phppost17.png" alt=""></p>
<p>这时候查看<code>Text</code>请求数据是这个样子的：</p>
<p><img src="/img/phppost18.png" alt=""></p>
<p>这时候查看返回是这样子的:</p>
<p><img src="/img/phppost19.png" alt=""></p>
<p>iOS打印是这样子的:</p>
<p><img src="/img/phppost20.png" alt=""></p>
<p>可以看出，AFNetworking是把参数拆分，已模拟表单的方式来接收数据的。这时候我们PHP端就可以判断，如果接收到的是纯Json就用<code>json_decode()</code>和<code>json_encode()</code>来处理数据。如果是表单就用表单来处理。当然，这是服务端处理的方法，也可以客户端适应服务端，拼接好参数发送。</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>由于各种原因，以及没写过后台API，想测试一下POST，但是没有API,就想用PHP自己写一个，查了一下。发现PHP请求POST数据有3种方法。由于没有以前没有学过PHP，找了一下资料，就试试，写了以下博文。所以这些都是个人推测。</p>
<h2 id="方法1_用表单方法接收">方法1 用表单方法接收</h2><p>最常见的方法是：$_POST[‘fieldname’];</p>
<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$_POST</span>[<span class="string">'fieldname'</span>];</span><br></pre></td></tr></table></figure>
<p>说明：只能接收 Content-Type: application/x-www-form-urlencoded 提交的数据<br>解释：也就是表单POST过来的数据</p>
<h3 id="PHP_源码">PHP 源码</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor">&lt;?php</span></span><br><span class="line"><span class="variable">$username</span> = <span class="variable">$_POST</span>[<span class="string">'username'</span>];  </span><br><span class="line"><span class="variable">$password</span> = <span class="variable">$_POST</span>[<span class="string">'password'</span>];</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"username:"</span>.<span class="variable">$username</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"\n"</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"password:"</span>.<span class="variable">$password</span>; <span class="comment">//只是简单的打印</span></span><br><span class="line"><span class="preprocessor">?&gt;</span></span><br></pre></td></tr></table></figure>]]>
    
    </summary>
    
      <category term="PHP" scheme="http://lecason.com/tags/PHP/"/>
    
      <category term="PHP" scheme="http://lecason.com/categories/PHP/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[iOS 原生 API 请求数据的方式]]></title>
    <link href="http://lecason.com/2015/08/29/iOS-jsonRequest/"/>
    <id>http://lecason.com/2015/08/29/iOS-jsonRequest/</id>
    <published>2015-08-29T00:45:39.000Z</published>
    <updated>2015-09-05T08:59:34.000Z</updated>
    <content type="html"><![CDATA[<h2 id="Post_用_NSString_组建">Post 用 NSString 组建</h2><figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//请求URL</span></span><br><span class="line"><span class="built_in">NSString</span> *urlStr = <span class="string">@"http://www.sinaapp.com/interface.php"</span>;</span><br><span class="line"><span class="built_in">NSURL</span> *url = [<span class="built_in">NSURL</span> URLWithString:urlStr];</span><br><span class="line"></span><br><span class="line"><span class="comment">//请求方法</span></span><br><span class="line"><span class="built_in">NSMutableURLRequest</span> *request = [<span class="built_in">NSMutableURLRequest</span> requestWithURL:url];</span><br><span class="line">request<span class="variable">.HTTPMethod</span> = <span class="string">@"POST"</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//请求参数</span></span><br><span class="line"><span class="built_in">NSString</span> *str = <span class="string">@"request=&#123;\"cmd\":\"login\",\"account\": \"18688889999\",\"password\": \"0ca175b9c0f726a831d895e269332461\"&#125;"</span>;</span><br><span class="line"><span class="built_in">NSData</span> *data = [str dataUsingEncoding:<span class="built_in">NSUTF8StringEncoding</span>];</span><br><span class="line"></span><br><span class="line"><span class="comment">//发送请求</span></span><br><span class="line">[request setHTTPBody:data];</span><br><span class="line"></span><br><span class="line"><span class="comment">//打印请求</span></span><br><span class="line"><span class="built_in">NSData</span> *received = [<span class="built_in">NSURLConnection</span> sendSynchronousRequest:request returningResponse:<span class="literal">nil</span> error:<span class="literal">nil</span>];</span><br><span class="line"><span class="built_in">NSString</span> *returnStr = [[<span class="built_in">NSString</span> alloc]initWithData:received encoding:<span class="built_in">NSUTF8StringEncoding</span>];</span><br><span class="line"><span class="built_in">NSLog</span>(<span class="string">@"%@"</span>,returnStr);</span><br></pre></td></tr></table></figure>
<p>这时候请求的数据是这样子的：<br><img src="/img/nsmutableurlrequest1.jpg" alt=""></p>
<h2 id="Post_用NSDictionary组建">Post 用NSDictionary组建</h2><figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//请求URL</span></span><br><span class="line"><span class="built_in">NSString</span> *urlStr = <span class="string">@"http://www.sinaapp.com/interface.php"</span>;</span><br><span class="line"><span class="built_in">NSURL</span> *url = [<span class="built_in">NSURL</span> URLWithString:urlStr];</span><br><span class="line"></span><br><span class="line"><span class="comment">//请求方法</span></span><br><span class="line"><span class="built_in">NSMutableURLRequest</span> *request = [<span class="built_in">NSMutableURLRequest</span> requestWithURL:url];</span><br><span class="line">request<span class="variable">.HTTPMethod</span> = <span class="string">@"POST"</span>;</span><br><span class="line"></span><br><span class="line"><span class="built_in">NSDictionary</span> *jsonDic = [<span class="built_in">NSDictionary</span> dictionaryWithObjectsAndKeys:<span class="string">@"login"</span>,<span class="string">@"cmd"</span>,<span class="string">@"18688889999"</span>,<span class="string">@"account"</span>,<span class="string">@"0ca175b9c0f726a831d895e269332461"</span>,<span class="string">@"password"</span> ,<span class="literal">nil</span>];</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> ([<span class="built_in">NSJSONSerialization</span> isValidJSONObject:jsonDic])</span><br><span class="line">    </span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">NSError</span> *error;</span><br><span class="line">    <span class="built_in">NSData</span> *jsonData = [<span class="built_in">NSJSONSerialization</span> dataWithJSONObject:jsonDic options:<span class="built_in">NSJSONWritingPrettyPrinted</span> error:&amp;error];</span><br><span class="line">    <span class="built_in">NSString</span> *json =[[<span class="built_in">NSString</span> alloc] initWithData:jsonData encoding:<span class="built_in">NSUTF8StringEncoding</span>];</span><br><span class="line">    <span class="built_in">NSLog</span>(<span class="string">@"请求的Json数据 :%@"</span>,json);</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">    <span class="comment">//发送请求</span></span><br><span class="line">    [request setHTTPBody:jsonData];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//打印请求</span></span><br><span class="line"><span class="built_in">NSData</span> *received = [<span class="built_in">NSURLConnection</span> sendSynchronousRequest:request returningResponse:<span class="literal">nil</span> error:<span class="literal">nil</span>];</span><br><span class="line"><span class="built_in">NSString</span> *returnStr = [[<span class="built_in">NSString</span> alloc]initWithData:received encoding:<span class="built_in">NSUTF8StringEncoding</span>];</span><br><span class="line"><span class="built_in">NSLog</span>(<span class="string">@"接收的Json数据 :%@"</span>,returnStr);</span><br></pre></td></tr></table></figure>
<p>这时候请求的数据是这样子的：<br><img src="/img/nsmutableurlrequest2.jpg" alt=""></p>
]]></content>
    <summary type="html">
    <![CDATA[<h2 id="Post_用_NSString_组建">Post 用 NSString 组建</h2><figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line]]>
    </summary>
    
      <category term="iOS" scheme="http://lecason.com/tags/iOS/"/>
    
      <category term="iOS" scheme="http://lecason.com/categories/iOS/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Objective-C Hex NSString 与 基础类型之间的转换]]></title>
    <link href="http://lecason.com/2015/08/28/Objective-C-Hex-String-NSData-Convert/"/>
    <id>http://lecason.com/2015/08/28/Objective-C-Hex-String-NSData-Convert/</id>
    <published>2015-08-28T01:53:28.000Z</published>
    <updated>2015-09-05T09:21:37.000Z</updated>
    <content type="html"><![CDATA[<h2 id="十六进制字符串Hex_NSString_转换成_NSData">十六进制字符串Hex NSString 转换成 NSData</h2><p>创建一个NSString的类别</p>
<figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">@interface</span> <span class="title">NSString</span> (<span class="title">NSStringHexToBytes</span>)</span></span><br><span class="line">- (<span class="built_in">NSData</span> *)hexToBytes;</span><br><span class="line"><span class="keyword">@end</span></span><br></pre></td></tr></table></figure>
<figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor">#import <span class="title">"NSStringHexToBytes.h"</span></span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">@implementation</span> <span class="title">NSString</span> (<span class="title">NSStringHexToBytes</span>)</span></span><br><span class="line"></span><br><span class="line">- (<span class="built_in">NSData</span> *) hexToBytes &#123;</span><br><span class="line">    <span class="built_in">NSMutableData</span>* data = [<span class="built_in">NSMutableData</span> data];</span><br><span class="line">    <span class="keyword">int</span> idx;</span><br><span class="line">    <span class="keyword">for</span> (idx = <span class="number">0</span>; idx+<span class="number">2</span> &lt;= <span class="keyword">self</span><span class="variable">.length</span>; idx+=<span class="number">2</span>) &#123;</span><br><span class="line">        <span class="built_in">NSRange</span> range = <span class="built_in">NSMakeRange</span>(idx, <span class="number">2</span>);</span><br><span class="line">        <span class="built_in">NSString</span>* hexStr = [<span class="keyword">self</span> substringWithRange:range];</span><br><span class="line">        <span class="built_in">NSScanner</span>* scanner = [<span class="built_in">NSScanner</span> scannerWithString:hexStr];</span><br><span class="line">        <span class="keyword">unsigned</span> <span class="keyword">int</span> intValue;</span><br><span class="line">        [scanner scanHexInt:&amp;intValue];</span><br><span class="line">        [data appendBytes:&amp;intValue length:<span class="number">1</span>];  </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> data;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">@end</span></span><br></pre></td></tr></table></figure>
<p>使用方法</p>
<figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">NSString</span> *hexStr = <span class="string">@"808080"</span>;</span><br><span class="line"><span class="built_in">NSData</span> *data = hexStr<span class="variable">.hexToBytes</span>;</span><br><span class="line"><span class="built_in">NSLog</span>(<span class="string">@"%@"</span>,data);</span><br></pre></td></tr></table></figure>
<h2 id="Int_转换成_NSdata">Int 转换成 NSdata</h2><figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> i = <span class="number">1</span>;</span><br><span class="line"><span class="built_in">NSData</span> *data = [<span class="built_in">NSData</span> dataWithBytes: &amp;i length: <span class="keyword">sizeof</span>(i)];</span><br></pre></td></tr></table></figure>
<h2 id="NSdata_转换成_Int">NSdata 转换成 Int</h2><figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> i;</span><br><span class="line">[data getBytes: &amp;i length: <span class="keyword">sizeof</span>(i)];</span><br></pre></td></tr></table></figure>
<h2 id="Int_数据转_Hex_十六进制_字符串">Int 数据转 Hex 十六进制 字符串</h2><figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">i = <span class="number">10</span>;</span><br><span class="line"></span><br><span class="line"><span class="built_in">NSMutableString</span> *str = [[<span class="built_in">NSMutableString</span> alloc]initWithFormat:<span class="string">@"%02x"</span>,i ];</span><br></pre></td></tr></table></figure>
]]></content>
    <summary type="html">
    <![CDATA[<h2 id="十六进制字符串Hex_NSString_转换成_NSData">十六进制字符串Hex NSString 转换成 NSData</h2><p>创建一个NSString的类别</p>
<figure class="highlight objectivec"><tabl]]>
    </summary>
    
      <category term="Objective-C" scheme="http://lecason.com/tags/Objective-C/"/>
    
      <category term="Objective-C" scheme="http://lecason.com/categories/Objective-C/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[iOS Bluetooth 设置后台运行]]></title>
    <link href="http://lecason.com/2015/08/27/iOS-Bluetooth-Background-Mode/"/>
    <id>http://lecason.com/2015/08/27/iOS-Bluetooth-Background-Mode/</id>
    <published>2015-08-27T02:03:23.000Z</published>
    <updated>2015-09-05T09:06:22.000Z</updated>
    <content type="html"><![CDATA[<h2 id="方法一_在_info-plist_设置">方法一 在 info.plist 设置</h2><p>在<code>info.plist里面</code>添加一条</p>
<ul>
<li><code>UIBackgroundModes</code></li>
</ul>
<p>并设置两个条目</p>
<ul>
<li><code>App communicates using CoreBluetooth</code></li>
<li><code>App communicates using CoreBluetooth</code></li>
</ul>
<h2 id="方法二_在项目设置里面设置">方法二 在项目设置里面设置</h2><p>点击左侧蓝色项目 &gt; Targets &gt; Capabilities</p>
<p><img src="/img/bluetoothBackgroundMode.png" alt=""></p>
]]></content>
    <summary type="html">
    <![CDATA[<h2 id="方法一_在_info-plist_设置">方法一 在 info.plist 设置</h2><p>在<code>info.plist里面</code>添加一条</p>
<ul>
<li><code>UIBackgroundModes</code></li>
</ul]]>
    </summary>
    
      <category term="iOS" scheme="http://lecason.com/tags/iOS/"/>
    
      <category term="iOS" scheme="http://lecason.com/categories/iOS/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Objective-C 定时器 NSTimer 使用]]></title>
    <link href="http://lecason.com/2015/08/26/Objective-CNSTimer/"/>
    <id>http://lecason.com/2015/08/26/Objective-CNSTimer/</id>
    <published>2015-08-26T10:05:22.000Z</published>
    <updated>2015-09-05T09:18:31.000Z</updated>
    <content type="html"><![CDATA[<p>NSTimer 有一个属性叫 fireDate ，意思就是开始时间。所以我们设置一个超远的时间就是暂停，设置当前时间就是开始。</p>
<h2 id="创建">创建</h2><figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">_timer = [<span class="built_in">NSTimer</span> scheduledTimerWithTimeInterval:<span class="number">1</span> target:<span class="keyword">self</span> selector:<span class="keyword">@selector</span>(testTimer) userInfo:<span class="literal">nil</span> repeats:<span class="literal">YES</span>];</span><br></pre></td></tr></table></figure>
<h2 id="暂停">暂停</h2><figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[_timer setFireDate:[<span class="built_in">NSDate</span> distantFuture]];</span><br></pre></td></tr></table></figure>
<h2 id="继续">继续</h2><figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[_timer setFireDate:[<span class="built_in">NSDate</span> date]];</span><br></pre></td></tr></table></figure>
<h2 id="停止">停止</h2><figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[_time invalidate];</span><br></pre></td></tr></table></figure>
]]></content>
    <summary type="html">
    <![CDATA[<p>NSTimer 有一个属性叫 fireDate ，意思就是开始时间。所以我们设置一个超远的时间就是暂停，设置当前时间就是开始。</p>
<h2 id="创建">创建</h2><figure class="highlight objectivec"><table><tr><t]]>
    </summary>
    
      <category term="Objective-C" scheme="http://lecason.com/tags/Objective-C/"/>
    
      <category term="Objective-C" scheme="http://lecason.com/categories/Objective-C/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[开发者账号为设备创建开发调试证书]]></title>
    <link href="http://lecason.com/2015/08/22/Create-A-Cert-For-Device/"/>
    <id>http://lecason.com/2015/08/22/Create-A-Cert-For-Device/</id>
    <published>2015-08-22T11:37:35.000Z</published>
    <updated>2015-09-05T09:07:24.000Z</updated>
    <content type="html"><![CDATA[<h2 id="创建对电脑授权真机开发的证书">创建对电脑授权真机开发的证书</h2><ul>
<li>从苹果开发者中心进入<a href="https://developer.apple.com" target="_blank" rel="external">https://developer.apple.com</a> Member Center。</li>
<li><a href="https://devimages.apple.com.edgekey.net/assets/elements/membercenter/images/member-center-home-icons_2x.png" target="_blank" rel="external"></a>进入Certificates,Identifiers &amp; Profiles</li>
<li><a href="https://devimages.apple.com.edgekey.net/assets/elements/icons/32x32/folder-certificates_2x.png" target="_blank" rel="external"></a>在iOS Apps 里面点击 Certificates。</li>
<li>点击左边<code>Certificates</code>选项里面点。在后边<code>+</code>号里面添加证书。</li>
<li>点击下面选项继续</li>
</ul>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">iOS App Development</span><br><span class="line">Sign development versions of your iOS app.</span><br></pre></td></tr></table></figure>
<ul>
<li>在点击继续</li>
</ul>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">To manually generate a Certificate, you need a Certificate Signing Request (CSR) file from your Mac. To create a CSR file, follow the instructions below to create one using Keychain Access.</span><br><span class="line"></span><br><span class="line">Create a CSR file.</span><br><span class="line">In the Applications folder on your Mac, open the Utilities folder and launch Keychain Access.</span><br><span class="line"></span><br><span class="line">Within the Keychain Access drop down menu, select Keychain Access &gt; Certificate Assistant &gt; Request a Certificate from a Certificate Authority.</span><br><span class="line"></span><br><span class="line">In the Certificate Information window, enter the following information:</span><br><span class="line">In the User Email Address field, enter your email address.</span><br><span class="line">In the Common Name field, create a name <span class="keyword">for</span> your private key (e.g., John Doe Dev Key).</span><br><span class="line">The CA Email Address field should be left empty.</span><br><span class="line">In the <span class="string">"Request is"</span> group, select the <span class="string">"Saved to disk"</span> option.</span><br><span class="line">Click Continue within Keychain Access to complete the CSR generating process.</span><br></pre></td></tr></table></figure>
<ul>
<li><p>上传以前创建的 <code>CertificateSigningRequest.certSigningRequest</code> 文件</p>
</li>
<li><p>下载创建完成的文件</p>
</li>
</ul>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Download, Install and Backup</span><br><span class="line">Download your certificate to your Mac, <span class="keyword">then</span> double click the .cer file to install <span class="keyword">in</span> Keychain Access. Make sure to save a backup copy of your private and public keys somewhere secure.</span><br></pre></td></tr></table></figure>
<h2 id="添加允许真机调试的设备">添加允许真机调试的设备</h2><ul>
<li>点击左边目录中的“Devices”，同样点击右上方的“十”号，进行添加。</li>
<li>在“Register Device”里面中的“Name”填写设备名字，将来连接上对应的设备后，会在Xcode里面显示出来这个名字的。</li>
<li>在“UDID”里面填写设备的UDID，这个过程，需要通过手机或者ITunes获取，这里笔者就通过ITunes来获得了，因为ITunes自带拷贝。</li>
<li>点击“Generate”，来生成我们最后的证书。</li>
</ul>
<h2 id="创建真机调度配置文件">创建真机调度配置文件</h2><ul>
<li>选择“Provisioning Profiles”目录下的“All”，同样点击右上方的“十”号</li>
<li>在Select App ID里面选择刚才设置的ID。</li>
</ul>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">If you plan to use services such as Game Center, In-App Purchase, and Push Notifications, or want a Bundle ID unique to a single app, use an explicit App ID. If you want to create one provisioning profile <span class="keyword">for</span> multiple apps or don<span class="string">'t need a specific Bundle ID, select a wildcard App ID. Wildcard App IDs use an asterisk (*) as the last digit in the Bundle ID field. Please note that iOS App IDs and Mac App IDs cannot be used interchangeably.</span></span><br></pre></td></tr></table></figure>
<ul>
<li>下载创建好的配置文件在Mac上双击</li>
</ul>
<h2 id="Xcode上设置真机调度">Xcode上设置真机调度</h2><ul>
<li>选择工程目录下的“Supporting Files”目录下的工程名字.plist文件或者“info.plist”文件（Tips：在Xcode6.0一下都是工程名.plist，Xcode6.0以上才是info.plist）。修改里面的“Bundle identifier”标示，改为我们刚才申请的标识，如果工程中有Tests测试文件夹存在，则在测试文件的info.plist做同样修改。</li>
<li>打开你工程根目录，同命的蓝色文件，在中间的地方先选择”TARGET”下的工程同名文件，在最右边的搭接面里面选择“Build Setting”，然后找到“Code Signing”选项，在“Provisioning Profile”里面选择我们第19步创建的证书，通过名字找到。之后修改“Provisioning Profile”上面的“Code Signing Identity”选择我们通过证书找到的授权证书。四个选项全部需要修改。<br>做完这一步，回到我们中间比较窄的界面，选择“PROJECT”中的工程更同名文件，进行上述操作。</li>
<li>确保设备已连接值电脑，并在解锁状态下，在Xcode运行旁边选择“运行设备”，如图，找到自己的设备，选择，运行，等待加载吧。</li>
</ul>
]]></content>
    <summary type="html">
    <![CDATA[<h2 id="创建对电脑授权真机开发的证书">创建对电脑授权真机开发的证书</h2><ul>
<li>从苹果开发者中心进入<a href="https://developer.apple.com" target="_blank" rel="external">https://d]]>
    </summary>
    
      <category term="iOS" scheme="http://lecason.com/tags/iOS/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Objective-C 按位与算CBCharacteristicProperties的组成]]></title>
    <link href="http://lecason.com/2015/08/19/Objective-C-Find-Conbine/"/>
    <id>http://lecason.com/2015/08/19/Objective-C-Find-Conbine/</id>
    <published>2015-08-19T03:05:22.000Z</published>
    <updated>2015-09-09T15:28:27.000Z</updated>
    <content type="html"><![CDATA[<p>在蓝牙开发的时候，当想发现特征<code>characteristic</code>里面可以写的时候再保存这个写的特征到本地属性。这时候我就想写</p>
<figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> (propertie <span class="keyword">in</span> characteristic<span class="variable">.properties</span>)&#123;</span><br><span class="line">	<span class="keyword">if</span> (propertie == CBCharacteristicPropertyWrite)</span><br><span class="line">	_writePropertie = propertie </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>但是发现<code>characteristic.properties</code>是一个十六进制的值0x22。这时候我就点开<code>CBCharacteristicProperties</code>发现是一个枚举：</p>
<figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">typedef</span> <span class="built_in">NS_OPTIONS</span>(<span class="built_in">NSUInteger</span>, CBCharacteristicProperties) &#123;</span><br><span class="line">    CBCharacteristicPropertyBroadcast = <span class="number">0x01</span>,</span><br><span class="line">    CBCharacteristicPropertyRead	= <span class="number">0x02</span>,</span><br><span class="line">    CBCharacteristicPropertyWriteWithoutResponse = <span class="number">0x04</span>,</span><br><span class="line">    CBCharacteristicPropertyWrite 	= <span class="number">0x08</span>,</span><br><span class="line">    CBCharacteristicPropertyNotify = <span class="number">0x10</span>,</span><br><span class="line">    CBCharacteristicPropertyIndicate	 = <span class="number">0x20</span>,</span><br><span class="line">    CBCharacteristicPropertyAuthenticatedSignedWrites = <span class="number">0x40</span>,</span><br><span class="line">    CBCharacteristicPropertyExtendedProperties = <span class="number">0x80</span>,</span><br><span class="line">    CBCharacteristicPropertyNotifyEncryptionRequired <span class="built_in">NS_ENUM_AVAILABLE</span>(NA, <span class="number">6</span>_0)		= <span class="number">0x100</span>,</span><br><span class="line">    CBCharacteristicPropertyIndicateEncryptionRequired <span class="built_in">NS_ENUM_AVAILABLE</span>(NA, <span class="number">6</span>_0)	= <span class="number">0x200</span></span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>
<p>就猜想0x22应该是由上面的组合而成，而且知道了值就应该能反推出来值是由哪个组成的。猜想算法，先用结果<code>0x22</code>减去枚举的值，从大到小开始减，一直循环到0，就能找出组合数。</p>
<figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> propertie = <span class="number">0x22</span>;    <span class="comment">/// 返回的值</span></span><br><span class="line"><span class="keyword">int</span> properties = <span class="number">0x200</span>;  <span class="comment">/// 枚举最大的值</span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++) &#123;</span><br><span class="line">    <span class="keyword">if</span> ((propertie - properties) &lt; <span class="number">0</span>) &#123;</span><br><span class="line">        properties = properties / <span class="number">2</span>;  <span class="comment">/// 倍数增长就除以2</span></span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        propertie = propertie - propertie / <span class="number">2</span>;</span><br><span class="line">        <span class="built_in">NSLog</span>(<span class="string">@"%d"</span>,(propertie - <span class="number">1</span>) / <span class="number">2</span> );</span><br><span class="line">        <span class="keyword">switch</span> ((propertie - <span class="number">1</span>) / <span class="number">2</span>) &#123;</span><br><span class="line">            <span class="keyword">case</span> CBCharacteristicPropertyIndicateEncryptionRequired:</span><br><span class="line">                <span class="built_in">NSLog</span>(<span class="string">@"CBCharacteristicPropertyIndicateEncryptionRequired"</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> CBCharacteristicPropertyNotifyEncryptionRequired:</span><br><span class="line">                <span class="built_in">NSLog</span>(<span class="string">@"CBCharacteristicPropertyNotifyEncryptionRequired"</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> CBCharacteristicPropertyExtendedProperties:</span><br><span class="line">                <span class="built_in">NSLog</span>(<span class="string">@"CBCharacteristicPropertyExtendedProperties"</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> CBCharacteristicPropertyAuthenticatedSignedWrites:</span><br><span class="line">                <span class="built_in">NSLog</span>(<span class="string">@"CBCharacteristicPropertyAuthenticatedSignedWrites"</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> CBCharacteristicPropertyIndicate:</span><br><span class="line">                <span class="built_in">NSLog</span>(<span class="string">@"CBCharacteristicPropertyIndicate"</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> CBCharacteristicPropertyNotify:</span><br><span class="line">                <span class="built_in">NSLog</span>(<span class="string">@"CBCharacteristicPropertyNotify"</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> CBCharacteristicPropertyWrite:</span><br><span class="line">                <span class="built_in">NSLog</span>(<span class="string">@"CBCharacteristicPropertyWrite"</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> CBCharacteristicPropertyWriteWithoutResponse:</span><br><span class="line">                <span class="built_in">NSLog</span>(<span class="string">@"CBCharacteristicPropertyWriteWithoutResponse"</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> CBCharacteristicPropertyRead:</span><br><span class="line">                <span class="built_in">NSLog</span>(<span class="string">@"CBCharacteristicPropertyRead"</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> CBCharacteristicPropertyBroadcast:</span><br><span class="line">                <span class="built_in">NSLog</span>(<span class="string">@"CBCharacteristicPropertyBroadcast"</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">default</span>:</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>但是发现上面的算法是有错误的，所以又写了另一个算法。</p>
<figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> propertie = <span class="number">22</span>;    <span class="comment">/// 返回的值</span></span><br><span class="line"><span class="keyword">int</span> properties = <span class="number">512</span>;  <span class="comment">/// 枚举最大的值</span></span><br><span class="line">    </span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt;= <span class="number">512</span>; i++) &#123;</span><br><span class="line">      <span class="keyword">if</span> (propertie - properties &gt;= <span class="number">0</span>) &#123;     <span class="comment">//第一次，寻找可以除最大的数</span></span><br><span class="line">           propertie = propertie % properties;</span><br><span class="line">           <span class="built_in">NSLog</span>(<span class="string">@"分解数：%d"</span>,properties);</span><br><span class="line">           <span class="keyword">if</span> (propertie == <span class="number">0</span>) &#123;</span><br><span class="line">               <span class="keyword">break</span>;</span><br><span class="line">           &#125;</span><br><span class="line">       &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        properties = properties / <span class="number">2</span>;</span><br><span class="line">	&#125;</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure>
<p>后面发现原来有个按位与的运行<code>&amp;</code>,如果用这个来判断就简单得多了</p>
<figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">-(<span class="keyword">void</span>)logCharacteristicProperties:(CBCharacteristicProperties)properties </span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span> (properties &amp; CBCharacteristicPropertyBroadcast) &#123;</span><br><span class="line">        <span class="built_in">NSLog</span>(<span class="string">@"CBCharacteristicPropertyBroadcast"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (properties &amp; CBCharacteristicPropertyRead) &#123;</span><br><span class="line">        <span class="built_in">NSLog</span>(<span class="string">@"CBCharacteristicPropertyRead"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (properties &amp; CBCharacteristicPropertyWriteWithoutResponse) &#123;</span><br><span class="line">        <span class="built_in">NSLog</span>(<span class="string">@"CBCharacteristicPropertyWriteWithoutResponse"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (properties &amp; CBCharacteristicPropertyWrite) &#123;</span><br><span class="line">        <span class="built_in">NSLog</span>(<span class="string">@"CBCharacteristicPropertyWrite"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (properties &amp; CBCharacteristicPropertyNotify) &#123;</span><br><span class="line">        <span class="built_in">NSLog</span>(<span class="string">@"CBCharacteristicPropertyNotify"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (properties &amp; CBCharacteristicPropertyIndicate) &#123;</span><br><span class="line">        <span class="built_in">NSLog</span>(<span class="string">@"CBCharacteristicPropertyIndicate"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (properties &amp; CBCharacteristicPropertyAuthenticatedSignedWrites) &#123;</span><br><span class="line">        <span class="built_in">NSLog</span>(<span class="string">@"CBCharacteristicPropertyAuthenticatedSignedWrites"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (properties &amp; CBCharacteristicPropertyExtendedProperties) &#123;</span><br><span class="line">        <span class="built_in">NSLog</span>(<span class="string">@"CBCharacteristicPropertyExtendedProperties"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (properties &amp; CBCharacteristicPropertyNotifyEncryptionRequired) &#123;</span><br><span class="line">        <span class="built_in">NSLog</span>(<span class="string">@"CBCharacteristicPropertyNotifyEncryptionRequired"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (properties &amp; CBCharacteristicPropertyIndicateEncryptionRequired) &#123;</span><br><span class="line">        <span class="built_in">NSLog</span>(<span class="string">@"CBCharacteristicPropertyIndicateEncryptionRequired"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>Swift版本</p>
<figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> properties = <span class="type">UInt8</span>((characteristic <span class="keyword">as</span>! <span class="type">CBCharacteristic</span>).properties.rawValue)</span><br><span class="line"><span class="keyword">let</span> broadcast = <span class="type">UInt8</span>(<span class="type">CBCharacteristicProperties</span>.<span class="type">Broadcast</span>.rawValue)</span><br><span class="line"><span class="keyword">let</span> read = <span class="type">UInt8</span>(<span class="type">CBCharacteristicProperties</span>.<span class="type">Read</span>.rawValue)</span><br><span class="line"><span class="keyword">let</span> writeWithoutResponse = <span class="type">UInt8</span>(<span class="type">CBCharacteristicProperties</span>.<span class="type">WriteWithoutResponse</span>.rawValue)</span><br><span class="line"><span class="keyword">let</span> write = <span class="type">UInt8</span>(<span class="type">CBCharacteristicProperties</span>.<span class="type">Write</span>.rawValue)</span><br><span class="line"><span class="keyword">let</span> notify = <span class="type">UInt8</span>(<span class="type">CBCharacteristicProperties</span>.<span class="type">Notify</span>.rawValue)</span><br><span class="line"><span class="keyword">let</span> indicate = <span class="type">UInt8</span>(<span class="type">CBCharacteristicProperties</span>.<span class="type">Indicate</span>.rawValue)</span><br><span class="line"><span class="keyword">let</span> authenticatedSignedWrites = <span class="type">UInt8</span>(<span class="type">CBCharacteristicProperties</span>.<span class="type">AuthenticatedSignedWrites</span>.rawValue)</span><br><span class="line"><span class="keyword">let</span> extendedProperties = <span class="type">UInt8</span>(<span class="type">CBCharacteristicProperties</span>.<span class="type">ExtendedProperties</span>.rawValue)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> properties &amp; broadcast &gt; <span class="number">0</span> &#123;</span><br><span class="line">    <span class="built_in">println</span>(<span class="string">"&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;CBCharacteristicProperties.Broadcast"</span>)</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> properties &amp; read &gt; <span class="number">0</span> &#123;</span><br><span class="line">    <span class="built_in">println</span>(<span class="string">"&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;CBCharacteristicProperties.Read"</span>)</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> properties &amp; writeWithoutResponse &gt; <span class="number">0</span> &#123;</span><br><span class="line">    <span class="built_in">println</span>(<span class="string">"&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;CBCharacteristicProperties.WriteWithoutResponse"</span>)</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> properties &amp; write &gt; <span class="number">0</span> &#123;</span><br><span class="line">    <span class="built_in">println</span>(<span class="string">"&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;CBCharacteristicProperties.Write"</span>)</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> properties &amp; notify &gt; <span class="number">0</span> &#123;</span><br><span class="line">    <span class="built_in">println</span>(<span class="string">"&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;CBCharacteristicProperties.Notify"</span>)</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> properties &amp; indicate &gt; <span class="number">0</span> &#123;</span><br><span class="line">    <span class="built_in">println</span>(<span class="string">"&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;CBCharacteristicProperties.Indicate"</span>)</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> properties &amp; authenticatedSignedWrites &gt; <span class="number">0</span> &#123;</span><br><span class="line">    <span class="built_in">println</span>(<span class="string">"&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;CBCharacteristicProperties.AuthenticatedSignedWrites"</span>)</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> properties &amp; extendedProperties &gt; <span class="number">0</span> &#123;</span><br><span class="line">    <span class="built_in">println</span>(<span class="string">"&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;CBCharacteristicProperties.ExtendedProperties"</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> os = <span class="type">NSProcessInfo</span>().operatingSystemVersion.majorVersion</span><br><span class="line"><span class="comment">// 下面两个属性只在iOS6上有用</span></span><br><span class="line"><span class="keyword">if</span> os == <span class="number">6</span> &#123;</span><br><span class="line"><span class="keyword">let</span> notifyEncryptionRequired = <span class="type">UInt8</span>(<span class="type">CBCharacteristicProperties</span>.<span class="type">NotifyEncryptionRequired</span>.rawValue)</span><br><span class="line"><span class="keyword">let</span> indicateEncryptionRequired = <span class="type">UInt8</span>(<span class="type">CBCharacteristicProperties</span>.<span class="type">IndicateEncryptionRequired</span>.rawValue)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> properties &amp; notifyEncryptionRequired &gt; <span class="number">0</span> &#123;</span><br><span class="line">    <span class="built_in">println</span>(<span class="string">"&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;CBCharacteristicProperties.NotifyEncryptionRequired"</span>)</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> properties &amp; indicateEncryptionRequired &gt; <span class="number">0</span> &#123;</span><br><span class="line">    <span class="built_in">println</span>(<span class="string">"&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;CBCharacteristicProperties.IndicateEncryptionRequired"</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
    <summary type="html">
    <![CDATA[<p>在蓝牙开发的时候，当想发现特征<code>characteristic</code>里面可以写的时候再保存这个写的特征到本地属性。这时候我就想写</p>
<figure class="highlight objectivec"><table><tr><td class="g]]>
    </summary>
    
      <category term="iOS" scheme="http://lecason.com/tags/iOS/"/>
    
      <category term="Objective-C" scheme="http://lecason.com/categories/Objective-C/"/>
    
  </entry>
  
</feed>

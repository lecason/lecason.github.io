<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title><![CDATA[LECASON]]></title>
  
  <link href="/atom.xml" rel="self"/>
  <link href="http://lecason.com/"/>
  <updated>2016-01-09T03:41:51.000Z</updated>
  <id>http://lecason.com/</id>
  
  <author>
    <name><![CDATA[Lecason]]></name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title><![CDATA[Swift 微信登录Demo]]></title>
    <link href="http://lecason.com/2016/01/09/iOS-Wechat-Login-Pure-Demo/"/>
    <id>http://lecason.com/2016/01/09/iOS-Wechat-Login-Pure-Demo/</id>
    <published>2016-01-09T02:30:22.000Z</published>
    <updated>2016-01-09T03:41:51.000Z</updated>
    <content type="html"><![CDATA[<h2 id="一、_准备工作">一、 准备工作</h2><blockquote>
<p>Xcode 版本 <code>Version 7.2 (7C68)</code><br>WeChatSKD <code>SDK1.6.2</code></p>
</blockquote>
<ol>
<li>到<a href="https://open.weixin.qq.com" target="_blank" rel="external">微信开放平台</a>注册账号并得到登录的权限。</li>
</ol>
<h2 id="二、_导入相关文件">二、 导入相关文件</h2><h3 id="导入SDK">导入SDK</h3><p><img src="/img/wechat1.png" alt=""></p>
<h3 id="创建桥接文件Wechat-Bridging-Header-h">创建桥接文件<code>Wechat-Bridging-Header.h</code></h3><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">#ifndef <span class="type">Wechat_Bridging_Header_h</span></span><br><span class="line">#define <span class="type">Wechat_Bridging_Header_h</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">@<span class="keyword">import</span> <span class="type">UIKit</span>;</span><br><span class="line">#<span class="keyword">import</span> <span class="string">"WXApiObject.h"</span></span><br><span class="line">#<span class="keyword">import</span> <span class="string">"WXApi.h"</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#endif <span class="comment">/* Wechat_Bridging_Header_h */</span></span><br></pre></td></tr></table></figure>
<h3 id="建立连接地址_$(SRCROOT)/Wechat/Wechat-Bridging-Header-h">建立连接地址 <code>$(SRCROOT)/Wechat/Wechat-Bridging-Header.h</code></h3><p><img src="/img/wechat2.png" alt=""></p>
<h3 id="导入相关的库">导入相关的库</h3><p><img src="/img/wechat3.png" alt=""></p>
<h3 id="设置Url_schame">设置Url schame</h3><p><img src="/img/wechat4.png" alt=""></p>
<h3 id="在文本文件里面打开_Info-plist_并添加内容">在文本文件里面打开 <code>Info.plist</code> 并添加内容</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&lt;key&gt;LSApplicationQueriesSchemes&lt;/key&gt;</span><br><span class="line">&lt;array&gt;</span><br><span class="line">&lt;string&gt;weixin&lt;/string&gt;</span><br><span class="line">&lt;/array&gt;</span><br><span class="line">&lt;key&gt;NSAppTransportSecurity&lt;/key&gt;</span><br><span class="line">&lt;dict&gt;</span><br><span class="line">&lt;key&gt;NSAllowsArbitraryLoads&lt;/key&gt;</span><br><span class="line">&lt;<span class="literal">true</span>/&gt;</span><br><span class="line">&lt;/dict&gt;</span><br></pre></td></tr></table></figure>
<p><img src="/img/wechat5.png" alt=""></p>
<h3 id="在Appdelegate里面添加微信代理">在Appdelegate里面添加微信代理</h3><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">AppDelegate</span>: <span class="title">UIResponder</span>, <span class="title">UIApplicationDelegate</span>, <span class="title">WXApiDelegate</span></span></span><br></pre></td></tr></table></figure>
<h3 id="在Appdelegate注册微信ID">在Appdelegate注册微信ID</h3><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="func"><span class="keyword">func</span> <span class="title">application</span><span class="params">(application: UIApplication, didFinishLaunchingWithOptions launchOptions: [NSObject: AnyObject]?)</span></span> -&gt; <span class="type">Bool</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="type">WXApi</span>.registerApp(<span class="string">"Weixin_AppID"</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="literal">true</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="重写AppDelegate方法">重写AppDelegate方法</h3><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="func"><span class="keyword">func</span> <span class="title">application</span><span class="params">(application: UIApplication, openURL url: NSURL, sourceApplication: String?, annotation: AnyObject)</span></span> -&gt; <span class="type">Bool</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="type">WXApi</span>.handleOpenURL(url, delegate: <span class="keyword">self</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="func"><span class="keyword">func</span> <span class="title">application</span><span class="params">(application: UIApplication, handleOpenURL url: NSURL)</span></span> -&gt; <span class="type">Bool</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="type">WXApi</span>.handleOpenURL(url, delegate: <span class="keyword">self</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="在AppDelegate里面处理WeixDelegate">在AppDelegate里面处理WeixDelegate</h3><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="func"><span class="keyword">func</span> <span class="title">onReq</span><span class="params">(req: BaseReq!)</span></span> &#123;</span><br><span class="line">    <span class="comment">//onReq是微信终端向第三方程序发起请求，要求第三方程序响应。第三方程序响应完后必须调用sendRsp返回。在调用sendRsp返回时，会切回到微信终端程序界面。</span></span><br><span class="line">    <span class="built_in">print</span>(req.type)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="func"><span class="keyword">func</span> <span class="title">onResp</span><span class="params">(resp: BaseResp!)</span></span> &#123;</span><br><span class="line"><span class="comment">//如果第三方程序向微信发送了sendReq的请求，那么onResp会被回调。sendReq请求调用后，会切到微信终端程序界面。</span></span><br><span class="line">    <span class="keyword">if</span> resp.isKindOfClass(<span class="type">SendAuthResp</span>) &#123;</span><br><span class="line">        <span class="keyword">let</span> response = resp <span class="keyword">as</span>! <span class="type">SendAuthResp</span></span><br><span class="line">        <span class="built_in">print</span>(<span class="string">"ErrCode : <span class="subst">\(response.errCode)</span>"</span>)</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">"EodeStr : <span class="subst">\(response.errStr)</span>"</span>)</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">"Code : <span class="subst">\(response.code)</span>"</span>)</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">"State : <span class="subst">\(response.state)</span>"</span>)</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">"Lang : <span class="subst">\(response.lang)</span>"</span>)</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">"Country : <span class="subst">\(response.country)</span>"</span>)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="发起微信登录请求">发起微信登录请求</h3><p>这时候，在iPhone上应该就会跳转到微信界面了。</p>
<figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">override</span> <span class="func"><span class="keyword">func</span> <span class="title">viewDidLoad</span><span class="params">()</span></span> &#123;</span><br><span class="line">    <span class="keyword">super</span>.viewDidLoad()</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 微信登录请求</span></span><br><span class="line">    <span class="keyword">let</span> req = <span class="type">SendAuthReq</span>()</span><br><span class="line">    req.scope = <span class="string">"snsapi_userinfo"</span></span><br><span class="line">    req.state = <span class="string">"123"</span></span><br><span class="line">    <span class="type">WXApi</span>.sendReq(req)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>这时修改App就会跳转到微信，点击确定后，返回代理就会打印相关的信息：</p>
<p><img src="/img/wechat0.jpeg" alt=""></p>
<figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ErrCode : 0&#10;EodeStr : nil&#10;Code : 041xxxx4b4b65740xxxx202dc4xxxxcQ&#10;State : 123&#10;Lang : nil&#10;Country : nil</span><br></pre></td></tr></table></figure>
<h3 id="从得到的Code中请求Access_Token">从得到的Code中请求Access_Token</h3><p>请求地址：</p>
<p><img src="/img/wechat6.png" alt=""></p>
<h1 id="参考资料">参考资料</h1><p><a href="https://open.weixin.qq.com/cgi-bin/showdocument?action=dir_list&amp;t=resource/res_list&amp;verify=1&amp;id=1417694084&amp;token=&amp;lang=zh_CN" target="_blank" rel="external">微信官方文档《iOS接入指南》</a><br><a href="https://open.weixin.qq.com/zh_CN/htmledition/res/dev/document/sdk/ios/index.html" target="_blank" rel="external">微信iOS SDK文档</a></p>
]]></content>
    <summary type="html">
    <![CDATA[<h2 id="一、_准备工作">一、 准备工作</h2><blockquote>
<p>Xcode 版本 <code>Version 7.2 (7C68)</code><br>WeChatSKD <code>SDK1.6.2</code></p>
</blockquote>
<]]>
    </summary>
    
      <category term="iOS" scheme="http://lecason.com/tags/iOS/"/>
    
      <category term="Swift" scheme="http://lecason.com/categories/Swift/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[iOS 自定义每个ViewController支持的旋转方向]]></title>
    <link href="http://lecason.com/2016/01/02/iOS-Custom-Device-Orientation/"/>
    <id>http://lecason.com/2016/01/02/iOS-Custom-Device-Orientation/</id>
    <published>2016-01-02T03:58:43.000Z</published>
    <updated>2016-01-02T04:04:16.000Z</updated>
    <content type="html"><![CDATA[<p>首先在项目设置里勾选所有页面支持的方向：</p>
<p><img src="http://i.stack.imgur.com/l9mjW.png" alt=""></p>
<p>然后设置每一个想自定义的ViewController重写方法：</p>
<figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 如果是这几个方向就自动旋转</span></span><br><span class="line"><span class="keyword">override</span> <span class="func"><span class="keyword">func</span> <span class="title">shouldAutorotate</span><span class="params">()</span></span> -&gt; <span class="type">Bool</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="type">UIDevice</span>.currentDevice().orientation == <span class="type">UIDeviceOrientation</span>.<span class="type">Portrait</span> ||</span><br><span class="line">        <span class="type">UIDevice</span>.currentDevice().orientation == <span class="type">UIDeviceOrientation</span>.<span class="type">Unknown</span> ||</span><br><span class="line">        <span class="type">UIDevice</span>.currentDevice().orientation == <span class="type">UIDeviceOrientation</span>.<span class="type">LandscapeRight</span> ||</span><br><span class="line">        <span class="type">UIDevice</span>.currentDevice().orientation == <span class="type">UIDeviceOrientation</span>.<span class="type">LandscapeLeft</span></span><br><span class="line">    ) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 这个ViewController所支持的方向</span></span><br><span class="line"><span class="keyword">override</span> <span class="func"><span class="keyword">func</span> <span class="title">supportedInterfaceOrientations</span><span class="params">()</span></span> -&gt; <span class="type">UIInterfaceOrientationMask</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> [<span class="type">UIInterfaceOrientationMask</span>.<span class="type">Landscape</span>]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="参考资料">参考资料</h2><p><a href="http://stackoverflow.com/questions/25651969/setting-device-orientation-in-swift-ios" target="_blank" rel="external">Setting device orientation in Swift iOS</a></p>
]]></content>
    <summary type="html">
    <![CDATA[<p>首先在项目设置里勾选所有页面支持的方向：</p>
<p><img src="http://i.stack.imgur.com/l9mjW.png" alt=""></p>
<p>然后设置每一个想自定义的ViewController重写方法：</p>
<figure clas]]>
    </summary>
    
      <category term="iOS" scheme="http://lecason.com/tags/iOS/"/>
    
      <category term="iOS" scheme="http://lecason.com/categories/iOS/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[iOS 关于UIAlertController]]></title>
    <link href="http://lecason.com/2015/12/25/iOS-About-AlertController/"/>
    <id>http://lecason.com/2015/12/25/iOS-About-AlertController/</id>
    <published>2015-12-25T01:40:51.000Z</published>
    <updated>2015-12-25T01:50:44.000Z</updated>
    <content type="html"><![CDATA[<p>iOS8.0 有了个UIAlertController,感觉挺好用的。</p>
<p>用UIAlertController实现一个类似UIActionSheet的效果：</p>
<figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="func"><span class="keyword">func</span> <span class="title">moreAction</span><span class="params">()</span></span> &#123;</span><br><span class="line">    <span class="keyword">let</span> alertController = <span class="type">UIAlertController</span>(title: <span class="literal">nil</span>, message: <span class="literal">nil</span>, preferredStyle: <span class="type">UIAlertControllerStyle</span>.<span class="type">ActionSheet</span>)</span><br><span class="line">    <span class="keyword">let</span> cancelAction = <span class="type">UIAlertAction</span>(title: <span class="string">"取消"</span>,</span><br><span class="line">    style: <span class="type">UIAlertActionStyle</span>.<span class="type">Cancel</span>, handler: &#123; (action: <span class="type">UIAlertAction</span>) -&gt; <span class="type">Void</span> <span class="keyword">in</span></span><br><span class="line">    &#125;)</span><br><span class="line">    <span class="keyword">let</span> indexAction = <span class="type">UIAlertAction</span>(title: <span class="string">"于主页显示并操作"</span>,</span><br><span class="line">    style: <span class="type">UIAlertActionStyle</span>.<span class="type">Default</span>, handler: &#123; (action: <span class="type">UIAlertAction</span>) -&gt; <span class="type">Void</span> <span class="keyword">in</span></span><br><span class="line">    &#125;)</span><br><span class="line">    <span class="keyword">let</span> managerAction = <span class="type">UIAlertAction</span>(title: <span class="string">"用户管理"</span>,</span><br><span class="line">    style: <span class="type">UIAlertActionStyle</span>.<span class="type">Default</span>, handler: &#123; (action: <span class="type">UIAlertAction</span>) -&gt; <span class="type">Void</span> <span class="keyword">in</span></span><br><span class="line"></span><br><span class="line">    &#125;)</span><br><span class="line">    <span class="keyword">let</span> gpsAction = <span class="type">UIAlertAction</span>(title: <span class="string">"GPS定位"</span>,</span><br><span class="line">    style: <span class="type">UIAlertActionStyle</span>.<span class="type">Default</span>, handler: &#123; (action: <span class="type">UIAlertAction</span>) -&gt; <span class="type">Void</span> <span class="keyword">in</span></span><br><span class="line"></span><br><span class="line">    &#125;)</span><br><span class="line">    <span class="keyword">let</span> renameAction = <span class="type">UIAlertAction</span>(title: <span class="string">"重命名"</span>,</span><br><span class="line">    style: <span class="type">UIAlertActionStyle</span>.<span class="type">Default</span>, handler: &#123; (action: <span class="type">UIAlertAction</span>) -&gt; <span class="type">Void</span> <span class="keyword">in</span></span><br><span class="line"></span><br><span class="line">    &#125;)</span><br><span class="line">    <span class="keyword">let</span> qrAction = <span class="type">UIAlertAction</span>(title: <span class="string">"保存二维码"</span>,</span><br><span class="line">    style: <span class="type">UIAlertActionStyle</span>.<span class="type">Default</span>, handler: &#123; (action: <span class="type">UIAlertAction</span>) -&gt; <span class="type">Void</span> <span class="keyword">in</span></span><br><span class="line"></span><br><span class="line">    &#125;)</span><br><span class="line">    alertController.addAction(cancelAction)</span><br><span class="line">    alertController.addAction(indexAction)</span><br><span class="line">    alertController.addAction(managerAction)</span><br><span class="line">    alertController.addAction(gpsAction)</span><br><span class="line">    alertController.addAction(renameAction)</span><br><span class="line">    alertController.addAction(qrAction)</span><br><span class="line">    <span class="keyword">self</span>.presentViewController(alertController, animated: <span class="literal">true</span>, completion: <span class="literal">nil</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>效果:<br><img src="/img/alertviewcontroller1.png" alt=""></p>
]]></content>
    <summary type="html">
    <![CDATA[<p>iOS8.0 有了个UIAlertController,感觉挺好用的。</p>
<p>用UIAlertController实现一个类似UIActionSheet的效果：</p>
<figure class="highlight swift"><table><tr><td c]]>
    </summary>
    
      <category term="iOS" scheme="http://lecason.com/tags/iOS/"/>
    
      <category term="iOS" scheme="http://lecason.com/categories/iOS/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[iOS 讯飞语音识别极简Demo]]></title>
    <link href="http://lecason.com/2015/12/21/iOS-Xunfei/"/>
    <id>http://lecason.com/2015/12/21/iOS-Xunfei/</id>
    <published>2015-12-20T17:08:29.000Z</published>
    <updated>2015-12-30T17:14:12.000Z</updated>
    <content type="html"><![CDATA[<h2 id="导入头文件">导入头文件</h2><p>从<a href="http://www.xfyun.cn" target="_blank" rel="external">迅飞开发者平台</a>下载SDK，和导入SDK所要的库。引入头文件，以及遵从代理。</p>
<figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor">#import <span class="title">&lt;UIKit/UIKit.h&gt;</span></span></span><br><span class="line"><span class="preprocessor">#import <span class="title">"iflyMSC/iflyMSC.h"</span></span></span><br><span class="line"><span class="preprocessor">#import <span class="title">"iflyMSC/IFlySpeechRecognizerDelegate.h"</span></span></span><br><span class="line"><span class="preprocessor">#import <span class="title">"iflyMSC/IFlySpeechRecognizer.h"</span></span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">@interface</span> <span class="title">ViewController</span> : <span class="title">UIViewController</span>&lt;<span class="title">IFlySpeechRecognizerDelegate</span>&gt;</span></span><br><span class="line"><span class="keyword">@property</span> (<span class="keyword">nonatomic</span>, <span class="keyword">strong</span>) IFlySpeechRecognizer *iFlySpeechRecognizer;   <span class="comment">//不带界面的识别对象</span></span><br><span class="line"><span class="keyword">@end</span></span><br></pre></td></tr></table></figure>
<h2 id="初使化AppId">初使化AppId</h2><blockquote>
<p>注意下载的SDK要和AppId相对应。</p>
</blockquote>
<figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">-(<span class="keyword">void</span>)initAppId</span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">NSString</span> *initString = [[<span class="built_in">NSString</span> alloc] initWithFormat:<span class="string">@"appid=%@"</span>,<span class="string">@"567f981a"</span>];</span><br><span class="line">    [IFlySpeechUtility createUtility:initString];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="设置识别参数">设置识别参数</h2><figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line">-(<span class="keyword">void</span>)initRecognizer</span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">//单例模式，无UI的实例</span></span><br><span class="line">    <span class="keyword">if</span> (_iFlySpeechRecognizer == <span class="literal">nil</span>) &#123;</span><br><span class="line">    _iFlySpeechRecognizer = [IFlySpeechRecognizer sharedInstance];</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 设置参数</span></span><br><span class="line">    <span class="keyword">if</span> (_iFlySpeechRecognizer != <span class="literal">nil</span>) &#123;</span><br><span class="line">    <span class="comment">//扩展参数</span></span><br><span class="line">    [_iFlySpeechRecognizer setParameter:<span class="string">@""</span> forKey:[IFlySpeechConstant PARAMS]];</span><br><span class="line">    <span class="comment">//设置听写模式</span></span><br><span class="line">    [_iFlySpeechRecognizer setParameter:<span class="string">@"iat"</span> forKey:[IFlySpeechConstant IFLY_DOMAIN]];</span><br><span class="line">    <span class="comment">//设置最长录音时间</span></span><br><span class="line">    [_iFlySpeechRecognizer setParameter:<span class="string">@"30000"</span> forKey:[IFlySpeechConstant SPEECH_TIMEOUT]];</span><br><span class="line">    <span class="comment">//设置后端点</span></span><br><span class="line">    [_iFlySpeechRecognizer setParameter:<span class="string">@"1800"</span> forKey:[IFlySpeechConstant VAD_EOS]];</span><br><span class="line">    <span class="comment">//设置前端点</span></span><br><span class="line">    [_iFlySpeechRecognizer setParameter:<span class="string">@"1800"</span> forKey:[IFlySpeechConstant VAD_BOS]];</span><br><span class="line">    <span class="comment">//网络等待时间</span></span><br><span class="line">    [_iFlySpeechRecognizer setParameter:<span class="string">@"20000"</span> forKey:[IFlySpeechConstant NET_TIMEOUT]];</span><br><span class="line">    <span class="comment">//设置采样率，推荐使用16K</span></span><br><span class="line">    [_iFlySpeechRecognizer setParameter:<span class="string">@"16000"</span> forKey:[IFlySpeechConstant SA<span class="built_in">MPLE_RATE</span>]];</span><br><span class="line">    <span class="comment">//设置语言</span></span><br><span class="line">    [_iFlySpeechRecognizer setParameter:<span class="string">@"zh_cn"</span> forKey:[IFlySpeechConstant LANGUAGE]];</span><br><span class="line">    <span class="comment">//设置方言</span></span><br><span class="line">    [_iFlySpeechRecognizer setParameter:<span class="string">@"mandarin"</span> forKey:[IFlySpeechConstant ACCENT]];</span><br><span class="line">    <span class="comment">//设置是否返回标点符号</span></span><br><span class="line">    [_iFlySpeechRecognizer setParameter:<span class="string">@"1"</span> forKey:[IFlySpeechConstant ASR_PTT]];</span><br><span class="line">    <span class="comment">//设置数据返回格式</span></span><br><span class="line">    [_iFlySpeechRecognizer setParameter:<span class="string">@"plain"</span> forKey:[IFlySpeechConstant RESULT_TYPE]];</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 设置代理</span></span><br><span class="line">    _iFlySpeechRecognizer<span class="variable">.delegate</span> = <span class="keyword">self</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="实现代理协议">实现代理协议</h2><figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 出现错误</span></span><br><span class="line">- (<span class="keyword">void</span>) onError:(IFlySpeechError *) error</span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">NSLog</span>(<span class="string">@"出现错误 ：%@"</span>,error);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 识别结果 </span></span><br><span class="line">- (<span class="keyword">void</span>) onResults:(<span class="built_in">NSArray</span> *) results isLast:(<span class="built_in">BOOL</span>)isLast</span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">NSMutableString</span> *result = [[<span class="built_in">NSMutableString</span> alloc] init];</span><br><span class="line">    <span class="built_in">NSDictionary</span> *dic = [results objectAtIndex:<span class="number">0</span>];</span><br><span class="line">    <span class="keyword">for</span> (<span class="built_in">NSString</span> *key <span class="keyword">in</span> dic) &#123;</span><br><span class="line">        [result appendFormat:<span class="string">@"\n\n------ %@ (置信度:%@) ------ \n\n"</span>,key,[dic objectForKey:key]];</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 忽略结束。号</span></span><br><span class="line">    <span class="keyword">if</span> ([result hasPrefix:<span class="string">@"\n\n------ 。"</span>]) &#123;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">NSLog</span>(<span class="string">@"%@"</span>,result);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="点击开始和结束识别">点击开始和结束识别</h2><figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">- (<span class="keyword">IBAction</span>)understand:(<span class="keyword">id</span>)sender</span><br><span class="line">&#123;   </span><br><span class="line">    <span class="comment">// 开始识别</span></span><br><span class="line">    [_iFlySpeechRecognizer startListening];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">- (<span class="keyword">IBAction</span>)finish:(<span class="keyword">id</span>)sender</span><br><span class="line">&#123;   </span><br><span class="line">    <span class="comment">// 停止识别</span></span><br><span class="line">    [_iFlySpeechRecognizer stopListening];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="初使化">初使化</h2><figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">- (<span class="keyword">void</span>)viewDidLoad &#123;</span><br><span class="line">    [<span class="keyword">super</span> viewDidLoad];</span><br><span class="line">    [<span class="keyword">self</span> initAppId];</span><br><span class="line">    [<span class="keyword">self</span> initRecognizer];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="测试结果">测试结果</h2><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">2015-12-31 01:09:15.687 fa[23747:446296] [IFLYTEK] -[IFlySpeechUtility login],login=0&#10;2015-12-31 01:09:15.720 fa[23747:446296] [IFLYTEK] +[IFlySystemInfo getWorkPath],_gMscLogPath=(null)&#10;2015-12-31 01:09:15.723 fa[23747:446296] [IFLYTEK] login -[IFlyLoginParam toString:] SessionParam:timeout=20000,appid=567f981a,msc.ver=1.0.1109.1123,openudid=5f45f8636e008e75426c1dd4bb57c83da1a9312a,work_dir=/Users/lecason/Library/Developer/CoreSimulator/Devices/7B272449-DB68-43E8-A196-7C7D3FAA1F1D/data/Containers/Data/Application/4C7C4E0A-9A1A-4063-8068-B8978BC7D946/Library/Caches,carrier=,os.system=iPhone OS,os.release=8.4,os.version=8.4,os.model=x86_64,os.resolution=750*1334,os.manufact=apple,os.jailbreak=0,app.name=noName,app.path=/Users/lecason/Library/Developer/CoreSimulator/Devices/7B272449-DB68-43E8-A196-7C7D3FAA1F1D/data/Containers/Bundle/Application/E071193E-648F-4A18-9A22-378BB22F8649/fa.app,app.pkg=fa.app,net_type=wifi&#10;2015-12-31 01:09:15.723 fa[23747:446296] [IFLYTEK] paramString:&#10;timeout=20000,appid=567f981a,msc.ver=1.0.1109.1123,openudid=5f45f8636e008e75426c1dd4bb57c83da1a9312a,work_dir=/Users/lecason/Library/Developer/CoreSimulator/Devices/7B272449-DB68-43E8-A196-7C7D3FAA1F1D/data/Containers/Data/Application/4C7C4E0A-9A1A-4063-8068-B8978BC7D946/Library/Caches,carrier=,os.system=iPhone OS,os.release=8.4,os.version=8.4,os.model=x86_64,os.resolution=750*1334,os.manufact=apple,os.jailbreak=0,app.name=noName,app.path=/Users/lecason/Library/Developer/CoreSimulator/Devices/7B272449-DB68-43E8-A196-7C7D3FAA1F1D/data/Containers/Bundle/Application/E071193E-648F-4A18-9A22-378BB22F8649/fa.app,app.pkg=fa.app,net_type=wifi&#10;2015-12-31 01:09:15.726 fa[23747:446296] [IFLYTEK] login in&#10;2015-12-31 01:09:15.726 fa[23747:446296] [IFLYTEK] +[IFlySpeechRecognizer sharedInstance][IN],iflyInstance=0&#10;2015-12-31 01:09:15.726 fa[23747:446296] [IFLYTEK] +[IFlySpeechRecognizer sharedInstance][OUT],iflyInstance=53658592&#10;2015-12-31 01:09:20.069 fa[23747:446296] [IFLYTEK] -[IFlySpeechRecognizer startListening][IN]&#10;2015-12-31 01:09:20.070 fa[23747:446296] [IFLYTEK] isr SessionParam:engine_type=cloud,sub=iat,language=zh_cn,plr=0,audio_source=1,vad_speech_tail=1800,msc.skin=0,rse=utf8,asr_audio_path=record.pcm,sample_rate=16000,timeout=20000,domain=iat,speech_timeout=30000,vad_timeout=1800,vad_bos=1800,rst=plain,vad_eos=1800,auf=audio/L16;rate=16000,ptt=1,voice_change=0,sch=0,accent=mandarin,msc.ver=1.0.1109.1123,openudid=5f45f8636e008e75426c1dd4bb57c83da1a9312a,carrier=,os.system=iPhone OS,os.release=8.4,os.version=8.4,os.model=x86_64,os.resolution=750*1334,os.manufact=apple,os.jailbreak=0,app.name=noName,app.path=/Users/lecason/Library/Developer/CoreSimulator/Devices/7B272449-DB68-43E8-A196-7C7D3FAA1F1D/data/Containers/Bundle/Application/E071193E-648F-4A18-9A22-378BB22F8649/fa.app,app.pkg=fa.app,net_type=wifi&#10;2015-12-31 01:09:20.070 fa[23747:446296] [IFLYTEK] params=engine_type=cloud,sub=iat,language=zh_cn,plr=0,audio_source=1,vad_speech_tail=1800,msc.skin=0,rse=utf8,asr_audio_path=record.pcm,sample_rate=16000,timeout=20000,domain=iat,speech_timeout=30000,vad_timeout=1800,vad_bos=1800,rst=plain,vad_eos=1800,auf=audio/L16;rate=16000,ptt=1,voice_change=0,sch=0,accent=mandarin,msc.ver=1.0.1109.1123,openudid=5f45f8636e008e75426c1dd4bb57c83da1a9312a,carrier=,os.system=iPhone OS,os.release=8.4,os.version=8.4,os.model=x86_64,os.resolution=750*1334,os.manufact=apple,os.jailbreak=0,app.name=noName,app.path=/Users/lecason/Library/Developer/CoreSimulator/Devices/7B272449-DB68-43E8-A196-7C7D3FAA1F1D/data/Containers/Bundle/Application/E071193E-648F-4A18-9A22-378BB22F8649/fa.app,app.pkg=fa.app,net_type=wifi&#10;2015-12-31 01:09:20.070 fa[23747:446296] [IFLYTEK] grammarid=(null)&#10;2015-12-31 01:09:20.070 fa[23747:446296] [IFLYTEK] audioSource=1&#10;2015-12-31 01:09:20.070 fa[23747:446296] [IFLYTEK] isListening:NO&#10;2015-12-31 01:09:20.071 fa[23747:446296] [IFLYTEK] -[IFlySpeechRecognizer startListening:grammar:][IN]&#10;2015-12-31 01:09:20.071 fa[23747:446296] [IFLYTEK] _mscer count0=1&#10;2015-12-31 01:09:20.071 fa[23747:446296] [IFLYTEK] iflySpeechQueue0=1&#10;2015-12-31 01:09:20.071 fa[23747:446296] [IFLYTEK] _mscer count2=3&#10;2015-12-31 01:09:20.071 fa[23747:446296] [IFLYTEK] _mscer count3=2&#10;2015-12-31 01:09:20.071 fa[23747:446340] [IFLYTEK] -[IFlyMscRecognizer main][IN],self=53528272&#10;2015-12-31 01:09:20.071 fa[23747:446296] [IFLYTEK] iflySpeechQueue1=3&#10;2015-12-31 01:09:20.072 fa[23747:446296] [IFLYTEK] -[IFlySpeechRecognizer startListening:grammar:][OUT]&#10;2015-12-31 01:09:20.072 fa[23747:446296] [IFLYTEK] params:&#10;engine_type=cloud,sub=iat,language=zh_cn,plr=0,audio_source=1,vad_speech_tail=1800,msc.skin=0,rse=utf8,asr_audio_path=record.pcm,sample_rate=16000,timeout=20000,domain=iat,speech_timeout=30000,vad_timeout=1800,vad_bos=1800,rst=plain,vad_eos=1800,auf=audio/L16;rate=16000,ptt=1,voice_change=0,sch=0,accent=mandarin,msc.ver=1.0.1109.1123,openudid=5f45f8636e008e75426c1dd4bb57c83da1a9312a,carrier=,os.system=iPhone OS,os.release=8.4,os.version=8.4,os.model=x86_64,os.resolution=750*1334,os.manufact=apple,os.jailbreak=0,app.name=noName,app.path=/Users/lecason/Library/Developer/CoreSimulator/Devices/7B272449-DB68-43E8-A196-7C7D3FAA1F1D/data/Containers/Bundle/Application/E071193E-648F-4A18-9A22-378BB22F8649/fa.app,app.pkg=fa.app,net_type=wifi&#10;2015-12-31 01:09:20.072 fa[23747:446296] [IFLYTEK] startListening audioSource:1&#10;2015-12-31 01:09:20.072 fa[23747:446296] [IFLYTEK] -[IFlySpeechRecognizer runService][OUT]&#10;2015-12-31 01:09:20.072 fa[23747:446296] [IFLYTEK] -[IFlySpeechRecognizer startListening][OUT]&#10;2015-12-31 01:09:20.072 fa[23747:446340] [IFLYTEK] Converted String : 2016/12/31 01:09:20 072&#10;2015-12-31 01:09:20.073 fa[23747:446296] [IFLYTEK] -[IFlyMscRecognizer startRecord][IN]&#10;2015-12-31 01:09:20.073 fa[23747:446296] [IFLYTEK] +[IFlyAudioSession initRecordingAudioSession]&#10;2015-12-31 01:09:20.074 fa[23747:446296] [IFLYTEK] -[IFlyPcmRecorder setSample:],rate=16000&#10;2015-12-31 01:09:20.074 fa[23747:446296] [IFLYTEK] +[IFlySystemInfo getWorkPath],_gMscLogPath=(null)&#10;2015-12-31 01:09:20.074 fa[23747:446296] [IFLYTEK] -[IFlyPcmRecorder start],[IN]&#10;2015-12-31 01:09:20.124 fa[23747:446296] [IFLYTEK] pcmRecorder|timeValue:0.049352&#10;2015-12-31 01:09:20.124 fa[23747:446296] [IFLYTEK] -[IFlyPcmRecorder start],[OUT],ret =0&#10;2015-12-31 01:09:20.124 fa[23747:446296] [IFLYTEK] -[IFlyMscRecognizer startRecord][OUT]&#10;2015-12-31 01:09:20.124 fa[23747:446340] [IFLYTEK] -[IFlyMscRecognizer beginSession][IN],self=&#10;2015-12-31 01:09:20.124 fa[23747:446340] [IFLYTEK] beginSession before state=1&#10;2015-12-31 01:09:20.127 fa[23747:446340] [IFLYTEK] QISRSessionBegin:engine_type=cloud,sub=iat,language=zh_cn,plr=0,audio_source=1,vad_speech_tail=1800,msc.skin=0,rse=utf8,asr_audio_path=record.pcm,sample_rate=16000,timeout=20000,domain=iat,speech_timeout=30000,vad_timeout=1800,vad_bos=1800,rst=plain,vad_eos=1800,auf=audio/L16;rate=16000,ptt=1,voice_change=0,sch=0,accent=mandarin,msc.ver=1.0.1109.1123,openudid=5f45f8636e008e75426c1dd4bb57c83da1a9312a,carrier=,os.system=iPhone OS,os.release=8.4,os.version=8.4,os.model=x86_64,os.resolution=750*1334,os.manufact=apple,os.jailbreak=0,app.name=noName,app.path=/Users/lecason/Library/Developer/CoreSimulator/Devices/7B272449-DB68-43E8-A196-7C7D3FAA1F1D/data/Containers/Bundle/Application/E071193E-648F-4A18-9A22-378BB22F8649/fa.app,app.pkg=fa.app,net_type=wifi&#10;2015-12-31 01:09:20.200 fa[23747:446340] [IFLYTEK] QISRRegisterNotify=0&#10;2015-12-31 01:09:20.201 fa[23747:446340] [IFLYTEK] beginSession after state=1,_error=0&#10;2015-12-31 01:09:20.201 fa[23747:446340] [IFLYTEK] -[IFlyMscRecognizer beginSession][OUT],self=53528272&#10;2015-12-31 01:09:20.201 fa[23747:446340] [IFLYTEK] _startDate,50338112&#10;2015-12-31 01:09:20.205 fa[23747:446353] [IFLYTEK] recog_status_callback type==1,status=79&#10;2015-12-31 01:09:20.383 fa[23747:446353] [IFLYTEK] recog_status_callback type==0,status=1&#10;2015-12-31 01:09:22.946 fa[23747:446353] [IFLYTEK] recog_result_callback resultStatus==0,result=47889584,resultLen=6&#10;2015-12-31 01:09:22.946 fa[23747:446353] [IFLYTEK] -[ISREngine isVoiceChange],voiceChange=0&#10;2015-12-31 01:09:22.947 fa[23747:446296] &#10;&#10;------ &#20013;&#22269; (&#32622;&#20449;&#24230;:100) ------ &#10;&#10;2015-12-31 01:09:24.496 fa[23747:446353] [IFLYTEK] recog_status_callback type==0,status=3&#10;2015-12-31 01:09:24.497 fa[23747:446296] [IFLYTEK] -[IFlyPcmRecorder stop][IN]&#10;2015-12-31 01:09:24.497 fa[23747:446296] [IFLYTEK] -[IFlyPcmRecorder stop]|AudioQueueFlush&#10;2015-12-31 01:09:24.497 fa[23747:446353] [IFLYTEK] recog_status_callback type==0,status=3&#10;2015-12-31 01:09:24.497 fa[23747:446296] [IFLYTEK] stop recording success&#10;2015-12-31 01:09:24.498 fa[23747:446353] [IFLYTEK] recog_result_callback resultStatus==5,result=50332544,resultLen=3&#10;2015-12-31 01:09:24.498 fa[23747:446353] [IFLYTEK] -[ISREngine isVoiceChange],voiceChange=0&#10;2015-12-31 01:09:24.521 fa[23747:446296] [IFLYTEK] -[IFlyPcmRecorder stop]|AudioQueueStop&#10;2015-12-31 01:09:24.542 fa[23747:446296] [IFLYTEK] -[IFlyPcmRecorder stop]|AudioQueueDispose&#10;2015-12-31 01:09:24.542 fa[23747:446296] [IFLYTEK] -[IFlyPcmRecorder stop][OUT]&#10;2015-12-31 01:09:24.546 fa[23747:446340] [IFLYTEK] while end,self=53528272&#10;2015-12-31 01:09:24.546 fa[23747:446340] [IFLYTEK] -[IFlyMscRecognizer setSessionInfo][IN]&#10;2015-12-31 01:09:24.547 fa[23747:446340] [IFLYTEK] info:&#123;&#34;rec_ustop&#34;:&#34;0&#34;,&#34;app_fau&#34;:310,&#34;app_start&#34;:&#34;2016/12/31 01:09:20 072&#34;,&#34;app_frs&#34;:2875,&#34;rec_close&#34;:4425,&#34;app_lrs&#34;:4426,&#34;rec_start&#34;:307,&#34;rec_open&#34;:1,&#34;app_ssb&#34;:52,&#34;rec_ready&#34;:52,&#34;app_lau&#34;:4425&#125;&#10;2015-12-31 01:09:24.547 fa[23747:446340] [IFLYTEK] -[IFlyMscRecognizer setSessionInfo][OUT]&#10;2015-12-31 01:09:24.548 fa[23747:446340] [IFLYTEK] -[ISREngine stopEngine] _szSession=53715544[IN]&#10;2015-12-31 01:09:24.549 fa[23747:446340] [IFLYTEK] -[IFlyMscRecognizer setState:][ISREnd IN]&#10;2015-12-31 01:09:24.549 fa[23747:446340] [IFLYTEK] -[IFlySpeechRecognizer onError:] [IN] errorCode=0&#10;2015-12-31 01:09:24.549 fa[23747:446340] [IFLYTEK] -[IFlySpeechRecognizer onError:][OUT]&#10;2015-12-31 01:09:24.549 fa[23747:446296] &#20986;&#29616;&#38169;&#35823; &#65306;&#60;IFlySpeechError: 0x7fad02f74d80&#62;&#10;2015-12-31 01:09:24.549 fa[23747:446340] [IFLYTEK] -[IFlyMscRecognizer setState:][ISREnd OUT]&#10;2015-12-31 01:09:24.549 fa[23747:446340] [IFLYTEK] -[IFlyMscRecognizer main][OUT],self=53528272&#10;2015-12-31 01:09:24.550 fa[23747:446340] [IFLYTEK] -[IFlyMscRecognizer dealloc][IN],self=53528272&#10;2015-12-31 01:09:24.550 fa[23747:446340] [IFLYTEK] -[IFlyMscRecognizer dealloc][OUT],self=53528272</span><br></pre></td></tr></table></figure>]]></content>
    <summary type="html">
    <![CDATA[<h2 id="导入头文件">导入头文件</h2><p>从<a href="http://www.xfyun.cn" target="_blank" rel="external">迅飞开发者平台</a>下载SDK，和导入SDK所要的库。引入头文件，以及遵从代理。</p>
<fig]]>
    </summary>
    
      <category term="iOS" scheme="http://lecason.com/tags/iOS/"/>
    
      <category term="iOS" scheme="http://lecason.com/categories/iOS/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[iOS Cocoaasyncsocket 网络编程开发]]></title>
    <link href="http://lecason.com/2015/12/14/iOS-Cocoaasyncsocket-development/"/>
    <id>http://lecason.com/2015/12/14/iOS-Cocoaasyncsocket-development/</id>
    <published>2015-12-14T15:29:10.000Z</published>
    <updated>2015-12-14T15:51:02.000Z</updated>
    <content type="html"><![CDATA[<p>iOS 直接通过TCP UDP连接服务器，用封装好的 <a href="https://github.com/robbiehanson/CocoaAsyncSocket" target="_blank" rel="external">CocoaAsyncSocket</a> 使用起来非常方便。</p>
<h2 id="使用方法">使用方法</h2><p>引入头部和遵从代理：</p>
<figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor">#import <span class="title">&lt;UIKit/UIKit.h&gt;</span></span></span><br><span class="line">@import CocoaAsyncSocket;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">@interface</span> <span class="title">ViewController</span> : <span class="title">UIViewController</span>&lt;<span class="title">AsyncSocketDelegate</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">@end</span></span><br></pre></td></tr></table></figure>
<p>方法实现</p>
<figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor">#import <span class="title">"ViewController.h"</span></span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">@interface</span> <span class="title">ViewController</span> ()</span></span><br><span class="line"><span class="keyword">@property</span> (<span class="keyword">strong</span>,<span class="keyword">nonatomic</span>) AsyncSocket *socket;</span><br><span class="line"><span class="keyword">@end</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">@implementation</span> <span class="title">ViewController</span></span></span><br><span class="line"></span><br><span class="line">- (<span class="keyword">void</span>)viewDidLoad</span><br><span class="line">    &#123;</span><br><span class="line">    [<span class="keyword">super</span> viewDidLoad];</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 初使化和连接服务器</span></span><br><span class="line">    <span class="keyword">self</span><span class="variable">.socket</span> = [[AsyncSocket alloc] initWithDelegate:<span class="keyword">self</span>];</span><br><span class="line">    [<span class="keyword">self</span><span class="variable">.socket</span> connectToHost:<span class="string">@"8.8.8.8"</span> onPort:<span class="number">2012</span> error:<span class="literal">nil</span>];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 连接成功回调</span></span><br><span class="line">- (<span class="keyword">void</span>)onSocket:(AsyncSocket *)sock didConnectToHost:(<span class="built_in">NSString</span> *)host port:(<span class="built_in">UInt16</span>)port</span><br><span class="line">    &#123;</span><br><span class="line">    <span class="built_in">NSLog</span>(<span class="string">@"Connect to host"</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 连接成功请求读数据</span></span><br><span class="line">    [sock readDataWithTimeout:-<span class="number">1</span> tag:<span class="number">0</span>];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 收到数据回调</span></span><br><span class="line">- (<span class="keyword">void</span>)onSocket:(AsyncSocket *)sock didReadData:(<span class="built_in">NSData</span> *)data withTag:(<span class="keyword">long</span>)tag</span><br><span class="line">    &#123;</span><br><span class="line">    [sock readDataWithTimeout:-<span class="number">1</span> tag:<span class="number">0</span>];</span><br><span class="line">    <span class="built_in">NSLog</span>(<span class="string">@"did read data"</span>);</span><br><span class="line">    <span class="built_in">NSString</span>* message = [[<span class="built_in">NSString</span> alloc] initWithData:data encoding:<span class="built_in">NSUTF8StringEncoding</span>];</span><br><span class="line">    <span class="built_in">NSLog</span>(<span class="string">@"message is: \n%@"</span>,message);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 断开连接</span></span><br><span class="line">- (<span class="keyword">void</span>)onSocket:(AsyncSocket *)sock willDisconnectWithError:(<span class="built_in">NSError</span> *)err</span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">NSLog</span>(<span class="string">@"Disconnect host"</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 发送数据到服务器</span></span><br><span class="line">- (<span class="keyword">IBAction</span>)send:(<span class="built_in">UIButton</span> *)sender</span><br><span class="line">    &#123;</span><br><span class="line">    <span class="built_in">NSLog</span>(<span class="string">@"send"</span>);</span><br><span class="line">    [<span class="keyword">self</span><span class="variable">.socket</span> writeData:[<span class="string">@"SEND hello##"</span> dataUsingEncoding:<span class="built_in">NSUTF8StringEncoding</span>] withTimeout:-<span class="number">1</span> tag:<span class="number">0</span>];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">@end</span></span><br></pre></td></tr></table></figure>
<blockquote>
<p>如果不在didConnectToHost 和 didReadData 中调用[sock readDataWithTimeout:-1 tag:0]; 方法，那么只能得到服务器发回来的首条信息，以后服务器发送的将接收不到。</p>
<p>发送和接收的tag值要一样，不然收不到数据。</p>
</blockquote>
<h2 id="参考资料">参考资料</h2><p><a href="http://stackoverflow.com/questions/7997200/how-do-i-get-didreaddata-within-gcdasyncsocket-execute-within-the-current-runloo/7998021#7998021" target="_blank" rel="external">How do I get didReadData within GCDAsyncSocket execute within the current RunLoop?</a></p>
]]></content>
    <summary type="html">
    <![CDATA[<p>iOS 直接通过TCP UDP连接服务器，用封装好的 <a href="https://github.com/robbiehanson/CocoaAsyncSocket" target="_blank" rel="external">CocoaAsyncSocket</a>]]>
    </summary>
    
      <category term="iOS" scheme="http://lecason.com/tags/iOS/"/>
    
      <category term="iOS" scheme="http://lecason.com/categories/iOS/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[iOS UIView 随着手势滑动左右切换]]></title>
    <link href="http://lecason.com/2015/12/12/iOS-Transition-a-view-with-uiswipegesturerecongnizer/"/>
    <id>http://lecason.com/2015/12/12/iOS-Transition-a-view-with-uiswipegesturerecongnizer/</id>
    <published>2015-12-12T06:44:12.000Z</published>
    <updated>2015-12-12T07:06:09.000Z</updated>
    <content type="html"><![CDATA[<p>定义一个枚举</p>
<figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">enum</span> <span class="title">HPDViewTransitionDrection</span> </span>&#123;</span><br><span class="line">    <span class="keyword">case</span> <span class="type">Left</span></span><br><span class="line">    <span class="keyword">case</span> <span class="type">Right</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>创建Label，和左右滑动手势</p>
<figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="func"><span class="keyword">func</span> <span class="title">initSomething</span><span class="params">()</span></span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">let</span> lb = <span class="type">UILabel</span>()</span><br><span class="line">    lb.frame.size = <span class="type">CGSizeMake</span>(<span class="number">200</span>, <span class="number">30</span>)</span><br><span class="line">    lb.text = <span class="string">"LECASON"</span></span><br><span class="line">    lb.sizeToFit()</span><br><span class="line">    lb.center = <span class="keyword">self</span>.view.center</span><br><span class="line">    <span class="keyword">self</span>.view.addSubview(lb)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">let</span> leftSwipe = <span class="type">UISwipeGestureRecognizer</span>(target: <span class="keyword">self</span>, action: <span class="string">"handleSwipeFrom:"</span>)</span><br><span class="line">    leftSwipe.direction = <span class="type">UISwipeGestureRecognizerDirection</span>.<span class="type">Left</span></span><br><span class="line">    <span class="keyword">self</span>.view.addGestureRecognizer(leftSwipe)</span><br><span class="line">    <span class="keyword">let</span> rightSwipe = <span class="type">UISwipeGestureRecognizer</span>(target: <span class="keyword">self</span>, action: <span class="string">"handleSwipeFrom:"</span>)</span><br><span class="line">    rightSwipe.direction = <span class="type">UISwipeGestureRecognizerDirection</span>.<span class="type">Right</span></span><br><span class="line">    <span class="keyword">self</span>.view.addGestureRecognizer(rightSwipe)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>添加识别手势的方法</p>
<figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="func"><span class="keyword">func</span> <span class="title">handleSwipeFrom</span><span class="params">(recognizer: UISwipeGestureRecognizer)</span></span> &#123;</span><br><span class="line">    <span class="keyword">if</span> recognizer.direction == <span class="type">UISwipeGestureRecognizerDirection</span>.<span class="type">Left</span> &#123;</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">"swipe left"</span>)</span><br><span class="line">        <span class="keyword">self</span>.transitionView(<span class="type">HPDViewTransitionDrection</span>.<span class="type">Left</span>)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> recognizer.direction == <span class="type">UISwipeGestureRecognizerDirection</span>.<span class="type">Right</span> &#123;</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">"swipe right"</span>)</span><br><span class="line">        <span class="keyword">self</span>.transitionView(<span class="type">HPDViewTransitionDrection</span>.<span class="type">Right</span>)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>处理转换方法</p>
<figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="func"><span class="keyword">func</span> <span class="title">transitionView</span><span class="params">(derection: HPDViewTransitionDrection)</span></span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">let</span> duration = <span class="number">0.5</span></span><br><span class="line">    <span class="keyword">let</span> curve = <span class="type">UIViewAnimationCurve</span>.<span class="type">EaseInOut</span></span><br><span class="line">    <span class="keyword">var</span> transition = <span class="type">UIViewAnimationTransition</span>.<span class="type">FlipFromLeft</span></span><br><span class="line">    <span class="keyword">let</span> transview = <span class="keyword">self</span>.view</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> derection == <span class="type">HPDViewTransitionDrection</span>.<span class="type">Left</span> &#123;</span><br><span class="line">        transition = <span class="type">UIViewAnimationTransition</span>.<span class="type">FlipFromLeft</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> derection == <span class="type">HPDViewTransitionDrection</span>.<span class="type">Right</span> &#123;</span><br><span class="line">        transition = <span class="type">UIViewAnimationTransition</span>.<span class="type">FlipFromRight</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="type">UIView</span>.beginAnimations(<span class="string">"Animations"</span>, context: <span class="literal">nil</span>)</span><br><span class="line">    <span class="type">UIView</span>.setAnimationDuration(duration)</span><br><span class="line">    <span class="type">UIView</span>.setAnimationCurve(curve)</span><br><span class="line">    <span class="type">UIView</span>.setAnimationTransition(transition, forView: transview, cache: <span class="literal">true</span>)</span><br><span class="line">    <span class="type">UIView</span>.commitAnimations()</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>效果：</p>
<p><img src="/img/iostransitionview.png" alt=""></p>
<h2 id="参考资料">参考资料</h2><blockquote>
<p><a href="http://stackoverflow.com/questions/10701290/horizontal-flip-direction-in-ios-storyboards" target="_blank" rel="external">Horizontal flip direction in iOS Storyboards</a></p>
</blockquote>
]]></content>
    <summary type="html">
    <![CDATA[<p>定义一个枚举</p>
<figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><]]>
    </summary>
    
      <category term="iOS" scheme="http://lecason.com/tags/iOS/"/>
    
      <category term="iOS" scheme="http://lecason.com/categories/iOS/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[iOS 得到已经连接的SSID信息]]></title>
    <link href="http://lecason.com/2015/12/10/iOS-fetch-ssid-info/"/>
    <id>http://lecason.com/2015/12/10/iOS-fetch-ssid-info/</id>
    <published>2015-12-10T02:05:51.000Z</published>
    <updated>2015-12-28T02:18:04.000Z</updated>
    <content type="html"><![CDATA[<p>在iOS 7 以上，可以得到已经连接SSID信息。</p>
<figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor">#import <span class="title">"ViewController.h"</span></span></span><br><span class="line">@import SystemConfiguration<span class="variable">.CaptiveNetwork</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">@interface</span> <span class="title">ViewController</span> ()</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">@end</span></span><br></pre></td></tr></table></figure>
<figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">@implementation</span> <span class="title">ViewController</span></span></span><br><span class="line"></span><br><span class="line">- (<span class="keyword">void</span>)viewDidLoad</span><br><span class="line">&#123;</span><br><span class="line">    [<span class="keyword">super</span> viewDidLoad];</span><br><span class="line">    <span class="built_in">NSLog</span>(<span class="string">@"%@"</span>,[[<span class="keyword">self</span> fetchSSIDInfo] objectForKey:<span class="string">@"SSID"</span>]);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">- (<span class="built_in">NSDictionary</span> *)fetchSSIDInfo</span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">NSArray</span> *interfaceNames = <span class="built_in">CFBridgingRelease</span>(CNCopySupportedInterfaces());</span><br><span class="line">    <span class="built_in">NSLog</span>(<span class="string">@"%s: Supported interfaces: %@"</span>, __func__, interfaceNames);</span><br><span class="line"></span><br><span class="line">    <span class="built_in">NSDictionary</span> *SSIDInfo;</span><br><span class="line">    <span class="keyword">for</span> (<span class="built_in">NSString</span> *interfaceName <span class="keyword">in</span> interfaceNames) &#123;</span><br><span class="line">        SSIDInfo = <span class="built_in">CFBridgingRelease</span>(</span><br><span class="line">        CNCopyCurrentNetworkInfo((__bridge <span class="built_in">CFStringRef</span>)interfaceName));</span><br><span class="line">        <span class="built_in">NSLog</span>(<span class="string">@"%s: %@ =&gt; %@"</span>, __func__, interfaceName, SSIDInfo);</span><br><span class="line"></span><br><span class="line">        <span class="built_in">BOOL</span> isNotEmpty = (SSIDInfo<span class="variable">.count</span> &gt; <span class="number">0</span>);</span><br><span class="line">        <span class="keyword">if</span> (isNotEmpty) &#123;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> SSIDInfo;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">@end</span></span><br></pre></td></tr></table></figure>
<p>打印结果：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">2015</span>-<span class="number">12</span>-<span class="number">10</span> <span class="number">09</span>:<span class="number">45</span>:<span class="number">49.603</span> SSID[<span class="number">9694</span>:<span class="number">2134415</span>] -[ViewController fetchSSIDInfo]: Supported interfaces: (</span><br><span class="line">en0</span><br><span class="line">)</span><br><span class="line"><span class="number">2015</span>-<span class="number">12</span>-<span class="number">10</span> <span class="number">09</span>:<span class="number">45</span>:<span class="number">49.608</span> SSID[<span class="number">9694</span>:<span class="number">2134415</span>] -[ViewController fetchSSIDInfo]: en0 =&gt; &#123;</span><br><span class="line">BSSID = <span class="string">"66:e8:72:ff:ec:6e"</span>;</span><br><span class="line">SSID = <span class="string">"WEL Tech"</span>;</span><br><span class="line">SSIDDATA = &lt;<span class="number">57454</span>c20 <span class="number">54656368</span>&gt;;</span><br><span class="line">&#125;</span><br><span class="line"><span class="number">2015</span>-<span class="number">12</span>-<span class="number">10</span> <span class="number">09</span>:<span class="number">45</span>:<span class="number">49.608</span> SSID[<span class="number">9694</span>:<span class="number">2134415</span>] WEL Tech</span><br></pre></td></tr></table></figure>
<p>swift 版本</p>
<figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="type">Foundation</span></span><br><span class="line"><span class="keyword">import</span> <span class="type">SystemConfiguration</span>.<span class="type">CaptiveNetwork</span></span><br><span class="line"></span><br><span class="line">public <span class="class"><span class="keyword">class</span> <span class="title">SSID</span> </span>&#123;</span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">func</span> <span class="title">fetchSSIDInfo</span>() -&gt;  <span class="title">String</span> </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> currentSSID = <span class="string">""</span></span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">let</span> interfaces:<span class="type">CFArray</span>! = <span class="type">CNCopySupportedInterfaces</span>() &#123;</span><br><span class="line">            <span class="keyword">for</span> i <span class="keyword">in</span> <span class="number">0</span>..&lt;<span class="type">CFArrayGetCount</span>(interfaces)&#123;</span><br><span class="line">                <span class="keyword">let</span> interfaceName: <span class="type">UnsafePointer</span>&lt;<span class="type">Void</span>&gt; = <span class="type">CFArrayGetValueAtIndex</span>(interfaces, i)</span><br><span class="line">                <span class="keyword">let</span> rec = unsafeBitCast(interfaceName, <span class="type">AnyObject</span>.<span class="keyword">self</span>)</span><br><span class="line">                <span class="keyword">let</span> unsafeInterfaceData = <span class="type">CNCopyCurrentNetworkInfo</span>(<span class="string">"<span class="subst">\(rec)</span>"</span>)</span><br><span class="line">                <span class="keyword">if</span> unsafeInterfaceData != <span class="literal">nil</span> &#123;</span><br><span class="line">                    <span class="keyword">let</span> interfaceData = unsafeInterfaceData! <span class="keyword">as</span> <span class="type">Dictionary</span>!</span><br><span class="line">                    currentSSID = interfaceData[<span class="string">"SSID"</span>] <span class="keyword">as</span>! <span class="type">String</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> currentSSID</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    <summary type="html">
    <![CDATA[<p>在iOS 7 以上，可以得到已经连接SSID信息。</p>
<figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><spa]]>
    </summary>
    
      <category term="iOS" scheme="http://lecason.com/tags/iOS/"/>
    
      <category term="iOS" scheme="http://lecason.com/categories/iOS/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[iOS NSData [UInt] UInt 之间的转换]]></title>
    <link href="http://lecason.com/2015/11/23/iOS-NSData-UInt-Array-UInt-exchance/"/>
    <id>http://lecason.com/2015/11/23/iOS-NSData-UInt-Array-UInt-exchance/</id>
    <published>2015-11-23T09:35:39.000Z</published>
    <updated>2015-11-23T09:42:18.000Z</updated>
    <content type="html"><![CDATA[<p>蓝牙开发多用到这几个数据类型之间的转换，写好记下方便下个项目。</p>
<h2 id="扩展">扩展</h2><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// [UInt] 数组转化成 NSDate</span></span><br><span class="line"><span class="class"><span class="keyword">extension</span> <span class="title">Array</span> </span>&#123;</span><br><span class="line">    <span class="func"><span class="keyword">func</span> <span class="title">toData</span><span class="params">()</span></span> -&gt; <span class="type">NSData</span> &#123;</span><br><span class="line">    <span class="keyword">let</span> commandData: <span class="type">NSMutableData</span> = <span class="type">NSMutableData</span>()</span><br><span class="line">    <span class="keyword">for</span> <span class="keyword">var</span> subCommand <span class="keyword">in</span> <span class="keyword">self</span> &#123;</span><br><span class="line">        commandData.appendBytes(&amp;subCommand, length: <span class="number">1</span>)</span><br><span class="line">    &#125;</span><br><span class="line">        <span class="keyword">return</span> commandData</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 大端模式的[UInt]数组转换成UInt</span></span><br><span class="line"><span class="comment">// 大端模式 [0x01,0x02] 转化成 Binary = [0b00000001, 0b00000010] 转化成 Hex 应该是 0x0102</span></span><br><span class="line"><span class="class"><span class="keyword">extension</span> <span class="title">NSData</span> </span>&#123;</span><br><span class="line"><span class="func"><span class="keyword">func</span> <span class="title">toBigendInt</span><span class="params">()</span></span> -&gt; <span class="type">UInt</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">self</span>.length &gt; <span class="number">8</span> &#123; <span class="built_in">print</span>(<span class="string">"\n【toBigendInt overflow max big-end 8 byte maybe get the wrong value】\n"</span>) &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">let</span> intMutableArray = <span class="type">NSMutableData</span>()</span><br><span class="line">    <span class="keyword">var</span> subData = <span class="type">NSData</span>()</span><br><span class="line">    <span class="keyword">for</span> <span class="keyword">var</span> i = <span class="keyword">self</span>.length - <span class="number">1</span>; i &gt;= <span class="number">0</span>;  --i &#123;</span><br><span class="line">        subData = <span class="keyword">self</span>.subdataWithRange(<span class="type">NSMakeRange</span>(i, <span class="number">1</span>))</span><br><span class="line">        intMutableArray.appendData(subData)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">var</span> commandInt:<span class="type">UInt</span> = <span class="number">0</span></span><br><span class="line">    intMutableArray.getBytes(&amp;commandInt, length: <span class="built_in">sizeof</span>(<span class="keyword">self</span>.<span class="keyword">dynamicType</span>))</span><br><span class="line">    <span class="keyword">return</span> commandInt</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 小端模式的[UInt]数组转换成UInt</span></span><br><span class="line"><span class="comment">// 小端模式 [0x01,0x02] 会转成 Binary = [0b00000010, 0b00000001] 转化成 Hex 应该是 0x0201</span></span><br><span class="line"><span class="class"><span class="keyword">extension</span> <span class="title">NSData</span> </span>&#123;</span><br><span class="line"><span class="func"><span class="keyword">func</span> <span class="title">toSmallendInt</span><span class="params">()</span></span> -&gt; <span class="type">UInt</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">self</span>.length &gt; <span class="number">8</span> &#123; <span class="built_in">print</span>(<span class="string">"\n【toSmallendInt overflow max big-end 8 byte maybe get the wrong value】\n"</span>) &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> commandInt:<span class="type">UInt</span> = <span class="number">0</span></span><br><span class="line">    <span class="keyword">self</span>.getBytes(&amp;commandInt, length: <span class="built_in">sizeof</span>(<span class="keyword">self</span>.<span class="keyword">dynamicType</span>))</span><br><span class="line">    <span class="keyword">return</span> commandInt</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// NSData 转化成UInt 数组</span></span><br><span class="line"><span class="class"><span class="keyword">extension</span> <span class="title">NSData</span> </span>&#123;</span><br><span class="line"><span class="func"><span class="keyword">func</span> <span class="title">toUIntArray</span><span class="params">()</span></span> -&gt; [<span class="type">UInt8</span>] &#123;</span><br><span class="line">    <span class="keyword">var</span> uintArray = [<span class="type">UInt8</span>]()</span><br><span class="line">    <span class="keyword">var</span> subData: <span class="type">NSData</span>!</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="number">0</span>..&lt;<span class="keyword">self</span>.length &#123;</span><br><span class="line">        subData = <span class="keyword">self</span>.subdataWithRange(<span class="type">NSMakeRange</span>(i, <span class="number">1</span>))</span><br><span class="line">        uintArray.append(<span class="type">UInt8</span>(subData.toSmallendInt()))</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> uintArray</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="使用">使用</h2><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">override</span> <span class="func"><span class="keyword">func</span> <span class="title">viewDidLoad</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="keyword">super</span>.viewDidLoad()</span><br><span class="line">    <span class="keyword">let</span> intArray = [<span class="number">0x01</span>,<span class="number">0x02</span>,<span class="number">0x03</span>,<span class="number">0x04</span>,<span class="number">0x05</span>,<span class="number">0x06</span>,<span class="number">0x07</span>,<span class="number">0x08</span>]</span><br><span class="line">    <span class="keyword">let</span> intData = intArray.toData()</span><br><span class="line">    <span class="keyword">let</span> small = intData.toSmallendInt()</span><br><span class="line">    <span class="keyword">let</span> big = intData.toBigendInt()</span><br><span class="line">    <span class="keyword">let</span> uintArray = intData.toUIntArray()</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">"intArray: <span class="subst">\(intArray)</span>\nintData: <span class="subst">\(intData)</span>\nsmall: <span class="subst">\(small)</span>\nbig: <span class="subst">\(big)</span>\nuintArray: <span class="subst">\(uintArray)</span>\n"</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="结果">结果</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">intArray: [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>]</span><br><span class="line">intData: &lt;<span class="number">01020304</span> <span class="number">05060708</span>&gt;</span><br><span class="line">small: <span class="number">578437695752307201</span></span><br><span class="line">big: <span class="number">72623859790382856</span></span><br><span class="line">uintArray: [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>]</span><br></pre></td></tr></table></figure>
]]></content>
    <summary type="html">
    <![CDATA[<p>蓝牙开发多用到这几个数据类型之间的转换，写好记下方便下个项目。</p>
<h2 id="扩展">扩展</h2><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="li]]>
    </summary>
    
      <category term="iOS" scheme="http://lecason.com/tags/iOS/"/>
    
      <category term="iOS" scheme="http://lecason.com/categories/iOS/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[iOS 关于重复执行函数]]></title>
    <link href="http://lecason.com/2015/11/12/iOS-Repeat-Functions/"/>
    <id>http://lecason.com/2015/11/12/iOS-Repeat-Functions/</id>
    <published>2015-11-12T01:59:08.000Z</published>
    <updated>2015-11-24T05:34:33.000Z</updated>
    <content type="html"><![CDATA[<p>dispatch_source_set_timer 后台和函数内部执行重复任务：</p>
<figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">override</span> <span class="func"><span class="keyword">func</span> <span class="title">viewDidLoad</span><span class="params">()</span></span> &#123;</span><br><span class="line">    <span class="keyword">super</span>.viewDidLoad()</span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> timer: dispatch_source_t! </span><br><span class="line"></span><br><span class="line">    <span class="func"><span class="keyword">func</span> <span class="title">startTimer</span><span class="params">()</span></span> &#123;</span><br><span class="line">    <span class="keyword">let</span> queue = dispatch_queue_create(<span class="string">"com.lecason.app.timer"</span>, <span class="literal">nil</span>)</span><br><span class="line">    timer = dispatch_source_create(<span class="type">DISPATCH_SOURCE_TYPE_TIMER</span>, <span class="number">0</span>, <span class="number">0</span>, queue)</span><br><span class="line">    dispatch_source_set_timer(timer, <span class="type">DISPATCH_TIME_NOW</span>, <span class="number">3</span> * <span class="type">NSEC_PER_SEC</span>, <span class="number">1</span> * <span class="type">NSEC_PER_SEC</span>)</span><br><span class="line">    <span class="comment">// 每隔3秒执行，1秒的误差</span></span><br><span class="line">        dispatch_source_set_event_handler(timer) &#123;</span><br><span class="line">            <span class="comment">// 要执行的任务</span></span><br><span class="line">        &#125;</span><br><span class="line">        dispatch_resume(timer)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="func"><span class="keyword">func</span> <span class="title">stopTimer</span><span class="params">()</span></span> &#123;</span><br><span class="line">        dispatch_source_cancel(timer)</span><br><span class="line">        timer = <span class="literal">nil</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>dispatch_time 延时一定时间后执行</p>
<figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> delay = <span class="number">4.5</span> * <span class="type">Double</span>(<span class="type">NSEC_PER_SEC</span>)</span><br><span class="line"><span class="keyword">let</span> time = dispatch_time(<span class="type">DISPATCH_TIME_NOW</span>, <span class="type">Int64</span>(delay))</span><br><span class="line">dispatch_after(time, dispatch_get_main_queue(), &#123;</span><br><span class="line">    <span class="comment">// 4.5秒后要执行的任务</span></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>
]]></content>
    <summary type="html">
    <![CDATA[<p>dispatch_source_set_timer 后台和函数内部执行重复任务：</p>
<figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</spa]]>
    </summary>
    
      <category term="iOS" scheme="http://lecason.com/tags/iOS/"/>
    
      <category term="iOS" scheme="http://lecason.com/categories/iOS/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Swift 创建可选代理]]></title>
    <link href="http://lecason.com/2015/11/06/Swift-Optional-Delegate/"/>
    <id>http://lecason.com/2015/11/06/Swift-Optional-Delegate/</id>
    <published>2015-11-06T08:07:54.000Z</published>
    <updated>2015-11-06T08:14:32.000Z</updated>
    <content type="html"><![CDATA[<p>先创建好代理：</p>
<figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor">@objc</span> <span class="class"><span class="keyword">protocol</span> <span class="title">MyProtocol</span> : <span class="title">NSObjectProtocol</span> </span>&#123;</span><br><span class="line">    <span class="func"><span class="keyword">func</span> <span class="title">requiredMethod</span><span class="params">()</span></span></span><br><span class="line">    optional <span class="func"><span class="keyword">func</span> <span class="title">optionalMethod</span><span class="params">()</span></span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyClass</span>: <span class="title">NSObject</span> </span>&#123;</span><br><span class="line">    <span class="keyword">weak</span> <span class="keyword">var</span> delegate:<span class="type">MyProtocol</span>?</span><br><span class="line"></span><br><span class="line">    <span class="func"><span class="keyword">func</span> <span class="title">callDelegate</span><span class="params">()</span></span></span><br><span class="line">    &#123;</span><br><span class="line">        delegate?.requiredMethod()</span><br><span class="line">        delegate?.optionalMethod?()</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<blockquote>
<p>注意，如果在 callDelegate()里面，delegate?.optionalMethod<code>?</code>()，如果不加<code>?</code>或者写上<code>！</code>号，在实现类里面不实现方法会导致程序崩溃。</p>
</blockquote>
<p>在另一个类只实现代理</p>
<figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">AnotherClass</span>: <span class="title">NSObject</span>, <span class="title">MyProtocol</span> </span>&#123;</span><br><span class="line">    <span class="keyword">init</span>() &#123;</span><br><span class="line">        <span class="keyword">super</span>.<span class="keyword">init</span>()</span><br><span class="line">        <span class="keyword">let</span> myInstance = <span class="type">MyClass</span>()</span><br><span class="line">        myInstance.delegate = <span class="keyword">self</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="func"><span class="keyword">func</span> <span class="title">requiredMethod</span><span class="params">()</span></span> &#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    <summary type="html">
    <![CDATA[<p>先创建好代理：</p>
<figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span>]]>
    </summary>
    
      <category term="Swift" scheme="http://lecason.com/tags/Swift/"/>
    
      <category term="Swift" scheme="http://lecason.com/categories/Swift/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[iOS 创建UIPageViewController]]></title>
    <link href="http://lecason.com/2015/11/05/iOS-PageViewController/"/>
    <id>http://lecason.com/2015/11/05/iOS-PageViewController/</id>
    <published>2015-11-05T08:46:40.000Z</published>
    <updated>2015-11-05T10:00:42.000Z</updated>
    <content type="html"><![CDATA[<h2 id="在_HPDRootViewController_里面设置数据源和代理并且设置全局变量">在 HPDRootViewController 里面设置数据源和代理并且设置全局变量</h2><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">HPDRootViewController</span>: <span class="title">UIViewController</span>, <span class="title">UIPageViewControllerDataSource</span>, <span class="title">UIPageViewControllerDelegate</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> pageVC: <span class="type">UIPageViewController</span>! </span><br><span class="line">    <span class="keyword">var</span> pageTitles: <span class="type">NSArray</span>!</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="初使化_PageViewController">初使化 PageViewController</h2><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">override</span> <span class="func"><span class="keyword">func</span> <span class="title">viewDidLoad</span><span class="params">()</span></span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">super</span>.viewDidLoad()</span><br><span class="line">    <span class="keyword">self</span>.view.backgroundColor = <span class="type">UIColor</span>.lightGrayColor()</span><br><span class="line">    <span class="keyword">self</span>.initPageVC()</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/// 初使化UIPageViewController</span></span><br><span class="line"><span class="func"><span class="keyword">func</span> <span class="title">initPageVC</span><span class="params">()</span></span> &#123;</span><br><span class="line">    <span class="comment">// 初使化设置</span></span><br><span class="line">    pageTitles = [<span class="string">"1"</span>,<span class="string">"2"</span>,<span class="string">"3"</span>]</span><br><span class="line">    pageVC = <span class="type">UIPageViewController</span>(transitionStyle: <span class="type">UIPageViewControllerTransitionStyle</span>.<span class="type">Scroll</span>, navigationOrientation: <span class="type">UIPageViewControllerNavigationOrientation</span>.<span class="type">Horizontal</span>, options: <span class="literal">nil</span>)</span><br><span class="line">    pageVC.dataSource = <span class="keyword">self</span></span><br><span class="line">    pageVC.delegate = <span class="keyword">self</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 页面设置</span></span><br><span class="line">    <span class="keyword">let</span> startViewController: <span class="type">HPDContentViewController</span> = <span class="keyword">self</span>.viewControllerAtIndex(<span class="number">0</span>)!</span><br><span class="line">    <span class="keyword">let</span> viewControllers: <span class="type">NSArray</span> = [startViewController]</span><br><span class="line">    pageVC.setViewControllers(viewControllers <span class="keyword">as</span>? [<span class="type">UIViewController</span>], direction: <span class="type">UIPageViewControllerNavigationDirection</span>.<span class="type">Forward</span>, animated: <span class="literal">true</span>, completion: <span class="literal">nil</span>)</span><br><span class="line">    pageVC.view.frame =  <span class="type">CGRectMake</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="keyword">self</span>.view.frame.size.width, <span class="keyword">self</span>.view.frame.size.height)</span><br><span class="line">    <span class="keyword">self</span>.addChildViewController(pageVC)</span><br><span class="line">    <span class="keyword">self</span>.view.addSubview(pageVC.view)</span><br><span class="line">    pageVC.didMoveToParentViewController(<span class="keyword">self</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="创建_HPDContentViewController">创建 HPDContentViewController</h2><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">HPDContentViewController</span>: <span class="title">UIViewController</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> pageIndex: <span class="type">Int</span>!</span><br><span class="line"></span><br><span class="line">    <span class="keyword">override</span> <span class="func"><span class="keyword">func</span> <span class="title">viewDidLoad</span><span class="params">()</span></span> &#123;</span><br><span class="line">        <span class="keyword">super</span>.viewDidLoad()</span><br><span class="line">        <span class="keyword">let</span> lb: <span class="type">UILabel</span> = <span class="type">UILabel</span>(frame: <span class="type">CGRectMake</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">200</span>, <span class="number">50</span>))</span><br><span class="line">        lb.center = <span class="keyword">self</span>.view.center</span><br><span class="line">        lb.textAlignment = <span class="type">NSTextAlignment</span>.<span class="type">Center</span></span><br><span class="line">        lb.textColor = <span class="type">UIColor</span>.redColor()</span><br><span class="line">        lb.text = <span class="string">"<span class="subst">\(pageIndex)</span>"</span></span><br><span class="line">        <span class="keyword">self</span>.view.addSubview(lb)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="在_HPDRootViewController_实现代理和数据源">在 HPDRootViewController 实现代理和数据源</h2><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// MARK: UIPageViewControllerDataSource</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 前将显示页面</span></span><br><span class="line"><span class="func"><span class="keyword">func</span> <span class="title">pageViewController</span><span class="params">(pageViewController: UIPageViewController, viewControllerBeforeViewController viewController: UIViewController)</span></span> -&gt; <span class="type">UIViewController</span>? &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> indexPage: <span class="type">Int</span> = (viewController <span class="keyword">as</span>! <span class="type">HPDContentViewController</span>).pageIndex</span><br><span class="line">    <span class="keyword">if</span> indexPage == <span class="number">0</span> || indexPage == <span class="type">NSNotFound</span> &#123; <span class="keyword">return</span> <span class="literal">nil</span> &#125;</span><br><span class="line">    indexPage--</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">self</span>.viewControllerAtIndex(indexPage)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 后一个页面</span></span><br><span class="line"><span class="func"><span class="keyword">func</span> <span class="title">pageViewController</span><span class="params">(pageViewController: UIPageViewController, viewControllerAfterViewController viewController: UIViewController)</span></span> -&gt; <span class="type">UIViewController</span>? &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> indexPage: <span class="type">Int</span> = (viewController <span class="keyword">as</span>! <span class="type">HPDContentViewController</span>).pageIndex</span><br><span class="line">    <span class="keyword">if</span> indexPage == <span class="type">NSNotFound</span> &#123; <span class="keyword">return</span> <span class="literal">nil</span> &#125;</span><br><span class="line">    <span class="keyword">if</span> indexPage == <span class="keyword">self</span>.pageTitles.<span class="built_in">count</span> &#123; <span class="keyword">return</span> <span class="literal">nil</span> &#125;</span><br><span class="line">    indexPage++</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">self</span>.viewControllerAtIndex(indexPage)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 返回要显示多少页面</span></span><br><span class="line"><span class="func"><span class="keyword">func</span> <span class="title">presentationCountForPageViewController</span><span class="params">(pageViewController: UIPageViewController)</span></span> -&gt; <span class="type">Int</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">self</span>.pageTitles.<span class="built_in">count</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 返回默认显示页面</span></span><br><span class="line"><span class="func"><span class="keyword">func</span> <span class="title">presentationIndexForPageViewController</span><span class="params">(pageViewController: UIPageViewController)</span></span> -&gt; <span class="type">Int</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> (pageVC.viewControllers!.first <span class="keyword">as</span>! <span class="type">HPDContentViewController</span>).pageIndex</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 返回要显示的页面</span></span><br><span class="line"><span class="func"><span class="keyword">func</span> <span class="title">viewControllerAtIndex</span> <span class="params">(index:Int )</span></span> -&gt; <span class="type">HPDContentViewController</span>? &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">self</span>.pageTitles.<span class="built_in">count</span> == <span class="number">0</span> || index &gt;= <span class="keyword">self</span>.pageTitles.<span class="built_in">count</span> &#123; <span class="keyword">return</span> <span class="literal">nil</span> &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">let</span> pageContentVC: <span class="type">HPDContentViewController</span> = <span class="type">HPDContentViewController</span>()</span><br><span class="line">    pageContentVC.title = pageTitles[index] <span class="keyword">as</span>? <span class="type">String</span></span><br><span class="line">    pageContentVC.pageIndex = index</span><br><span class="line">    <span class="keyword">return</span> pageContentVC</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>效果：</p>
]]></content>
    <summary type="html">
    <![CDATA[<h2 id="在_HPDRootViewController_里面设置数据源和代理并且设置全局变量">在 HPDRootViewController 里面设置数据源和代理并且设置全局变量</h2><figure class="highlight swift"><table><t]]>
    </summary>
    
      <category term="iOS" scheme="http://lecason.com/tags/iOS/"/>
    
      <category term="iOS" scheme="http://lecason.com/categories/iOS/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[iOS 关于后台运行]]></title>
    <link href="http://lecason.com/2015/11/04/iOS-About-Background-Mode/"/>
    <id>http://lecason.com/2015/11/04/iOS-About-Background-Mode/</id>
    <published>2015-11-04T09:21:31.000Z</published>
    <updated>2015-11-04T09:41:40.000Z</updated>
    <content type="html"><![CDATA[<p>从 <code>Project</code> - <code>Capabilities</code> - <code>Background Modes</code> 可以看到后台支持运行的类型：</p>
<p><img src="/img/background1.png" alt=""></p>
<p>经测试，在打开连接上蓝牙，并在下面设置好申请后台运行的时候，连着Xcode,后台打印了20+分钟还在运行。</p>
<p>申请代码写在<code>AppDelegate</code>里面。</p>
<figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">UIApplication</span>.sharedApplication().beginBackgroundTaskWithExpirationHandler &#123; () -&gt; <span class="type">Void</span> <span class="keyword">in</span> &#125;</span><br></pre></td></tr></table></figure>
<p>打印代码写在<code>RootViewController</code>里面。</p>
<figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">override</span> <span class="func"><span class="keyword">func</span> <span class="title">viewDidLoad</span><span class="params">()</span></span> &#123;</span><br><span class="line">    <span class="keyword">super</span>.viewDidLoad()</span><br><span class="line">    <span class="keyword">var</span> <span class="number">_</span> = <span class="type">NSTimer</span>.scheduledTimerWithTimeInterval(<span class="number">1</span>, target: <span class="keyword">self</span>, selector: <span class="string">"update"</span>, userInfo: <span class="literal">nil</span>, repeats: <span class="literal">true</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="func"><span class="keyword">func</span> <span class="title">update</span><span class="params">()</span></span> &#123;</span><br><span class="line">    <span class="built_in">print</span>(<span class="type">NSDate</span>(timeIntervalSinceNow: <span class="number">0</span>))</span><br><span class="line">    <span class="built_in">print</span>(<span class="type">UIApplication</span>.sharedApplication().backgroundTimeRemaining)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>打印结果，可以看到backgroundTimeRemaining为零后，还是一直在运行。</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">2015</span>-<span class="number">11</span>-<span class="number">04</span> <span class="number">09</span>:<span class="number">34</span>:<span class="number">37</span> +<span class="number">0000</span></span><br><span class="line"><span class="number">0.0</span></span><br><span class="line"><span class="number">2015</span>-<span class="number">11</span>-<span class="number">04</span> <span class="number">09</span>:<span class="number">34</span>:<span class="number">38</span> +<span class="number">0000</span></span><br><span class="line"><span class="number">0.0</span></span><br><span class="line"><span class="number">2015</span>-<span class="number">11</span>-<span class="number">04</span> <span class="number">09</span>:<span class="number">34</span>:<span class="number">39</span> +<span class="number">0000</span></span><br><span class="line"><span class="number">0.0</span></span><br><span class="line"><span class="number">2015</span>-<span class="number">11</span>-<span class="number">04</span> <span class="number">09</span>:<span class="number">34</span>:<span class="number">40</span> +<span class="number">0000</span></span><br><span class="line"><span class="number">0.0</span></span><br><span class="line"><span class="number">2015</span>-<span class="number">11</span>-<span class="number">04</span> <span class="number">09</span>:<span class="number">34</span>:<span class="number">41</span> +<span class="number">0000</span></span><br><span class="line"><span class="number">0.0</span></span><br><span class="line"><span class="number">2015</span>-<span class="number">11</span>-<span class="number">04</span> <span class="number">09</span>:<span class="number">34</span>:<span class="number">42</span> +<span class="number">0000</span></span><br></pre></td></tr></table></figure>
<p>然后打开一下APP，backgroundTimeRemaining值一直为最大值。</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">2015</span>-<span class="number">11</span>-<span class="number">04</span> <span class="number">09</span>:<span class="number">36</span>:<span class="number">13</span> +<span class="number">0000</span></span><br><span class="line"><span class="number">1.79769313486232</span>e+<span class="number">308</span></span><br><span class="line"><span class="number">2015</span>-<span class="number">11</span>-<span class="number">04</span> <span class="number">09</span>:<span class="number">36</span>:<span class="number">14</span> +<span class="number">0000</span></span><br><span class="line"><span class="number">1.79769313486232</span>e+<span class="number">308</span></span><br><span class="line"><span class="number">2015</span>-<span class="number">11</span>-<span class="number">04</span> <span class="number">09</span>:<span class="number">36</span>:<span class="number">15</span> +<span class="number">0000</span></span><br><span class="line"><span class="number">1.79769313486232</span>e+<span class="number">308</span></span><br><span class="line"><span class="number">2015</span>-<span class="number">11</span>-<span class="number">04</span> <span class="number">09</span>:<span class="number">36</span>:<span class="number">16</span> +<span class="number">0000</span></span><br><span class="line"><span class="number">1.79769313486232</span>e+<span class="number">308</span></span><br><span class="line"><span class="number">2015</span>-<span class="number">11</span>-<span class="number">04</span> <span class="number">09</span>:<span class="number">36</span>:<span class="number">17</span> +<span class="number">0000</span></span><br><span class="line"><span class="number">1.79769313486232</span>e+<span class="number">308</span></span><br><span class="line"><span class="number">2015</span>-<span class="number">11</span>-<span class="number">04</span> <span class="number">09</span>:<span class="number">36</span>:<span class="number">18</span> +<span class="number">0000</span></span><br><span class="line"><span class="number">1.79769313486232</span>e+<span class="number">308</span></span><br><span class="line"><span class="number">2015</span>-<span class="number">11</span>-<span class="number">04</span> <span class="number">09</span>:<span class="number">36</span>:<span class="number">19</span> +<span class="number">0000</span></span><br><span class="line"><span class="number">1.79769313486232</span>e+<span class="number">308</span></span><br><span class="line"><span class="number">2015</span>-<span class="number">11</span>-<span class="number">04</span> <span class="number">09</span>:<span class="number">36</span>:<span class="number">20</span> +<span class="number">0000</span></span><br><span class="line"><span class="number">1.79769313486232</span>e+<span class="number">308</span></span><br></pre></td></tr></table></figure>
<p>再次进入后台,backgroundTimeRemaining又开始减少。而且减到为0的时候还一直运行。</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">178.412293791669</span></span><br><span class="line"><span class="number">2015</span>-<span class="number">11</span>-<span class="number">04</span> <span class="number">09</span>:<span class="number">38</span>:<span class="number">13</span> +<span class="number">0000</span></span><br><span class="line"><span class="number">177.412459875006</span></span><br><span class="line"><span class="number">2015</span>-<span class="number">11</span>-<span class="number">04</span> <span class="number">09</span>:<span class="number">38</span>:<span class="number">14</span> +<span class="number">0000</span></span><br><span class="line"><span class="number">176.389769500005</span></span><br><span class="line"><span class="number">2015</span>-<span class="number">11</span>-<span class="number">04</span> <span class="number">09</span>:<span class="number">38</span>:<span class="number">15</span> +<span class="number">0000</span></span><br><span class="line"><span class="number">175.412042124997</span></span><br><span class="line"><span class="number">2015</span>-<span class="number">11</span>-<span class="number">04</span> <span class="number">09</span>:<span class="number">38</span>:<span class="number">16</span> +<span class="number">0000</span></span><br><span class="line"><span class="number">174.411314750003</span></span><br><span class="line"><span class="number">2015</span>-<span class="number">11</span>-<span class="number">04</span> <span class="number">09</span>:<span class="number">38</span>:<span class="number">17</span> +<span class="number">0000</span></span><br><span class="line"><span class="number">173.389816499999</span></span><br><span class="line"><span class="number">2015</span>-<span class="number">11</span>-<span class="number">04</span> <span class="number">09</span>:<span class="number">38</span>:<span class="number">18</span> +<span class="number">0000</span></span><br><span class="line"><span class="number">172.410836958341</span></span><br></pre></td></tr></table></figure>]]></content>
    <summary type="html">
    <![CDATA[<p>从 <code>Project</code> - <code>Capabilities</code> - <code>Background Modes</code> 可以看到后台支持运行的类型：</p>
<p><img src="/img/background1.png" ]]>
    </summary>
    
      <category term="iOS" scheme="http://lecason.com/tags/iOS/"/>
    
      <category term="iOS" scheme="http://lecason.com/categories/iOS/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[iOS 基于百度开源手环的APP开发]]></title>
    <link href="http://lecason.com/2015/11/03/iOS-baidu-ring-development/"/>
    <id>http://lecason.com/2015/11/03/iOS-baidu-ring-development/</id>
    <published>2015-11-03T01:47:08.000Z</published>
    <updated>2015-12-01T05:56:37.000Z</updated>
    <content type="html"><![CDATA[<p><a href="http://store.baidu.com/product/open" target="_blank" rel="external">百度硬件开源</a>也真是坑，说是开源，APP端的源码都没有给，核心的算法和与蓝牙硬件的交互都要自己摸索。</p>
<h2 id="记录一些文档不清楚的地方">记录一些文档不清楚的地方</h2><ul>
<li><p>要发送的数据包是 L1 + L2</p>
</li>
<li><p>L1 Header 的 CRC16 是算 L2 数据包的 CRC</p>
</li>
<li><p>由于是大端模式，算CRC的时候要处理字节流顺序</p>
</li>
<li><p>接收到 Success ACK: <ab100000 00000001=""> 不用回复，接收到命令就要回复。</ab100000></p>
</li>
<li><p>请数据的时候Type要是<code>WithResponse</code></p>
</li>
<li><p>Notify<code>6E400003-B5A3-F393-E0A9-E50E24DCCA9E</code>这个特征才能收到数据</p>
</li>
<li><p>？ 从百度官方App那里推断，过了N秒后手环断开连接后要马上回联设备。好像iOS BLE设置一段时间【测试值：测试APP连上不发数据80秒；测试APP连上不发数据130秒；百度APP连上不点击手环绑定1分钟后手环COM显示绑定失败，百度APP提示失败；百度APP连上点击手环绑定,从最后发送的一条命令算起，115秒断开连接，百度手环又马上连接回手环；】没收发数据就会断开于蓝牙设备的连接。</p>
</li>
<li><p>手环静止一段时间后，会进入睡眼模式。</p>
</li>
<li><p>百度APP断开手环后，马上连接回设备，然后发0303登录命令，0201时间设置命令，0506数据实时同步设置命令，0221久坐提醒设置命令，0220防丢设置命令，0202闹钟设备命令，</p>
</li>
<li><p>为了保持连接，百度手环会在一分钟内发0303登录命令，而且断开的时候马上连接回设备。</p>
</li>
<li><p>断开的时候，要登录回去才能发送数据实时同步设置命令，和设置命令。</p>
</li>
<li><p>闹钟设置年月日全为0</p>
</li>
</ul>
<h2 id="关于回应_ACK">关于回应 ACK</h2><p>向手环发送命令的时候，手环如果收到命令，会回复一条ACK <code>&lt;ab100000 0000xxxx&gt;</code> ACK的后4位是 SequenceID,APP每向手环发一条命令，SequenceID都+1。收到第一个字节是ab,第二字节是10或者30就表示是手环回复收到命令的ACK，这时候APP不用发送数据回手环回应这个ACK。只有收到命令的时候，判断接收命令无错的时候再回复ACK。</p>
<p>关于回复ACK，先判断是0xab开头，再接收完整命令，再根据命令的不同作不同的处理。下面是第一个版本的ACK，如果收到最后一个字节结果的数据由于数组越界是会崩溃的。</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Receriveing Data from characteristic Optional(&lt;ab000015 <span class="number">2697005</span>a&gt;)</span><br><span class="line">Receriveing Data from characteristic Optional(&lt;<span class="number">05000</span>b00 <span class="number">10350003</span> <span class="number">3</span>b000052 <span class="number">00000003</span> <span class="number">3</span>b005200&gt;)</span><br><span class="line">Receriveing Data from characteristic Optional(&lt;<span class="number">00</span>&gt;)</span><br></pre></td></tr></table></figure>
<p>第一版本：</p>
<figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br></pre></td><td class="code"><pre><span class="line"><span class="func"><span class="keyword">func</span> <span class="title">responseACK</span><span class="params">()</span></span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">let</span> receiverveData = characteristic.value!</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 拿到得到数据的第一个字节</span></span><br><span class="line">    <span class="keyword">let</span> firstByte = receiverveData.subdataWithRange(<span class="type">NSMakeRange</span>(<span class="number">0</span>, <span class="number">1</span>))</span><br><span class="line">    <span class="keyword">let</span> secondByte = receiverveData.subdataWithRange(<span class="type">NSMakeRange</span>(<span class="number">1</span>, <span class="number">1</span>))</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 如果是ACK就回应ACK</span></span><br><span class="line">    <span class="keyword">if</span> (firstByte == [<span class="number">0xab</span>].toData() &amp;&amp; secondByte == [<span class="number">0x10</span>].toData()) || (firstByte == [<span class="number">0xab</span>].toData() &amp;&amp; secondByte == [<span class="number">0x30</span>].toData()) &#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 七八字节</span></span><br><span class="line">    <span class="keyword">let</span> sevenByte = receiverveData.subdataWithRange(<span class="type">NSMakeRange</span>(<span class="number">6</span>, <span class="number">1</span>))</span><br><span class="line">    <span class="keyword">let</span> eightByte = receiverveData.subdataWithRange(<span class="type">NSMakeRange</span>(<span class="number">7</span>, <span class="number">1</span>))</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 第二字节是10表示ACK正确，应答原来的值</span></span><br><span class="line">    <span class="keyword">if</span> secondByte == [<span class="number">0x10</span>].toData() &#123;</span><br><span class="line">        <span class="keyword">let</span> command = <span class="type">NSMutableData</span>()</span><br><span class="line">        command.appendData([<span class="number">0xab</span>,<span class="number">0x10</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>].toData())</span><br><span class="line">        command.appendData(sevenByte)</span><br><span class="line">        command.appendData(eightByte)</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">"Get Success ACK: <span class="subst">\(command)</span>"</span>)</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">"-------------------------------------------------\n"</span>)</span><br><span class="line">        <span class="keyword">return</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 第二字节是30表示ACK错误，回复错误应答</span></span><br><span class="line">    <span class="keyword">if</span> secondByte == [<span class="number">0x30</span>].toData() &#123;</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">"Respose Fail ACK: <span class="subst">\([<span class="number">0xab</span>,<span class="number">0x10</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,sevenByte,eightByte].toData()</span>)"</span>)</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">"-------------------------------------------------\n"</span>)</span><br><span class="line">        <span class="keyword">return</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 如果不是ACK那就接收返回的命令数据</span></span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> firstByte == [<span class="number">0xab</span>].toData() || receiveSubCommand &#123;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 七八字节</span></span><br><span class="line">        <span class="keyword">let</span> threeByte = receiverveData.subdataWithRange(<span class="type">NSMakeRange</span>(<span class="number">2</span>, <span class="number">1</span>))</span><br><span class="line">        <span class="keyword">let</span> fourByte = receiverveData.subdataWithRange(<span class="type">NSMakeRange</span>(<span class="number">3</span>, <span class="number">1</span>))</span><br><span class="line">        <span class="keyword">if</span> !receiveSubCommand &#123;</span><br><span class="line">            sevenByte = receiverveData.subdataWithRange(<span class="type">NSMakeRange</span>(<span class="number">6</span>, <span class="number">1</span>))</span><br><span class="line">            eightByte = receiverveData.subdataWithRange(<span class="type">NSMakeRange</span>(<span class="number">7</span>, <span class="number">1</span>))</span><br><span class="line">            firstCommand = receiverveData</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 先判断第7，8位的数据。如果有值，就把后面的数据也加进去判断，接收完毕数据再回应</span></span><br><span class="line">        <span class="comment">// 要交换位置才能得到大端模式正确的Int值</span></span><br><span class="line">        <span class="keyword">let</span> threeAndFore = <span class="type">NSMutableData</span>()</span><br><span class="line">        threeAndFore.appendData(fourByte)</span><br><span class="line">        threeAndFore.appendData(threeByte)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> <span class="type">L2DataLength</span> == <span class="number">0</span> &#123;</span><br><span class="line">            <span class="type">L2DataLength</span> = threeAndFore.toInt() + <span class="number">8</span></span><br><span class="line">            receiveSubCommand = <span class="literal">true</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">let</span> fullCommand = <span class="type">NSMutableData</span>()</span><br><span class="line">        fullCommand.appendData(receiverveData)</span><br><span class="line">        reviceLength += receiverveData.length</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 所有数据包得到，开始验证</span></span><br><span class="line">        <span class="keyword">if</span> reviceLength == <span class="type">L2DataLength</span> &#123;</span><br><span class="line">            <span class="keyword">let</span> allCommand = <span class="type">NSMutableData</span>(data: firstCommand!)</span><br><span class="line">            allCommand.appendData(fullCommand)</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">"Receive All Command 【<span class="subst">\(allCommand)</span>】"</span>)</span><br><span class="line">            <span class="keyword">let</span> command = <span class="type">NSMutableData</span>()</span><br><span class="line">            command.appendData([<span class="number">0xab</span>,<span class="number">0x10</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>].toData())</span><br><span class="line">            command.appendData(sevenByte!)</span><br><span class="line">            command.appendData(eightByte!)</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">"Respose Command Get ACK: <span class="subst">\(command)</span>"</span>)</span><br><span class="line">            <span class="keyword">self</span>.discoveredPeripheral.writeValue(command, forCharacteristic: writeCharacteristic, type: <span class="type">CBCharacteristicWriteType</span>.<span class="type">WithResponse</span> )</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">"-------------------------------------------------\n"</span>)</span><br><span class="line">            <span class="type">L2DataLength</span> = <span class="number">0</span></span><br><span class="line">            reviceLength = <span class="number">0</span></span><br><span class="line">            receiveSubCommand = <span class="literal">false</span></span><br><span class="line">            <span class="keyword">return</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>第二版本是正确的：</p>
<figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>
<figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span><br><span class="line">计算CRC16的值</span><br><span class="line"></span><br><span class="line">- parameter calData: 要计算的值，是个[UInt8]数组</span><br><span class="line"></span><br><span class="line">- returns: 大端模式的数据包</span><br><span class="line">*/</span></span><br><span class="line"><span class="func"><span class="keyword">func</span> <span class="title">calculateCRC16</span><span class="params">(calData:[UInt8])</span></span> -&gt; <span class="type">NSData</span> &#123;</span><br><span class="line">    <span class="keyword">let</span> cal: <span class="type">CRC</span> = <span class="type">CRC</span>()</span><br><span class="line">    <span class="keyword">var</span> crcResult = cal.crc16(calData)</span><br><span class="line">    <span class="keyword">let</span> crcData: <span class="type">NSMutableData</span> = <span class="type">NSMutableData</span>()</span><br><span class="line">    <span class="keyword">if</span> crcResult &lt;= <span class="number">0xFF</span> &#123;</span><br><span class="line">        <span class="keyword">var</span> zero: <span class="type">UInt8</span> = <span class="number">0x0</span></span><br><span class="line">        crcData.appendBytes(&amp;zero, length: <span class="number">1</span>)</span><br><span class="line">        crcData.appendBytes(&amp;crcResult, length: <span class="number">1</span>)</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">var</span> front = (crcResult &amp; <span class="number">0xFF00</span>) &gt;&gt; <span class="number">8</span></span><br><span class="line">        crcData.appendBytes(&amp;front, length: <span class="number">1</span>)</span><br><span class="line">        <span class="keyword">var</span> back = (crcResult &amp; <span class="number">0xFF</span>)</span><br><span class="line">        crcData.appendBytes(&amp;back, length: <span class="number">1</span>)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">"CRC16 Result : <span class="subst">\(crcData)</span>"</span>)</span><br><span class="line">    <span class="keyword">return</span> crcData</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>2015/11/11 17:11 摸索成功连接和测试命令。</p>
]]></content>
    <summary type="html">
    <![CDATA[<p><a href="http://store.baidu.com/product/open" target="_blank" rel="external">百度硬件开源</a>也真是坑，说是开源，APP端的源码都没有给，核心的算法和与蓝牙硬件的交互都要自己摸索。</p>
<h]]>
    </summary>
    
      <category term="iOS" scheme="http://lecason.com/tags/iOS/"/>
    
      <category term="iOS" scheme="http://lecason.com/categories/iOS/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[iOS 测试蓝牙App在后台被Kill的时候重新扫描连接]]></title>
    <link href="http://lecason.com/2015/10/31/iOS-bluetooth-restorestate-test/"/>
    <id>http://lecason.com/2015/10/31/iOS-bluetooth-restorestate-test/</id>
    <published>2015-10-31T00:32:41.000Z</published>
    <updated>2015-10-31T01:37:46.000Z</updated>
    <content type="html"><![CDATA[<p>在Google上找了好多资料，发现测试这个不好在Xcode里调试。这里主要是用到<code>CBCentralManagerOptionRestoreIdentifierKey</code>，字符串，一个唯一的标示符，用来蓝牙的恢复连接的。在后台的长连接中可能会用到，如果蓝牙程序进入后台，程序会被挂起，可能由于memory pressure，程序被系统kill了，那么代理方法就不会执行了。这时候可以使用State Preservation &amp; Restoration，这样程序会重新加载进入后台。随便写的测试就不处理nil的崩溃的问题了。</p>
<h2 id="创建新项目">创建新项目</h2><p>创建一个新项目，引入CoreBluetooth，加上三个按钮，Scan，Connect，KillSelf。还有一些Lable 以前设置CBCentralManagerDelegate等。<code>后台运行蓝牙</code>选项一定要打开。</p>
<h2 id="初使化centralManager">初使化centralManager</h2><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="func"><span class="keyword">func</span> <span class="title">initSomething</span><span class="params">()</span></span> &#123;</span><br><span class="line">    <span class="keyword">let</span> blutoothQueue: dispatch_queue_t = dispatch_queue_create(<span class="string">"blutoothQueue"</span>,<span class="type">DISPATCH_QUEUE_SERIAL</span>)</span><br><span class="line">    centralManager = <span class="type">CBCentralManager</span>(delegate: <span class="keyword">self</span>, queue: blutoothQueue, options: [<span class="type">CBCentralManagerOptionRestoreIdentifierKey</span> : <span class="string">"RestoreIdentifierKey"</span>])</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="新建UserDefalut相关方法">新建UserDefalut相关方法</h2><p>由于系统被Kill的时候，不能打印出来，只能存在UserDefalut里面，查看。在ViewController里面加上方法</p>
<figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="func"><span class="keyword">func</span> <span class="title">saveWillRestoreState</span><span class="params">()</span></span> &#123;</span><br><span class="line">    <span class="keyword">let</span> userDefault: <span class="type">NSUserDefaults</span> = <span class="type">NSUserDefaults</span>.standardUserDefaults()</span><br><span class="line">    <span class="keyword">let</span> dateFormatter = <span class="type">NSDateFormatter</span>()</span><br><span class="line">    dateFormatter.dateFormat = <span class="string">"yyyy-MM-dd HH:mm:ss EEEE"</span></span><br><span class="line">    <span class="keyword">let</span> dateString = dateFormatter.stringFromDate(<span class="type">NSDate</span>(timeIntervalSinceNow: <span class="number">0</span>))</span><br><span class="line">    userDefault.setObject(dateString, forKey: <span class="string">"willRestoreState"</span>)</span><br><span class="line">    userDefault.synchronize()</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="func"><span class="keyword">func</span> <span class="title">readWillRestoreState</span><span class="params">()</span></span> -&gt; <span class="type">String</span> &#123;</span><br><span class="line">    <span class="keyword">let</span> userDefault: <span class="type">NSUserDefaults</span> = <span class="type">NSUserDefaults</span>.standardUserDefaults()</span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">let</span> willRestoreState = userDefault.objectForKey(<span class="string">"willRestoreState"</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> willRestoreState <span class="keyword">as</span>! <span class="type">String</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="string">""</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="func"><span class="keyword">func</span> <span class="title">saveKillTime</span><span class="params">()</span></span> &#123;</span><br><span class="line">    <span class="keyword">let</span> userDefault: <span class="type">NSUserDefaults</span> = <span class="type">NSUserDefaults</span>.standardUserDefaults()</span><br><span class="line">    <span class="keyword">let</span> dateFormatter = <span class="type">NSDateFormatter</span>()</span><br><span class="line">    dateFormatter.dateFormat = <span class="string">"yyyy-MM-dd HH:mm:ss EEEE"</span></span><br><span class="line">    <span class="keyword">let</span> dateString = dateFormatter.stringFromDate(<span class="type">NSDate</span>(timeIntervalSinceNow: <span class="number">0</span>))</span><br><span class="line">    userDefault.setObject(dateString, forKey: <span class="string">"KillTime"</span>)</span><br><span class="line">    userDefault.synchronize()</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="func"><span class="keyword">func</span> <span class="title">readKillTime</span><span class="params">()</span></span> -&gt; <span class="type">String</span> &#123;</span><br><span class="line">    <span class="keyword">let</span> userDefault: <span class="type">NSUserDefaults</span> = <span class="type">NSUserDefaults</span>.standardUserDefaults()</span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">let</span> willRestoreState = userDefault.objectForKey(<span class="string">"KillTime"</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> willRestoreState <span class="keyword">as</span>! <span class="type">String</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="string">""</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="func"><span class="keyword">func</span> <span class="title">readLanuchOptions</span><span class="params">()</span></span> -&gt; <span class="type">String</span> &#123;</span><br><span class="line">    <span class="keyword">let</span> userDefault: <span class="type">NSUserDefaults</span> = <span class="type">NSUserDefaults</span>.standardUserDefaults()</span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">let</span> options = userDefault.objectForKey(<span class="string">"LanuchOptions"</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> options <span class="keyword">as</span>! <span class="type">String</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="string">""</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="处理AppDelegate">处理AppDelegate</h2><p>在里面加上方法</p>
<figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="func"><span class="keyword">func</span> <span class="title">application</span><span class="params">(application: UIApplication, didFinishLaunchingWithOptions launchOptions: [NSObject: AnyObject]?)</span></span> -&gt; <span class="type">Bool</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">let</span> options = launchOptions &#123;</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">let</span> centralManagerIdentifiers = options[<span class="type">UIApplicationLaunchOptionsBluetoothCentralsKey</span>] &#123;</span><br><span class="line">            saveLanuchOptions(centralManagerIdentifiers <span class="keyword">as</span>! <span class="type">String</span>)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="func"><span class="keyword">func</span> <span class="title">saveLanuchOptions</span><span class="params">(options: String)</span></span> &#123;</span><br><span class="line">    <span class="keyword">let</span> userDefault: <span class="type">NSUserDefaults</span> = <span class="type">NSUserDefaults</span>.standardUserDefaults()</span><br><span class="line">    userDefault.setObject(options, forKey: <span class="string">"LanuchOptions"</span>)</span><br><span class="line">    userDefault.synchronize()</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="处理按钮事件">处理按钮事件</h2><p>点击扫描的时候，扫描到蓝牙再连接，蓝牙图标处于深色状态就点击<code>KillSelf</code>按钮，再按<code>Home</code>键进入后台，5秒后App就会模拟被系统Kill掉。必须要连接上蓝牙进入后台而且扫描过蓝牙设备的服务和特征才能被系统恢复。如果用LightBlue测试，这时候两台手机的蓝牙图标都要处于深色状态。这个只能在断开与Xcode的连接下测试。</p>
<figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">override</span> <span class="func"><span class="keyword">func</span> <span class="title">viewDidLoad</span><span class="params">()</span></span> &#123;</span><br><span class="line">    <span class="keyword">super</span>.viewDidLoad()</span><br><span class="line">    <span class="keyword">self</span>.initSomething()</span><br><span class="line"></span><br><span class="line">    killTime.text = readKillTime()</span><br><span class="line">    restoreTime.text = readWillRestoreState()</span><br><span class="line">    options.text = readLanuchOptions()</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="preprocessor">@IBAction</span> <span class="func"><span class="keyword">func</span> <span class="title">scan</span><span class="params">(sender: UIButton)</span></span> &#123;</span><br><span class="line">    centralManager.scanForPeripheralsWithServices(<span class="literal">nil</span>, options: <span class="literal">nil</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="preprocessor">@IBAction</span> <span class="func"><span class="keyword">func</span> <span class="title">connect</span><span class="params">(sender: UIButton)</span></span> &#123;</span><br><span class="line">    centralManager.connectPeripheral(handlePeripheral, options: <span class="literal">nil</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="preprocessor">@IBAction</span> <span class="func"><span class="keyword">func</span> <span class="title">killself</span><span class="params">(sender: UIButton)</span></span> &#123;</span><br><span class="line">    <span class="keyword">let</span> delayTime = dispatch_time(<span class="type">DISPATCH_TIME_NOW</span>, <span class="type">Int64</span>(<span class="number">5</span> * <span class="type">Double</span>(<span class="type">NSEC_PER_SEC</span>)))</span><br><span class="line">    dispatch_after(delayTime, dispatch_get_main_queue()) &#123;</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">"App Be Killed Time: <span class="subst">\(NSDate(timeIntervalSinceNow: <span class="number">0</span>)</span>)"</span>)</span><br><span class="line">        <span class="keyword">self</span>.saveKillTime()</span><br><span class="line">        <span class="keyword">let</span> delayTime = dispatch_time(<span class="type">DISPATCH_TIME_NOW</span>, <span class="type">Int64</span>(<span class="number">0.1</span> * <span class="type">Double</span>(<span class="type">NSEC_PER_SEC</span>)))</span><br><span class="line">        dispatch_after(delayTime, dispatch_get_main_queue()) &#123;</span><br><span class="line">            kill(getpid(), <span class="type">SIGKILL</span>)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
    <summary type="html">
    <![CDATA[<p>在Google上找了好多资料，发现测试这个不好在Xcode里调试。这里主要是用到<code>CBCentralManagerOptionRestoreIdentifierKey</code>，字符串，一个唯一的标示符，用来蓝牙的恢复连接的。在后台的长连接中可能会用到，如果蓝]]>
    </summary>
    
      <category term="iOS" scheme="http://lecason.com/tags/iOS/"/>
    
      <category term="iOS" scheme="http://lecason.com/categories/iOS/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Swift 十六进制字符串转成 Int]]></title>
    <link href="http://lecason.com/2015/10/29/Swift-HexString-to-Int/"/>
    <id>http://lecason.com/2015/10/29/Swift-HexString-to-Int/</id>
    <published>2015-10-29T06:27:25.000Z</published>
    <updated>2015-10-29T07:04:00.000Z</updated>
    <content type="html"><![CDATA[<h2 id="使用NSScanner()方法">使用NSScanner()方法</h2><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> str = <span class="string">"0x10"</span></span><br><span class="line"><span class="keyword">let</span> scanner = <span class="type">NSScanner</span>(string: str)</span><br><span class="line"><span class="keyword">var</span> result : <span class="type">UInt32</span> = <span class="number">0</span></span><br><span class="line"><span class="keyword">if</span> scanner.scanHexInt(&amp;result) &#123;</span><br><span class="line">    <span class="built_in">print</span>(result)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>打印结果</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">16</span></span><br></pre></td></tr></table></figure>
<h2 id="使用BSD_library_function_的_strtoul()_方法">使用BSD library function 的 strtoul() 方法</h2><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> num = strtoul(str, <span class="literal">nil</span>, <span class="number">16</span>)</span><br><span class="line"><span class="built_in">print</span>(num)</span><br></pre></td></tr></table></figure>
<p>打印结果</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">16</span></span><br></pre></td></tr></table></figure>
<h2 id="Swift_2_(_Xcode_7_)_Int的构造方法就包括了转换">Swift 2 ( Xcode 7 ) Int的构造方法就包括了转换</h2><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">public <span class="keyword">init</span>?(<span class="number">_</span> text: <span class="type">String</span>, radix: <span class="type">Int</span> = <span class="keyword">default</span>)</span><br></pre></td></tr></table></figure>
<figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> num = <span class="type">Int</span>(str, radix: <span class="number">16</span>)</span><br><span class="line"><span class="built_in">print</span>(num)</span><br></pre></td></tr></table></figure>
<p>打印结果</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">16</span></span><br></pre></td></tr></table></figure>
<p>关于<code>radix</code></p>
<blockquote>
<p>String 被解析字符串 radix 要解析的字符串的基数。该值介于 2 ~ 36 之间。如果省略该参数或其值为 0，则数字将以 10 为基础来解析。如果它以 “0x” 或 “0X” 开头，将以 16 为基数。</p>
</blockquote>
]]></content>
    <summary type="html">
    <![CDATA[<h2 id="使用NSScanner()方法">使用NSScanner()方法</h2><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><]]>
    </summary>
    
      <category term="Swift" scheme="http://lecason.com/tags/Swift/"/>
    
      <category term="Swift" scheme="http://lecason.com/categories/Swift/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[iOS 本地通知的实现]]></title>
    <link href="http://lecason.com/2015/10/28/iOS-Local-Notification/"/>
    <id>http://lecason.com/2015/10/28/iOS-Local-Notification/</id>
    <published>2015-10-28T09:57:15.000Z</published>
    <updated>2015-10-28T10:08:08.000Z</updated>
    <content type="html"><![CDATA[<h2 id="新建项目">新建项目</h2><p>新建一个单页面应用，项目基于Xcode 7, iOS 8+， Swift 2</p>
<h2 id="注册通知">注册通知</h2><p>在 <code>AppDelegate</code>里面加入注册通知</p>
<figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="func"><span class="keyword">func</span> <span class="title">application</span><span class="params">(application: UIApplication, didFinishLaunchingWithOptions launchOptions: [NSObject: AnyObject]?)</span></span> -&gt; <span class="type">Bool</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 注册通知</span></span><br><span class="line">    <span class="keyword">let</span> settings = <span class="type">UIUserNotificationSettings</span>(forTypes: [.<span class="type">Alert</span>, .<span class="type">Badge</span>, .<span class="type">Sound</span>], categories: <span class="literal">nil</span>)</span><br><span class="line">    application.registerUserNotificationSettings(settings)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>在 <code>AppDelegate</code>里面加入下面代码处理收到的通知</p>
<figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="func"><span class="keyword">func</span> <span class="title">application</span><span class="params">(application: UIApplication, didReceiveLocalNotification notification: UILocalNotification)</span></span> &#123;</span><br><span class="line">    application.applicationIconBadgeNumber = <span class="number">0</span></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">"didReceiveLocalNotification"</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>在 <code>ViewController</code>里面加入</p>
<figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">override</span> <span class="func"><span class="keyword">func</span> <span class="title">viewDidLoad</span><span class="params">()</span></span> &#123;</span><br><span class="line">    <span class="keyword">super</span>.viewDidLoad()</span><br><span class="line">    sendNotification()</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="func"><span class="keyword">func</span> <span class="title">sendNotification</span><span class="params">()</span></span> &#123;</span><br><span class="line">    <span class="keyword">let</span> localNotification = <span class="type">UILocalNotification</span>()</span><br><span class="line">    localNotification.fireDate = <span class="type">NSDate</span>(timeIntervalSinceNow: <span class="number">5</span>)</span><br><span class="line">    localNotification.alertBody = <span class="string">"Receive LocalNotification"</span></span><br><span class="line">    localNotification.timeZone = <span class="type">NSTimeZone</span>.defaultTimeZone()</span><br><span class="line">    localNotification.soundName = <span class="type">UILocalNotificationDefaultSoundName</span></span><br><span class="line">    localNotification.applicationIconBadgeNumber = <span class="type">UIApplication</span>.sharedApplication().applicationIconBadgeNumber + <span class="number">1</span></span><br><span class="line">    <span class="type">UIApplication</span>.sharedApplication().scheduleLocalNotification(localNotification)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="使用">使用</h2><p>打开App一次请求到权限后，再关闭。5秒后就会收到通知</p>
<p><img src="/img/localnotification1.png" alt=""></p>
]]></content>
    <summary type="html">
    <![CDATA[<h2 id="新建项目">新建项目</h2><p>新建一个单页面应用，项目基于Xcode 7, iOS 8+， Swift 2</p>
<h2 id="注册通知">注册通知</h2><p>在 <code>AppDelegate</code>里面加入注册通知</p>
<figur]]>
    </summary>
    
      <category term="iOS" scheme="http://lecason.com/tags/iOS/"/>
    
      <category term="iOS" scheme="http://lecason.com/categories/iOS/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Swift 使用Sqlite3数据库]]></title>
    <link href="http://lecason.com/2015/10/27/Swift-use-sqlite/"/>
    <id>http://lecason.com/2015/10/27/Swift-use-sqlite/</id>
    <published>2015-10-27T05:33:43.000Z</published>
    <updated>2015-10-27T05:39:13.000Z</updated>
    <content type="html"><![CDATA[<h2 id="创建桥文件">创建桥文件</h2><p>新建一个<code>ProjectName-Bridging-Header.h</code>的桥接文件，然后在文件里引入<code>sqlite3.h</code>头文件。</p>
<figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">#<span class="keyword">import</span> &lt;sqlite3.h&gt;</span><br></pre></td></tr></table></figure>
<h2 id="引入库">引入库</h2><p><img src="/img/sqlite1.png" alt=""></p>
<h2 id="使用">使用</h2><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="func"><span class="keyword">func</span> <span class="title">initDataBase</span><span class="params">()</span></span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 创建数据库</span></span><br><span class="line">    <span class="keyword">let</span> documents = try! <span class="type">NSFileManager</span>.defaultManager().<span class="type">URLForDirectory</span>(.<span class="type">DocumentDirectory</span>, inDomain: .<span class="type">UserDomainMask</span>, appropriateForURL: <span class="literal">nil</span>, create: <span class="literal">false</span>)</span><br><span class="line">    <span class="keyword">let</span> fileURL = documents.<span class="type">URLByAppendingPathComponent</span>(<span class="string">"db.sqlite"</span>)</span><br><span class="line">    <span class="built_in">print</span>(fileURL)</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 打开数据库</span></span><br><span class="line">    <span class="keyword">var</span> db: <span class="type">COpaquePointer</span> = <span class="literal">nil</span></span><br><span class="line">    <span class="keyword">if</span> sqlite3_open(fileURL.path!, &amp;db) != <span class="type">SQLITE_OK</span> &#123;</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">"error opening database"</span>)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 创建数据表</span></span><br><span class="line">    <span class="keyword">if</span> sqlite3_exec(db, <span class="string">"create table if not exists devices (id integer primary key autoincrement, name text,identifier test)"</span>, <span class="literal">nil</span>, <span class="literal">nil</span>, <span class="literal">nil</span>) != <span class="type">SQLITE_OK</span> &#123;</span><br><span class="line">        <span class="keyword">let</span> errmsg = <span class="type">String</span>.fromCString(sqlite3_errmsg(db))</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">"error creating table: <span class="subst">\(errmsg)</span>"</span>)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    <summary type="html">
    <![CDATA[<h2 id="创建桥文件">创建桥文件</h2><p>新建一个<code>ProjectName-Bridging-Header.h</code>的桥接文件，然后在文件里引入<code>sqlite3.h</code>头文件。</p>
<figure class="highli]]>
    </summary>
    
      <category term="Swift" scheme="http://lecason.com/tags/Swift/"/>
    
      <category term="Swift" scheme="http://lecason.com/categories/Swift/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[iOS 插入耳机的时候强制通过手机自带扬声器来播放声音]]></title>
    <link href="http://lecason.com/2015/10/24/Force-audio-output-to-speakers-while-headphones-are-plugged-in/"/>
    <id>http://lecason.com/2015/10/24/Force-audio-output-to-speakers-while-headphones-are-plugged-in/</id>
    <published>2015-10-24T02:51:26.000Z</published>
    <updated>2015-10-24T03:08:54.000Z</updated>
    <content type="html"><![CDATA[<h2 id="系统要求">系统要求</h2><p>iOS Version &lt;= 6.0</p>
<h2 id="新建文件">新建文件</h2><p><code>AudioRouter.h</code></p>
<figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor">#import <span class="title">&lt;Foundation/Foundation.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">@interface</span> <span class="title">AudioRouter</span> : <span class="title">NSObject</span></span></span><br><span class="line"></span><br><span class="line">+ (<span class="keyword">void</span>) initAudioSessionRouting;</span><br><span class="line">+ (<span class="keyword">void</span>) switchToDefaultHardware;</span><br><span class="line">+ (<span class="keyword">void</span>) forceOutputToBuiltInSpeakers;</span><br><span class="line"></span><br><span class="line"><span class="keyword">@end</span></span><br></pre></td></tr></table></figure>
<p><code>AudioRouter.m</code></p>
<figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor">#import <span class="title">"AudioRouter.h"</span></span></span><br><span class="line"><span class="preprocessor">#import <span class="title">&lt;AudioToolbox/AudioToolbox.h&gt;</span></span></span><br><span class="line"><span class="preprocessor">#import <span class="title">&lt;AVFoundation/AVFoundation.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">@implementation</span> <span class="title">AudioRouter</span></span></span><br><span class="line"></span><br><span class="line"><span class="preprocessor">#define IS_DEBUGGING NO</span></span><br><span class="line"><span class="preprocessor">#define IS_DEBUGGING_EXTRA_INFO NO</span></span><br><span class="line"></span><br><span class="line">+ (<span class="keyword">void</span>) initAudioSessionRouting &#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Called once to route all audio through speakers, even if something's plugged into the headphone jack</span></span><br><span class="line">    <span class="keyword">static</span> <span class="built_in">BOOL</span> audioSessionSetup = <span class="literal">NO</span>;</span><br><span class="line">    <span class="keyword">if</span> (audioSessionSetup == <span class="literal">NO</span>) &#123;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// set category to accept properties assigned below</span></span><br><span class="line">        <span class="built_in">NSError</span> *sessionError = <span class="literal">nil</span>;</span><br><span class="line">        [[<span class="built_in">AVAudioSession</span> sharedInstance] setCategory:<span class="built_in">AVAudioSessionCategoryPlayAndRecord</span> withOptions:<span class="built_in">AVAudioSessionCategoryOptionDefaultToSpeaker</span> error: &amp;sessionError];</span><br><span class="line"></span><br><span class="line">        <span class="comment">// Doubly force audio to come out of speaker</span></span><br><span class="line">        <span class="built_in">UInt32</span> audioRouteOverride = kAudioSessionOverrideAudioRoute_Speaker;</span><br><span class="line">        AudioSessionSetProperty (kAudioSessionProperty_OverrideAudioRoute, <span class="keyword">sizeof</span>(audioRouteOverride), &amp;audioRouteOverride);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// fix issue with audio interrupting video recording - allow audio to mix on top of other media</span></span><br><span class="line">        <span class="built_in">UInt32</span> doSetProperty = <span class="number">1</span>;</span><br><span class="line">        AudioSessionSetProperty (kAudioSessionProperty_OverrideCategoryMixWithOthers, <span class="keyword">sizeof</span>(doSetProperty), &amp;doSetProperty);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// set active</span></span><br><span class="line">        [[<span class="built_in">AVAudioSession</span> sharedInstance] setActive: <span class="literal">YES</span> error: <span class="literal">nil</span>];</span><br><span class="line"></span><br><span class="line">        <span class="comment">// add listener for audio input changes</span></span><br><span class="line">        AudioSessionAddPropertyListener (kAudioSessionProperty_AudioRouteChange, onAudioRouteChange, <span class="literal">nil</span> );</span><br><span class="line">        AudioSessionAddPropertyListener (kAudioSessionProperty_AudioInputAvailable, onAudioRouteChange, <span class="literal">nil</span> );</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Force audio to come out of speaker</span></span><br><span class="line">    [[<span class="built_in">AVAudioSession</span> sharedInstance] overrideOutputAudioPort:<span class="built_in">AVAudioSessionPortOverrideSpeaker</span> error:<span class="literal">nil</span>];</span><br><span class="line"></span><br><span class="line">    <span class="comment">// set flag</span></span><br><span class="line">    audioSessionSetup = <span class="literal">YES</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">+ (<span class="keyword">void</span>) switchToDefaultHardware &#123;</span><br><span class="line">    <span class="comment">// Remove forcing to built-in speaker</span></span><br><span class="line">    <span class="built_in">UInt32</span> audioRouteOverride = kAudioSessionOverrideAudioRoute_None;</span><br><span class="line">    AudioSessionSetProperty (kAudioSessionProperty_OverrideAudioRoute, <span class="keyword">sizeof</span>(audioRouteOverride), &amp;audioRouteOverride);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">+ (<span class="keyword">void</span>) forceOutputToBuiltInSpeakers &#123;</span><br><span class="line">    <span class="comment">// Re-force audio to come out of speaker</span></span><br><span class="line">    <span class="built_in">UInt32</span> audioRouteOverride = kAudioSessionOverrideAudioRoute_Speaker;</span><br><span class="line">    AudioSessionSetProperty (kAudioSessionProperty_OverrideAudioRoute, <span class="keyword">sizeof</span>(audioRouteOverride), &amp;audioRouteOverride);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">void</span> onAudioRouteChange (<span class="keyword">void</span>* clientData, AudioSessionPropertyID inID, <span class="built_in">UInt32</span> dataSize, <span class="keyword">const</span> <span class="keyword">void</span>* inData) &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>( IS_DEBUGGING == <span class="literal">YES</span> ) &#123;</span><br><span class="line">        <span class="built_in">NSLog</span>(<span class="string">@"==== Audio Harware Status ===="</span>);</span><br><span class="line">        <span class="built_in">NSLog</span>(<span class="string">@"Current Input:  %@"</span>, [AudioRouter getAudioSessionInput]);</span><br><span class="line">        <span class="built_in">NSLog</span>(<span class="string">@"Current Output: %@"</span>, [AudioRouter getAudioSessionOutput]);</span><br><span class="line">        <span class="built_in">NSLog</span>(<span class="string">@"Current hardware route: %@"</span>, [AudioRouter getAudioSessionRoute]);</span><br><span class="line">        <span class="built_in">NSLog</span>(<span class="string">@"=============================="</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>( IS_DEBUGGING_EXTRA_INFO == <span class="literal">YES</span> ) &#123;</span><br><span class="line">        <span class="built_in">NSLog</span>(<span class="string">@"==== Audio Harware Status (EXTENDED) ===="</span>);</span><br><span class="line">        <span class="built_in">CFDictionaryRef</span> dict = (<span class="built_in">CFDictionaryRef</span>)inData;</span><br><span class="line">        <span class="built_in">CFNumberRef</span> reason = <span class="built_in">CFDictionaryGetValue</span>(dict, kAudioSession_RouteChangeKey_Reason);</span><br><span class="line">        <span class="built_in">CFDictionaryRef</span> oldRoute = <span class="built_in">CFDictionaryGetValue</span>(dict, kAudioSession_AudioRouteChangeKey_PreviousRouteDescription);</span><br><span class="line">        <span class="built_in">CFDictionaryRef</span> newRoute = <span class="built_in">CFDictionaryGetValue</span>(dict, kAudioSession_AudioRouteChangeKey_CurrentRouteDescription);</span><br><span class="line">        <span class="built_in">NSLog</span>(<span class="string">@"Audio old route: %@"</span>, oldRoute);</span><br><span class="line">        <span class="built_in">NSLog</span>(<span class="string">@"Audio new route: %@"</span>, newRoute);</span><br><span class="line">        <span class="built_in">NSLog</span>(<span class="string">@"Audio reason: %@"</span>,reason);</span><br><span class="line">        <span class="built_in">NSLog</span>(<span class="string">@"========================================="</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">+ (<span class="built_in">NSString</span>*) getAudioSessionInput &#123;</span><br><span class="line">    <span class="built_in">UInt32</span> routeSize;</span><br><span class="line">    AudioSessionGetPropertySize(kAudioSessionProperty_AudioRouteDescription, &amp;routeSize);</span><br><span class="line">    <span class="built_in">CFDictionaryRef</span> desc; <span class="comment">// this is the dictionary to contain descriptions</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// make the call to get the audio description and populate the desc dictionary</span></span><br><span class="line">    AudioSessionGetProperty (kAudioSessionProperty_AudioRouteDescription, &amp;routeSize, &amp;desc);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// the dictionary contains 2 keys, for input and output. Get output array</span></span><br><span class="line">    <span class="built_in">CFArrayRef</span> outputs = <span class="built_in">CFDictionaryGetValue</span>(desc, kAudioSession_AudioRouteKey_Inputs);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// the output array contains 1 element - a dictionary</span></span><br><span class="line">    <span class="built_in">CFDictionaryRef</span> diction = <span class="built_in">CFArrayGetValueAtIndex</span>(outputs, <span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// get the output description from the dictionary</span></span><br><span class="line">    <span class="built_in">CFStringRef</span> input = <span class="built_in">CFDictionaryGetValue</span>(diction, kAudioSession_AudioRouteKey_Type);</span><br><span class="line">    <span class="keyword">return</span> [<span class="built_in">NSString</span> stringWithFormat:<span class="string">@"%@"</span>, input];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">+ (<span class="built_in">NSString</span>*) getAudioSessionOutput &#123;</span><br><span class="line">    <span class="built_in">UInt32</span> routeSize;</span><br><span class="line">    AudioSessionGetPropertySize(kAudioSessionProperty_AudioRouteDescription, &amp;routeSize);</span><br><span class="line">    <span class="built_in">CFDictionaryRef</span> desc; <span class="comment">// this is the dictionary to contain descriptions</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// make the call to get the audio description and populate the desc dictionary</span></span><br><span class="line">    AudioSessionGetProperty (kAudioSessionProperty_AudioRouteDescription, &amp;routeSize, &amp;desc);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// the dictionary contains 2 keys, for input and output. Get output array</span></span><br><span class="line">    <span class="built_in">CFArrayRef</span> outputs = <span class="built_in">CFDictionaryGetValue</span>(desc, kAudioSession_AudioRouteKey_Outputs);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// the output array contains 1 element - a dictionary</span></span><br><span class="line">    <span class="built_in">CFDictionaryRef</span> diction = <span class="built_in">CFArrayGetValueAtIndex</span>(outputs, <span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// get the output description from the dictionary</span></span><br><span class="line">    <span class="built_in">CFStringRef</span> output = <span class="built_in">CFDictionaryGetValue</span>(diction, kAudioSession_AudioRouteKey_Type);</span><br><span class="line">    <span class="keyword">return</span> [<span class="built_in">NSString</span> stringWithFormat:<span class="string">@"%@"</span>, output];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">+ (<span class="built_in">NSString</span>*) getAudioSessionRoute &#123;</span><br><span class="line">    <span class="comment">/*</span><br><span class="line">    returns the current session route:</span><br><span class="line">    * ReceiverAndMicrophone</span><br><span class="line">    * HeadsetInOut</span><br><span class="line">    * Headset</span><br><span class="line">    * HeadphonesAndMicrophone</span><br><span class="line">    * Headphone</span><br><span class="line">    * SpeakerAndMicrophone</span><br><span class="line">    * Speaker</span><br><span class="line">    * HeadsetBT</span><br><span class="line">    * LineInOut</span><br><span class="line">    * Lineout</span><br><span class="line">    * Default</span><br><span class="line">    */</span></span><br><span class="line"></span><br><span class="line">    <span class="built_in">UInt32</span> rSize = <span class="keyword">sizeof</span> (<span class="built_in">CFStringRef</span>);</span><br><span class="line">    <span class="built_in">CFStringRef</span> route;</span><br><span class="line">    AudioSessionGetProperty (kAudioSessionProperty_AudioRoute, &amp;rSize, &amp;route);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (route == <span class="literal">NULL</span>) &#123;</span><br><span class="line">        <span class="built_in">NSLog</span>(<span class="string">@"Silent switch is currently on"</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="string">@"None"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> [<span class="built_in">NSString</span> stringWithFormat:<span class="string">@"%@"</span>, route];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="把bomb-png_改成_bomb-wav_拉进项目文件夹里面">把bomb.png 改成 bomb.wav 拉进项目文件夹里面</h2><p><img src="/img/bomb.png" alt=""></p>
<h2 id="新建一个播放声音的方法">新建一个播放声音的方法</h2><figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">- (<span class="keyword">void</span>)playMusic</span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">CFBundleRef</span> mainBundle = <span class="built_in">CFBundleGetMainBundle</span>();</span><br><span class="line">    <span class="built_in">CFURLRef</span>        soundFileURLRef;</span><br><span class="line">    SystemSoundID   soundFileObject;</span><br><span class="line">    soundFileURLRef  = <span class="built_in">CFBundleCopyResourceURL</span> (mainBundle,<span class="built_in">CFSTR</span> (<span class="string">"bomb"</span>),<span class="built_in">CFSTR</span> (<span class="string">"wav"</span>),<span class="literal">NULL</span>);</span><br><span class="line">    AudioServicesCreateSystemSoundID (soundFileURLRef,&amp;soundFileObject);</span><br><span class="line">    AudioServicesPlaySystemSound (soundFileObject);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="使用方法">使用方法</h2><figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">- (<span class="keyword">void</span>)viewDidLoad</span><br><span class="line">&#123;</span><br><span class="line">    [<span class="keyword">super</span> viewDidLoad];</span><br><span class="line">    [AudioRouter initAudioSessionRouting];</span><br><span class="line">    [AudioRouter switchToDefaultHardware];</span><br><span class="line">    [AudioRouter forceOutputToBuiltInSpeakers];</span><br><span class="line">    [<span class="keyword">self</span> playMusic];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="参考资料">参考资料</h2><ul>
<li><a href="http://uihacker.blogspot.it/2013/08/ios-force-audio-output-to-speakers.html" target="_blank" rel="external">Force audio output to speakers while headphones are plugged in</a></li>
<li><a href="http://blog.csdn.net/lixing333/article/details/43154541" target="_blank" rel="external">iOS录音和播放的那些事儿：几个奇葩的需求</a></li>
</ul>
]]></content>
    <summary type="html">
    <![CDATA[<h2 id="系统要求">系统要求</h2><p>iOS Version &lt;= 6.0</p>
<h2 id="新建文件">新建文件</h2><p><code>AudioRouter.h</code></p>
<figure class="highlight object]]>
    </summary>
    
      <category term="iOS" scheme="http://lecason.com/tags/iOS/"/>
    
      <category term="iOS" scheme="http://lecason.com/categories/iOS/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[iOS 基于 CSR8670 蓝牙芯片的蓝牙耳机开发]]></title>
    <link href="http://lecason.com/2015/10/23/iOS-CSR8670-Bluetooth-Headset-Development/"/>
    <id>http://lecason.com/2015/10/23/iOS-CSR8670-Bluetooth-Headset-Development/</id>
    <published>2015-10-23T07:33:39.000Z</published>
    <updated>2015-10-24T03:09:53.000Z</updated>
    <content type="html"><![CDATA[<h2 id="CSR8670_蓝牙芯片的基本参数">CSR8670 蓝牙芯片的基本参数</h2><p>基于CSR8670 4.0双模蓝牙模块，包含了A2DP（音乐播放），AVRCP（流媒体控制及音乐封面传输），HFP（免提通话)SPP（数据传输），PBAPC（电话本同步），HID（鼠标），BLE DataTrans（低功耗模式下的小数据传输）等协议。模块上的VREG高电平开机、低电平关机，开机后自动连接最近连接的手机。蓝牙模块与MCU执行UART 通信，使用AT指令实现连接、断开、拨打电话、音乐播放及远程控制、下载电话本、数据传输等功能。方案因采用4.0双模式，无需MFI认证可以兼容安卓、苹果和微软等平台的数据通信。</p>
]]></content>
    <summary type="html">
    <![CDATA[<h2 id="CSR8670_蓝牙芯片的基本参数">CSR8670 蓝牙芯片的基本参数</h2><p>基于CSR8670 4.0双模蓝牙模块，包含了A2DP（音乐播放），AVRCP（流媒体控制及音乐封面传输），HFP（免提通话)SPP（数据传输），PBAPC（电话本同步），HI]]>
    </summary>
    
      <category term="iOS" scheme="http://lecason.com/tags/iOS/"/>
    
      <category term="iOS" scheme="http://lecason.com/categories/iOS/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[CentOS LAMP 环境安装]]></title>
    <link href="http://lecason.com/2015/10/21/Centos-LAMP/"/>
    <id>http://lecason.com/2015/10/21/Centos-LAMP/</id>
    <published>2015-10-21T09:29:48.000Z</published>
    <updated>2015-10-21T09:42:31.000Z</updated>
    <content type="html"><![CDATA[<h1 id="中文问题">中文问题</h1><ul>
<li>Apache支持中文</li>
</ul>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># vi /etc/httpd/conf/httpd.conf</span></span><br></pre></td></tr></table></figure>
<p>在里面把 AddDefaultCharset UTF-8 改成</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># AddDefaultCharset GB2312</span></span><br></pre></td></tr></table></figure>
<ul>
<li>PHP支持中文</li>
</ul>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># vi /etc/php.ini</span></span><br></pre></td></tr></table></figure>
<p>在里面把 ;default_charset = “iso-8859-1”改成：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># default_charset = GB2312</span></span><br></pre></td></tr></table></figure>
<ul>
<li>MySQL支持中文</li>
</ul>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># vi /etc/my.cnf</span></span><br></pre></td></tr></table></figure>
<p>在里面加上</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[mysqld]</span><br><span class="line">character-set-server=utf8</span><br><span class="line">collation-server=utf8_general_ci</span><br><span class="line">[client]</span><br><span class="line">default-character-set=utf8</span><br></pre></td></tr></table></figure>
]]></content>
    <summary type="html">
    <![CDATA[<h1 id="中文问题">中文问题</h1><ul>
<li>Apache支持中文</li>
</ul>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1]]>
    </summary>
    
  </entry>
  
</feed>

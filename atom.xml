<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title><![CDATA[LECASON]]></title>
  
  <link href="/atom.xml" rel="self"/>
  <link href="http://lecason.com/"/>
  <updated>2016-09-19T16:38:31.000Z</updated>
  <id>http://lecason.com/</id>
  
  <author>
    <name><![CDATA[Lecason]]></name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title><![CDATA[Swift CoreBluetooth 蓝牙库]]></title>
    <link href="http://lecason.com/2016/09/20/Xcode-8-Swift-3-Bluetooth-Frameworks/"/>
    <id>http://lecason.com/2016/09/20/Xcode-8-Swift-3-Bluetooth-Frameworks/</id>
    <published>2016-09-19T16:32:02.000Z</published>
    <updated>2016-09-19T16:38:31.000Z</updated>
    <content type="html"><![CDATA[<h1 id="CSBluetoothDemo">CSBluetoothDemo</h1><p>Github: <a href="https://github.com/lecason/CSBluetoothDemo" target="_blank" rel="external">CSBluetoothDemo</a><br>Xcode 8 Swift 3 真机环境编译运行</p>
<h2 id="搜索外设">搜索外设</h2><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/// 搜索外设</span></span><br><span class="line"><span class="comment">///</span></span><br><span class="line"><span class="comment">/// - parameter adverisementService: 外设的广告服务字符串</span></span><br><span class="line"><span class="comment">/// - parameter retrieveService:     系统已连接上蓝牙所包含的服务</span></span><br><span class="line"><span class="comment">/// - parameter pastLastConnectd:    是否搜索最后一个连接成功的外设</span></span><br><span class="line">public <span class="class"><span class="keyword">class</span> <span class="title">func</span> <span class="title">scan</span>(<span class="title">adverisementService</span>: [<span class="title">String</span>]?, <span class="title">retrieveService</span>: [<span class="title">String</span>]?, <span class="title">pastLastConnectd</span>: <span class="title">Bool</span>)</span></span><br></pre></td></tr></table></figure>
<p>使用：<br><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">CSBluetooth</span>.scan(adverisementService: <span class="literal">nil</span>, retrieveService: [<span class="string">"FF10"</span>], pastLastConnectd: <span class="literal">true</span>)</span><br></pre></td></tr></table></figure></p>
<p>当发现外设的时候：<br><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">CSBluetooth</span>.discoverPeripheral = &#123; (peripheral, peripherals) <span class="keyword">in</span></span><br><span class="line"><span class="comment">// peripheral 当前发现的外设</span></span><br><span class="line"><span class="comment">// peripherals 当前已发现的外设</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<h2 id="连接外设">连接外设</h2><p>连接的时候会，外设如果要输入PIN码，会自动验证PIN码是否输入成功。<br><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/// 连接外设</span></span><br><span class="line"><span class="comment">///</span></span><br><span class="line"><span class="comment">/// - parameter peripheral: 要连接的外设</span></span><br><span class="line"><span class="comment">/// - parameter success:    连接成功回调</span></span><br><span class="line"><span class="comment">/// - parameter fail:       连接失败回调</span></span><br><span class="line">public <span class="class"><span class="keyword">class</span> <span class="title">func</span> <span class="title">connectPeripheral</span>(<span class="title">_</span> <span class="title">peripheral</span>: <span class="title">CBPeripheral</span>, <span class="title">success</span>: (@<span class="title">escaping</span> (<span class="title">Swift</span>.<span class="title">Void</span>) -&gt; <span class="title">Swift</span>.<span class="title">Void</span>)?, <span class="title">fail</span>: (@<span class="title">escaping</span> (<span class="title">CSBluetooth</span>.<span class="title">CSBluetoothError</span>) -&gt; <span class="title">Swift</span>.<span class="title">Void</span>)?)</span></span><br></pre></td></tr></table></figure></p>
<p>使用：<br><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">CSBluetooth</span>.connectPeripheral(peripheral, success: &#123;&#125;, fail: &#123; (error) <span class="keyword">in</span> <span class="built_in">print</span>(error) &#125;)</span><br></pre></td></tr></table></figure></p>
<h2 id="自动重连接外设">自动重连接外设</h2><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/// 设置断开自动重连外设，用户手动调用断开方法，以及在蓝牙设置里面忽略设备除外。</span></span><br><span class="line"><span class="comment">///</span></span><br><span class="line"><span class="comment">/// - parameter state: 重连级别</span></span><br><span class="line">public <span class="class"><span class="keyword">class</span> <span class="title">func</span> <span class="title">setAutoReconnectPeripheral</span>(<span class="title">_</span> <span class="title">state</span>: <span class="title">CSBluetoothAutoConnect</span>) </span>&#123;</span><br><span class="line">shareBluetooth.saveAutoConnectPeripheral(state)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>使用：<br><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">CSBluetooth</span>.setAutoReconnectPeripheral(<span class="type">CSBluetoothAutoConnect</span>.switchBluetoothAndFaraway)</span><br></pre></td></tr></table></figure></p>
<h2 id="自动恢复外设">自动恢复外设</h2><p>当APP处于后台时，由于内存紧张或者其它因为APP被系统关闭的时候，系统会在后动重新启动APP，并找回所需要的服务和特征，像手环类APP就可以一直保持在后台保持实时更新当前步数，像蓝牙锁相关的应用就可以长时候在后台运行的时候，被系统关闭了，这时候靠近蓝牙锁就可以自动连接并且实现相应的操作。要求自动重连接设置不可以是<code>CSBluetoothAutoConnect.none</code><br><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/// 要重新恢复需要先在AppDelegate didFinishLaunchingWithOptions调用此方法</span></span><br><span class="line"><span class="comment">/// 并且外设用connectPeripheral(peripheral: CBPeripheral, success:(Void -&gt; Void)?, fail:(Void -&gt; Void)?) 接口成功连接过</span></span><br><span class="line"><span class="comment">/// 且蓝牙与外设断开连接时，不能在系统里面打开和关闭蓝牙，不然就不能在系统杀死APP的时候再恢复连接</span></span><br><span class="line"><span class="comment">///</span></span><br><span class="line"><span class="comment">/// - parameter launchOptions: AppDelegate launchOptions</span></span><br><span class="line">public <span class="class"><span class="keyword">class</span> <span class="title">func</span> <span class="title">restoreDidFinishLaunchingWithOptions</span>(<span class="title">_</span> <span class="title">launchOptions</span>: [<span class="title">AnyHashable</span> : <span class="title">Any</span>]?)</span></span><br></pre></td></tr></table></figure></p>
<p>使用：<br><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="func"><span class="keyword">func</span> <span class="title">application</span><span class="params">(<span class="number">_</span> application: UIApplication, didFinishLaunchingWithOptions launchOptions: [UIApplicationLaunchOptionsKey: Any]?)</span></span> -&gt; <span class="type">Bool</span> &#123;</span><br><span class="line"><span class="type">CSBluetooth</span>.restoreDidFinishLaunchingWithOptions(launchOptions)</span><br><span class="line"><span class="keyword">return</span> <span class="literal">true</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<h2 id="取消连接外设">取消连接外设</h2><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/// 取消与外设的连接</span></span><br><span class="line"><span class="comment">///</span></span><br><span class="line"><span class="comment">/// - parameter peripheral: 要取消连接的外设</span></span><br><span class="line"><span class="comment">/// - parameter success:    取消连接成功回调</span></span><br><span class="line"><span class="comment">/// - parameter fail:       取消连接失败回调</span></span><br><span class="line">public <span class="class"><span class="keyword">class</span> <span class="title">func</span> <span class="title">cancelConnectPeripheral</span>(<span class="title">_</span> <span class="title">peripheral</span>: <span class="title">CBPeripheral</span>, <span class="title">success</span>: (@<span class="title">escaping</span> (<span class="title">Swift</span>.<span class="title">Void</span>) -&gt; <span class="title">Swift</span>.<span class="title">Void</span>)?, <span class="title">fail</span>: (@<span class="title">escaping</span> (<span class="title">CSBluetooth</span>.<span class="title">CSBluetoothError</span>) -&gt; <span class="title">Swift</span>.<span class="title">Void</span>)?)</span></span><br></pre></td></tr></table></figure>
<p>使用：<br><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">CSBluetooth</span>.cancelConnectPeripheral(peripheral, success: <span class="literal">nil</span>, fail: &#123; error <span class="keyword">in</span> <span class="built_in">print</span>(error) &#125;)</span><br></pre></td></tr></table></figure></p>
<h2 id="读取特征值">读取特征值</h2><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/// 异步读取特征值</span></span><br><span class="line"><span class="comment">///</span></span><br><span class="line"><span class="comment">/// - parameter readValueIdentifiter: 读特征的标识</span></span><br><span class="line"><span class="comment">/// - parameter success:              读取成功回调</span></span><br><span class="line"><span class="comment">/// - parameter fail:                 读取失败回调</span></span><br><span class="line">public <span class="class"><span class="keyword">class</span> <span class="title">func</span> <span class="title">readValue</span>(<span class="title">_</span> <span class="title">readValueIdentifiter</span>: <span class="title">String</span>, <span class="title">success</span>: (@<span class="title">escaping</span> (<span class="title">Data</span>) -&gt; <span class="title">Swift</span>.<span class="title">Void</span>)?, <span class="title">fail</span>: (@<span class="title">escaping</span> (<span class="title">CSBluetooth</span>.<span class="title">CSBluetoothError</span>) -&gt; <span class="title">Swift</span>.<span class="title">Void</span>)?)</span></span><br></pre></td></tr></table></figure>
<p>使用：<br><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> read = <span class="type">CSReadCharacteristic</span>(identifier: <span class="string">"READ"</span>, inService: <span class="string">"FEE7"</span>, inCharacteristic: <span class="string">"FEC9"</span>)</span><br><span class="line"><span class="type">CSBluetooth</span>.setReadCharacteristic([read])</span><br><span class="line"><span class="type">CSBluetooth</span>.readValue(<span class="string">"READ"</span>, success: <span class="literal">nil</span>) &#123; (error) <span class="keyword">in</span></span><br><span class="line"><span class="built_in">print</span>(error)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>结果：<br><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">CSBluetooth</span>.didReadValue = &#123; chracteristic <span class="keyword">in</span> </span><br><span class="line"><span class="comment">// 得到特征值 chracteristic.value        </span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<h2 id="写特征值">写特征值</h2><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/// 异步写数据到外设，大于20字节的数据将自动拆分发送，并且会检测每一个分包是否写入成功。</span></span><br><span class="line"><span class="comment">///</span></span><br><span class="line"><span class="comment">/// - parameter data:                  要写入的数据</span></span><br><span class="line"><span class="comment">/// - parameter writeValueIdentifiter: 要写入数据的标识</span></span><br><span class="line"><span class="comment">/// - parameter success:               写入成功回调</span></span><br><span class="line"><span class="comment">/// - parameter fail:                  写入失败回调</span></span><br><span class="line">public <span class="class"><span class="keyword">class</span> <span class="title">func</span> <span class="title">writeValue</span>(<span class="title">_</span> <span class="title">data</span>: <span class="title">Data</span>, <span class="title">writeValueIdentifiter</span>: <span class="title">String</span>, <span class="title">success</span>: (@<span class="title">escaping</span> (<span class="title">Swift</span>.<span class="title">Void</span>) -&gt; <span class="title">Swift</span>.<span class="title">Void</span>)?, <span class="title">fail</span>: (@<span class="title">escaping</span> (<span class="title">CSBluetooth</span>.<span class="title">CSBluetoothError</span>) -&gt; <span class="title">Swift</span>.<span class="title">Void</span>)?)</span></span><br></pre></td></tr></table></figure>
<p>使用：<br><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> write = <span class="type">CSWriteCharacteristic</span>(identifier: <span class="string">"WRITE"</span>, inService: <span class="string">"FF10"</span>, inCharacteristic: <span class="string">"FF11"</span>)</span><br><span class="line"><span class="type">CSBluetooth</span>.setWriteCharacteristic([write])</span><br><span class="line"><span class="type">CSBluetooth</span>.writeValue([<span class="number">0x23</span>,<span class="number">0x23</span>,<span class="number">0x23</span>,<span class="number">0x23</span>,<span class="number">0x23</span>,<span class="number">0x23</span>,<span class="number">0x23</span>,<span class="number">0x23</span>,<span class="number">0x23</span>,<span class="number">0x23</span>,<span class="number">0x23</span>,<span class="number">0x23</span>,<span class="number">0x23</span>,<span class="number">0x23</span>,<span class="number">0x23</span>,<span class="number">0x23</span>,<span class="number">0x23</span>,<span class="number">0x23</span>,<span class="number">0x23</span>,<span class="number">0x23</span>,<span class="number">0x23</span>,<span class="number">0x23</span>,<span class="number">0x23</span>,<span class="number">0x23</span>,<span class="number">0x23</span>,<span class="number">0x23</span>,<span class="number">0x23</span>,<span class="number">0x23</span>,<span class="number">0x23</span>,<span class="number">0x23</span>,<span class="number">0x23</span>,<span class="number">0x23</span>,<span class="number">0x23</span>,<span class="number">0x23</span>,<span class="number">0x23</span>].toData(), writeValueIdentifiter: <span class="string">"WRITE"</span>, success: <span class="literal">nil</span>, fail: &#123; (error) <span class="keyword">in</span> <span class="built_in">print</span>(error) &#125;)</span><br></pre></td></tr></table></figure></p>
<p>结果：<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">将要写入的数据: [&lt;<span class="number">23232323</span> <span class="number">23232323</span> <span class="number">23232323</span> <span class="number">23232323</span> <span class="number">23232323</span>&gt;, &lt;<span class="number">23232323</span> <span class="number">23232323</span> <span class="number">23232323</span> <span class="number">232323</span>&gt;] </span><br><span class="line"></span><br><span class="line">正在写入的数据: &lt;<span class="number">23232323</span> <span class="number">23232323</span> <span class="number">23232323</span> <span class="number">23232323</span> <span class="number">23232323</span>&gt; 外设回应数据: &lt;<span class="number">23232323</span> <span class="number">23232323</span> <span class="number">23232323</span> <span class="number">23232323</span> <span class="number">23232323</span>&gt;</span><br><span class="line"></span><br><span class="line">写入数据: &lt;<span class="number">23232323</span> <span class="number">23232323</span> <span class="number">23232323</span> <span class="number">23232323</span> <span class="number">23232323</span>&gt; 成功</span><br><span class="line"></span><br><span class="line">正在写入的数据: &lt;<span class="number">23232323</span> <span class="number">23232323</span> <span class="number">23232323</span> <span class="number">232323</span>&gt; 外设回应数据: &lt;<span class="number">23232323</span> <span class="number">23232323</span> <span class="number">23232323</span> <span class="number">232323</span>&gt;</span><br><span class="line"></span><br><span class="line">写入数据: &lt;<span class="number">23232323</span> <span class="number">23232323</span> <span class="number">23232323</span> <span class="number">232323</span>&gt; 成功</span><br><span class="line"></span><br><span class="line">写入数据完成: &lt;<span class="number">23232323</span> <span class="number">23232323</span> <span class="number">23232323</span> <span class="number">23232323</span> <span class="number">23232323</span> <span class="number">23232323</span> <span class="number">23232323</span> <span class="number">23232323</span> <span class="number">232323</span>&gt;</span><br></pre></td></tr></table></figure></p>
<h2 id="写特征并回应">写特征并回应</h2><p>适合向外设发送命令，向外设写一条命令，外设在Notify特征里面回应一条命令<br><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/// 异步写入数据到外设，每次写入的字节不能大于20字节，写入数据后将会从Notify特征读返回的小于20字节的值，通过校验函数检验是否成功。</span></span><br><span class="line"><span class="comment">///</span></span><br><span class="line"><span class="comment">/// - parameter writeData:             要写入的数据</span></span><br><span class="line"><span class="comment">/// - parameter writeValueIdentifiter: 写特征的标识</span></span><br><span class="line"><span class="comment">/// - parameter vaildFunction:         检验函数，reponseData为Notify特征返回的值</span></span><br><span class="line"><span class="comment">/// - parameter notifyIdentifier:      Notify特征的标识</span></span><br><span class="line"><span class="comment">/// - parameter success:               检验成功回调</span></span><br><span class="line"><span class="comment">/// - parameter fail:                  检验失败回调</span></span><br><span class="line">public <span class="class"><span class="keyword">class</span> <span class="title">func</span> <span class="title">writeValueWithNofityRespone</span>(<span class="title">_</span> <span class="title">writeData</span>: <span class="title">Data</span>, <span class="title">writeValueIdentifiter</span>: <span class="title">String</span>, <span class="title">vaildFunction</span>: (@<span class="title">escaping</span> (<span class="title">Data</span>) -&gt; <span class="title">Bool</span>), <span class="title">notifyIdentifier</span>: <span class="title">String</span>, <span class="title">success</span>: (@<span class="title">escaping</span> (<span class="title">Swift</span>.<span class="title">Void</span>) -&gt; <span class="title">Swift</span>.<span class="title">Void</span>)?, <span class="title">fail</span>: (@<span class="title">escaping</span> (<span class="title">CSBluetooth</span>.<span class="title">CSBluetoothError</span>) -&gt; <span class="title">Swift</span>.<span class="title">Void</span>)?)</span></span><br></pre></td></tr></table></figure></p>
<p>使用：<br><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> write = <span class="type">CSWriteCharacteristic</span>(identifier: <span class="string">"WRITE"</span>, inService: <span class="string">"FF10"</span>, inCharacteristic: <span class="string">"FF11"</span>)</span><br><span class="line"><span class="type">CSBluetooth</span>.setWriteCharacteristic([write])</span><br><span class="line"><span class="keyword">let</span> notify = <span class="type">CSNotifyCharacteristic</span>(identifier: <span class="string">"NOTIFY"</span>, inService: <span class="string">"FF10"</span>, inCharacteristic: <span class="string">"FF12"</span>, setOn: <span class="literal">true</span>)</span><br><span class="line"><span class="type">CSBluetooth</span>.setNotifyCharacteristic([notify])</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> vaildFunction = &#123; (responseData) -&gt; <span class="type">Bool</span> <span class="keyword">in</span></span><br><span class="line"><span class="comment">// Notify特征的值怎么样才算有效的可以自定义在此处理</span></span><br><span class="line"><span class="keyword">return</span> [<span class="number">0x00</span>].toData() != responseData</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">CSBluetooth</span>.writeValueWithNofityRespone([<span class="number">00</span>, <span class="number">00</span>, <span class="number">00</span>, <span class="number">00</span>, <span class="number">09</span>, <span class="number">00</span>, <span class="number">00</span>, <span class="number">00</span>, <span class="number">00</span>, <span class="number">00</span>, <span class="number">00</span>, <span class="number">00</span>, <span class="number">00</span>, <span class="number">00</span>, <span class="number">00</span>, <span class="number">00</span>, <span class="number">00</span>, <span class="number">00</span>, <span class="number">00</span>, <span class="number">00</span>].toData(),writeValueIdentifiter: <span class="string">"WRITE"</span>, vaildFunction: vaildFunction, notifyIdentifier: <span class="string">"NOTIFY"</span>, success: <span class="literal">nil</span>, fail: &#123; (error) <span class="keyword">in</span> <span class="built_in">print</span>(error) &#125;)</span><br></pre></td></tr></table></figure></p>
<p>结果：<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">将要写入的数据: [&lt;<span class="number">00000000</span> <span class="number">09000000</span> <span class="number">00000000</span> <span class="number">00000000</span> <span class="number">00000000</span>&gt;] </span><br><span class="line"></span><br><span class="line">正在写入的数据: &lt;<span class="number">00000000</span> <span class="number">09000000</span> <span class="number">00000000</span> <span class="number">00000000</span> <span class="number">00000000</span>&gt; 外设回应数据: &lt;<span class="number">00000000</span> <span class="number">09000000</span> <span class="number">00000000</span> <span class="number">00000000</span> <span class="number">00000000</span>&gt;</span><br><span class="line"></span><br><span class="line">写入数据: &lt;<span class="number">00000000</span> <span class="number">09000000</span> <span class="number">00000000</span> <span class="number">00000000</span> <span class="number">00000000</span>&gt; 成功</span><br><span class="line"></span><br><span class="line">写入数据完成: &lt;<span class="number">00000000</span> <span class="number">09000000</span> <span class="number">00000000</span> <span class="number">00000000</span> <span class="number">00000000</span>&gt; </span><br><span class="line"></span><br><span class="line">正在写入数据: &lt;<span class="number">00000000</span> <span class="number">09000000</span> <span class="number">00000000</span> <span class="number">00000000</span> <span class="number">00000000</span>&gt; 特征Notify回应数据: Optional(&lt;<span class="number">00000000</span> <span class="number">09000000</span> <span class="number">00000000</span> <span class="number">00000000</span> <span class="number">00000009</span>&gt;) </span><br><span class="line"></span><br><span class="line">验证Notify数据成功</span><br></pre></td></tr></table></figure></p>
]]></content>
    <summary type="html">
    <![CDATA[<h1 id="CSBluetoothDemo">CSBluetoothDemo</h1><p>Github: <a href="https://github.com/lecason/CSBluetoothDemo" target="_blank" rel="external">]]>
    </summary>
    
      <category term="Swift" scheme="http://lecason.com/tags/Swift/"/>
    
      <category term="Swift" scheme="http://lecason.com/categories/Swift/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Swift 封装一个轮播图]]></title>
    <link href="http://lecason.com/2016/06/27/slides-show/"/>
    <id>http://lecason.com/2016/06/27/slides-show/</id>
    <published>2016-06-27T09:33:18.000Z</published>
    <updated>2016-06-27T10:10:13.000Z</updated>
    <content type="html"><![CDATA[<p>以前用ScrollView封装的时候，发现快速滑动的时候，到最左图的时候，会无限滚动不了，要停一下才能加载下一张图，所以就打算用CollectionView来封装。</p>
<h2 id="封装代码">封装代码</h2><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="type">UIKit</span></span><br><span class="line"><span class="keyword">import</span> <span class="type">Kingfisher</span></span><br><span class="line"></span><br><span class="line"><span class="preprocessor">@objc</span> <span class="class"><span class="keyword">protocol</span> <span class="title">CSSlidesShowDelegate</span> </span>&#123;</span><br><span class="line">    optional <span class="func"><span class="keyword">func</span> <span class="title">clickSlidesAt</span><span class="params">(index: Int)</span></span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">CSSlidesShow</span>: <span class="title">UIView</span> </span>&#123;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">var</span> collectionView: <span class="type">UICollectionView</span>!</span><br><span class="line">    <span class="keyword">var</span> pageControl: <span class="type">UIPageControl</span>!</span><br><span class="line">    <span class="keyword">var</span> identifiter = <span class="string">"collectionViewReuseIdentifiter"</span></span><br><span class="line">    <span class="keyword">var</span> images = [<span class="type">String</span>]()</span><br><span class="line">    <span class="keyword">var</span> sections = <span class="number">10</span> <span class="comment">// 最小值为3</span></span><br><span class="line">    <span class="keyword">var</span> timer: <span class="type">NSTimer</span>!</span><br><span class="line">    <span class="keyword">var</span> currentIndexPath: <span class="type">NSIndexPath</span>!</span><br><span class="line">    <span class="comment">/// 自滑动间隙</span></span><br><span class="line">    <span class="keyword">var</span> intervalTime: <span class="type">NSTimeInterval</span> = <span class="number">3</span> &#123; </span><br><span class="line">    </span><br><span class="line">    <span class="comment">// BUG 【真机 iOS 8.4.1】如果是intervalTime = 1的时候，把slides加载到vc2 [vc1] -&gt; [vc2] 然后从vc1 Push vc2 马上再pop回到vc1，会出现崩溃问题，猜想是正在scrollToItemAtIndexPath的时候，collectionView为nil了。</span></span><br><span class="line">        <span class="keyword">didSet</span> &#123;</span><br><span class="line">            timer?.invalidate()</span><br><span class="line">            timer = <span class="type">NSTimer</span>.scheduledTimerWithTimeInterval(intervalTime, target: <span class="keyword">self</span>, selector: #selector(nextPage), userInfo: <span class="literal">nil</span>, repeats: <span class="literal">true</span>)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">weak</span> <span class="keyword">var</span> delegate: <span class="type">CSSlidesShowDelegate</span>?</span><br><span class="line">    </span><br><span class="line">    private <span class="keyword">override</span> <span class="keyword">init</span>(frame: <span class="type">CGRect</span>) &#123;</span><br><span class="line">        <span class="keyword">super</span>.<span class="keyword">init</span>(frame: frame)</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">deinit</span> &#123;</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">"deinit slides"</span>)</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 当CSSlidesShow不显示的时候，停止滚动，例如所在的ViewController Push到另一个页面</span></span><br><span class="line">    <span class="keyword">override</span> <span class="func"><span class="keyword">func</span> <span class="title">willMoveToWindow</span><span class="params">(newWindow: UIWindow?)</span></span> &#123;</span><br><span class="line">        <span class="keyword">super</span>.willMoveToWindow(newWindow)</span><br><span class="line">        <span class="keyword">if</span> newWindow == <span class="literal">nil</span> &#123;</span><br><span class="line">            <span class="keyword">self</span>.timer?.invalidate()</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">self</span>.setupTimer()</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    convenience <span class="keyword">init</span>(frame: <span class="type">CGRect</span>, images: [<span class="type">String</span>]) &#123;</span><br><span class="line">        <span class="keyword">self</span>.<span class="keyword">init</span>(frame: frame)</span><br><span class="line">        <span class="keyword">self</span>.images = images</span><br><span class="line">        <span class="keyword">self</span>.setupCollectionView()</span><br><span class="line">        <span class="keyword">self</span>.setupPageControl()</span><br><span class="line">        <span class="keyword">self</span>.setupTimer()</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    required <span class="keyword">init</span>?(coder aDecoder: <span class="type">NSCoder</span>) &#123;</span><br><span class="line">        <span class="keyword">super</span>.<span class="keyword">init</span>(coder: aDecoder)</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="func"><span class="keyword">func</span> <span class="title">setupCollectionView</span><span class="params">()</span></span> &#123;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">let</span> flowLayout = <span class="type">UICollectionViewFlowLayout</span>()</span><br><span class="line">        flowLayout.itemSize = frame.size</span><br><span class="line">        flowLayout.scrollDirection = <span class="type">UICollectionViewScrollDirection</span>.<span class="type">Horizontal</span></span><br><span class="line">        collectionView = <span class="type">UICollectionView</span>(frame: frame, collectionViewLayout: flowLayout)</span><br><span class="line">        collectionView.backgroundColor = <span class="type">UIColor</span>.whiteColor()</span><br><span class="line">        collectionView.delegate = <span class="keyword">self</span></span><br><span class="line">        collectionView.dataSource = <span class="keyword">self</span></span><br><span class="line">        collectionView.pagingEnabled = <span class="literal">true</span></span><br><span class="line">        collectionView.showsHorizontalScrollIndicator = <span class="literal">false</span></span><br><span class="line">        </span><br><span class="line">        <span class="keyword">let</span> indexPath = <span class="type">NSIndexPath</span>(forRow: <span class="number">0</span>, inSection: sections/<span class="number">2</span>)</span><br><span class="line">        collectionView.scrollToItemAtIndexPath(indexPath, atScrollPosition: <span class="type">UICollectionViewScrollPosition</span>.<span class="type">None</span>, animated: <span class="literal">false</span> )</span><br><span class="line">        currentIndexPath = indexPath</span><br><span class="line">        </span><br><span class="line">        collectionView.registerClass(<span class="type">CSSlidesCollectionViewCell</span>.<span class="keyword">self</span>, forCellWithReuseIdentifier: identifiter)</span><br><span class="line">        <span class="keyword">self</span>.addSubview(collectionView)</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="func"><span class="keyword">func</span> <span class="title">setupPageControl</span><span class="params">()</span></span> &#123;</span><br><span class="line">        </span><br><span class="line">        pageControl = <span class="type">UIPageControl</span>(frame: <span class="type">CGRect</span>(x: <span class="number">0</span>, y: frame.size.height-<span class="number">20</span>, width: <span class="type">UIScreen</span>.mainScreen().bounds.width, height: <span class="number">20</span>))</span><br><span class="line">        pageControl.numberOfPages = images.<span class="built_in">count</span></span><br><span class="line">        <span class="keyword">self</span>.addSubview(pageControl)</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="func"><span class="keyword">func</span> <span class="title">setupTimer</span><span class="params">()</span></span> &#123;</span><br><span class="line">        <span class="keyword">self</span>.timer?.invalidate()</span><br><span class="line">        timer = <span class="type">NSTimer</span>.scheduledTimerWithTimeInterval(intervalTime, target: <span class="keyword">self</span>, selector: #selector(<span class="type">CSSlidesShow</span>.nextPage), userInfo: <span class="literal">nil</span>, repeats: <span class="literal">true</span>)</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="func"><span class="keyword">func</span> <span class="title">nextPage</span><span class="params">()</span></span> &#123;</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">"currentIndexPath: <span class="subst">\(currentIndexPath)</span>"</span>)</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 滚动下一页</span></span><br><span class="line">        <span class="keyword">switch</span> (currentIndexPath.row+<span class="number">1</span>, currentIndexPath.section+<span class="number">1</span>)  &#123;</span><br><span class="line">        <span class="keyword">case</span> (<span class="number">0</span>..&lt;images.<span class="built_in">count</span>, <span class="number">0</span>...sections):</span><br><span class="line">            <span class="keyword">let</span> indexPath = <span class="type">NSIndexPath</span>(forRow: currentIndexPath.row+<span class="number">1</span>, inSection: currentIndexPath.section)</span><br><span class="line">            collectionView.scrollToItemAtIndexPath(indexPath, atScrollPosition: .<span class="type">None</span>, animated: <span class="literal">true</span>)</span><br><span class="line">        <span class="keyword">case</span> (images.<span class="built_in">count</span>, <span class="number">0</span>...sections):</span><br><span class="line">            <span class="keyword">let</span> indexPath = <span class="type">NSIndexPath</span>(forRow: <span class="number">0</span>, inSection: currentIndexPath.section+<span class="number">1</span>)</span><br><span class="line">            collectionView.scrollToItemAtIndexPath(indexPath, atScrollPosition: .<span class="type">None</span>, animated: <span class="literal">true</span>)</span><br><span class="line">        <span class="keyword">default</span>:</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">extension</span> <span class="title">CSSlidesShow</span>: <span class="title">UICollectionViewDataSource</span> </span>&#123;</span><br><span class="line">    </span><br><span class="line">    <span class="func"><span class="keyword">func</span> <span class="title">collectionView</span><span class="params">(collectionView: UICollectionView, layout collectionViewLayout: UICollectionViewLayout, sizeForItemAtIndexPath indexPath: NSIndexPath)</span></span> -&gt; <span class="type">CGSize</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">self</span>.bounds.size</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="func"><span class="keyword">func</span> <span class="title">numberOfSectionsInCollectionView</span><span class="params">(collectionView: UICollectionView)</span></span> -&gt; <span class="type">Int</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> sections</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="func"><span class="keyword">func</span> <span class="title">collectionView</span><span class="params">(collectionView: UICollectionView, numberOfItemsInSection section: Int)</span></span> -&gt; <span class="type">Int</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> images.<span class="built_in">count</span></span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="func"><span class="keyword">func</span> <span class="title">collectionView</span><span class="params">(collectionView: UICollectionView, cellForItemAtIndexPath indexPath: NSIndexPath)</span></span> -&gt; <span class="type">UICollectionViewCell</span> &#123;</span><br><span class="line">        <span class="keyword">let</span> cell = collectionView.dequeueReusableCellWithReuseIdentifier(identifiter, forIndexPath: indexPath) <span class="keyword">as</span>! <span class="type">CSSlidesCollectionViewCell</span></span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 如果图片是网址就用Kingfisher载入</span></span><br><span class="line">        <span class="keyword">if</span> images[indexPath.row].hasPrefix(<span class="string">"http://"</span>) || images[indexPath.row].hasPrefix(<span class="string">"https://"</span>) &#123;</span><br><span class="line">            <span class="keyword">if</span> <span class="keyword">let</span> url = <span class="type">NSURL</span>(string: images[indexPath.row]) &#123;</span><br><span class="line">                cell.slidesImageView.kf_setImageWithURL(url)</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">            <span class="comment">// 否则就直接加载</span></span><br><span class="line">        <span class="keyword">else</span> &#123;</span><br><span class="line">            cell.slidesImageView.image = <span class="type">UIImage</span>(named: images[indexPath.row])</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">return</span> cell</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="func"><span class="keyword">func</span> <span class="title">collectionView</span><span class="params">(collectionView: UICollectionView, willDisplayCell cell: UICollectionViewCell, forItemAtIndexPath indexPath: NSIndexPath)</span></span> &#123;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 将显示最前和最后一张图片的时候，跳转回最中间位置</span></span><br><span class="line">        <span class="keyword">if</span> indexPath.row == <span class="number">0</span> &amp;&amp; indexPath.section == <span class="number">0</span> &#123;</span><br><span class="line">            <span class="keyword">let</span> indexPath = <span class="type">NSIndexPath</span>(forRow: <span class="number">1</span>, inSection: sections/<span class="number">2</span>)</span><br><span class="line">            collectionView.scrollToItemAtIndexPath(indexPath, atScrollPosition: <span class="type">UICollectionViewScrollPosition</span>.<span class="type">None</span>, animated: <span class="literal">false</span>)</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> indexPath.row == <span class="number">1</span> &amp;&amp; indexPath.section == sections-<span class="number">1</span> &#123;</span><br><span class="line">            <span class="keyword">let</span> indexPath = <span class="type">NSIndexPath</span>(forRow: <span class="number">0</span>, inSection: sections/<span class="number">2</span>)</span><br><span class="line">            collectionView.scrollToItemAtIndexPath(indexPath, atScrollPosition: <span class="type">UICollectionViewScrollPosition</span>.<span class="type">None</span>, animated: <span class="literal">false</span>)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">extension</span> <span class="title">CSSlidesShow</span>: <span class="title">UICollectionViewDelegateFlowLayout</span> </span>&#123;</span><br><span class="line">    <span class="func"><span class="keyword">func</span> <span class="title">collectionView</span><span class="params">(collectionView: UICollectionView, layout collectionViewLayout: UICollectionViewLayout, insetForSectionAtIndex section: Int)</span></span> -&gt; <span class="type">UIEdgeInsets</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="type">UIEdgeInsetsZero</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="func"><span class="keyword">func</span> <span class="title">collectionView</span><span class="params">(collectionView: UICollectionView, layout collectionViewLayout: UICollectionViewLayout, minimumLineSpacingForSectionAtIndex section: Int)</span></span> -&gt; <span class="type">CGFloat</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">extension</span> <span class="title">CSSlidesShow</span>: <span class="title">UICollectionViewDelegate</span> </span>&#123;</span><br><span class="line">    <span class="func"><span class="keyword">func</span> <span class="title">collectionView</span><span class="params">(collectionView: UICollectionView, didSelectItemAtIndexPath indexPath: NSIndexPath)</span></span> &#123;</span><br><span class="line">        <span class="keyword">self</span>.delegate?.clickSlidesAt?(indexPath.row)</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">extension</span> <span class="title">CSSlidesShow</span>: <span class="title">UIScrollViewDelegate</span> </span>&#123;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 手动滚动停止</span></span><br><span class="line">    <span class="func"><span class="keyword">func</span> <span class="title">scrollViewDidEndDecelerating</span><span class="params">(scrollView: UIScrollView)</span></span> &#123;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 滚动停止的时候确定Page Control 位置</span></span><br><span class="line">        dispatch_async(dispatch_get_main_queue()) &#123; </span><br><span class="line">            <span class="keyword">if</span> <span class="keyword">let</span> visibleCell = <span class="keyword">self</span>.collectionView.visibleCells().first &#123;</span><br><span class="line">                <span class="keyword">if</span> <span class="keyword">let</span> indexPath = <span class="keyword">self</span>.collectionView.indexPathForCell(visibleCell) &#123;</span><br><span class="line">                    <span class="keyword">self</span>.pageControl.currentPage = indexPath.row</span><br><span class="line">                    <span class="keyword">self</span>.currentIndexPath = indexPath</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 开始自滑动</span></span><br><span class="line">        <span class="keyword">self</span>.setupTimer()</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 代码滚动停止</span></span><br><span class="line">    <span class="func"><span class="keyword">func</span> <span class="title">scrollViewDidEndScrollingAnimation</span><span class="params">(scrollView: UIScrollView)</span></span> &#123;</span><br><span class="line">        <span class="comment">// 滚动停止的时候确定Page Control 位置</span></span><br><span class="line">        dispatch_async(dispatch_get_main_queue()) &#123;</span><br><span class="line">            <span class="keyword">if</span> <span class="keyword">let</span> visibleCell = <span class="keyword">self</span>.collectionView.visibleCells().first &#123;</span><br><span class="line">                <span class="keyword">if</span> <span class="keyword">let</span> indexPath = <span class="keyword">self</span>.collectionView.indexPathForCell(visibleCell) &#123;</span><br><span class="line">                    <span class="keyword">self</span>.pageControl.currentPage = indexPath.row</span><br><span class="line">                    <span class="keyword">self</span>.currentIndexPath = indexPath</span><br><span class="line">                    <span class="keyword">if</span> indexPath.row == <span class="number">0</span> &amp;&amp; indexPath.section == <span class="keyword">self</span>.sections-<span class="number">1</span> &#123;</span><br><span class="line">                        <span class="comment">// 如果滚动到最后一行，跳回到最中间，并马上执行一次翻页，这样子看起来就不会停顿</span></span><br><span class="line">                        <span class="keyword">self</span>.timer.fire()</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 拖动的时候停止自滑动</span></span><br><span class="line">    <span class="func"><span class="keyword">func</span> <span class="title">scrollViewWillBeginDragging</span><span class="params">(scrollView: UIScrollView)</span></span> &#123;</span><br><span class="line">        timer.invalidate()</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="使用方法">使用方法</h2><blockquote>
<p>如果images里面哪项网址的话，会从Kingfisher上加载，如果不是的话，会从Assets.xcassets上加载。</p>
</blockquote>
<figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ViewController</span>: <span class="title">UIViewController</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> slides: <span class="type">CSSlidesShow</span>!</span><br><span class="line"></span><br><span class="line">    <span class="keyword">override</span> <span class="func"><span class="keyword">func</span> <span class="title">viewDidLoad</span><span class="params">()</span></span> &#123;</span><br><span class="line">        <span class="keyword">super</span>.viewDidLoad()</span><br><span class="line"></span><br><span class="line">        <span class="keyword">self</span>.automaticallyAdjustsScrollViewInsets = <span class="literal">false</span></span><br><span class="line">        slides = <span class="type">CSSlidesShow</span>(frame: <span class="type">CGRect</span>(x: <span class="number">0</span>, y: <span class="number">0</span>, width: <span class="type">UIScreen</span>.mainScreen().bounds.width, height: <span class="number">300</span>), </span><br><span class="line">        images: [<span class="string">"1"</span>, <span class="string">"2"</span>, <span class="string">"https://ss0.bdstatic.com/5aV1bjqh_Q23odCf/static/superman/img/logo/bd_logo1_31bdc765.png"</span>])</span><br><span class="line">        slides.delegate = <span class="keyword">self</span></span><br><span class="line">        <span class="keyword">self</span>.view.addSubview(slides)</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">extension</span> <span class="title">ViewController</span>: <span class="title">CSSlidesShowDelegate</span> </span>&#123;</span><br><span class="line">    <span class="func"><span class="keyword">func</span> <span class="title">clickSlidesAt</span><span class="params">(index: Int)</span></span> &#123;</span><br><span class="line">        <span class="built_in">print</span>(index)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="CSSlidesCollectionViewCell">CSSlidesCollectionViewCell</h2><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="type">UIKit</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">CSSlidesCollectionViewCell</span>: <span class="title">UICollectionViewCell</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> slidesImageView: <span class="type">UIImageView</span>!</span><br><span class="line"></span><br><span class="line">    <span class="keyword">override</span> <span class="keyword">init</span>(frame: <span class="type">CGRect</span>) &#123;</span><br><span class="line">        <span class="keyword">super</span>.<span class="keyword">init</span>(frame: frame)</span><br><span class="line">        slidesImageView = <span class="type">UIImageView</span>(frame: <span class="keyword">self</span>.bounds)</span><br><span class="line">        <span class="keyword">self</span>.addSubview(slidesImageView!)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">override</span> <span class="func"><span class="keyword">func</span> <span class="title">prepareForReuse</span><span class="params">()</span></span> &#123;</span><br><span class="line">        slidesImageView.image = <span class="literal">nil</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    required <span class="keyword">init</span>?(coder aDecoder: <span class="type">NSCoder</span>) &#123;</span><br><span class="line">        fatalError(<span class="string">"init(coder:) has not been implemented"</span>)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
    <summary type="html">
    <![CDATA[<p>以前用ScrollView封装的时候，发现快速滑动的时候，到最左图的时候，会无限滚动不了，要停一下才能加载下一张图，所以就打算用CollectionView来封装。</p>
<h2 id="封装代码">封装代码</h2><figure class="highlight sw]]>
    </summary>
    
      <category term="Swift" scheme="http://lecason.com/tags/Swift/"/>
    
      <category term="Swift" scheme="http://lecason.com/categories/Swift/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Swift 协议式封装网络请求]]></title>
    <link href="http://lecason.com/2016/06/23/swift-protocol-network-request/"/>
    <id>http://lecason.com/2016/06/23/swift-protocol-network-request/</id>
    <published>2016-06-23T08:08:19.000Z</published>
    <updated>2016-06-23T09:24:27.000Z</updated>
    <content type="html"><![CDATA[<h2 id="定义网络协议">定义网络协议</h2><p>我们将通过定义一个网络协议，用来确定网络请求的基础URL，完整URL，请求的方法，以及请求的参数。</p>
<figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">protocol</span> <span class="title">NetworkTargetType</span> </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> baseURL: <span class="type">String</span> &#123; <span class="keyword">get</span> &#125;</span><br><span class="line">    <span class="keyword">var</span> url: <span class="type">String</span> &#123; <span class="keyword">get</span> &#125;</span><br><span class="line">    <span class="keyword">var</span> method: <span class="type">Alamofire</span>.<span class="type">Method</span> &#123; <span class="keyword">get</span> &#125;</span><br><span class="line">    <span class="keyword">var</span> parameters: [<span class="type">String</span>: <span class="type">AnyObject</span>]? &#123; <span class="keyword">get</span> &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>我们通过扩展这个协议，来实现默认值，以后添加的API都在这里面配置。</p>
<blockquote>
<p>可以从这里添加更多的变量，来实现是否打印请求，结果，等扩展更多功能。</p>
</blockquote>
<figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">extension</span> <span class="title">NetworkAPI</span>: <span class="title">NetworkTargetType</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/// API地址</span></span><br><span class="line">    <span class="keyword">var</span> baseURL: <span class="type">String</span> &#123; <span class="keyword">return</span> <span class="string">"http://api.weibo.com/"</span> &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/// 拼接请求字符串</span></span><br><span class="line">    <span class="keyword">var</span> url: <span class="type">String</span> &#123;</span><br><span class="line">        <span class="keyword">switch</span> <span class="keyword">self</span> &#123;</span><br><span class="line">            <span class="keyword">case</span> .<span class="type">GetAds</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="string">"<span class="subst">\(baseURL)</span>getads"</span></span><br><span class="line">            <span class="keyword">case</span> .<span class="type">GetCategories</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="string">"<span class="subst">\(baseURL)</span>getcategories"</span></span><br><span class="line">            <span class="keyword">case</span> .<span class="type">GetNews</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="string">"<span class="subst">\(baseURL)</span>getnews"</span></span><br><span class="line">            <span class="keyword">case</span> .<span class="type">GetWeibos</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="string">"https://api.weibo.com/2/statuses/public_timeline.json"</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/// 请求方法</span></span><br><span class="line">    <span class="keyword">var</span> method: <span class="type">Alamofire</span>.<span class="type">Method</span> &#123;</span><br><span class="line">    <span class="keyword">switch</span> <span class="keyword">self</span> &#123;</span><br><span class="line">        <span class="keyword">case</span> .<span class="type">GetWeibos</span>:</span><br><span class="line">        <span class="keyword">return</span> .<span class="type">GET</span></span><br><span class="line">        <span class="keyword">default</span>:</span><br><span class="line">        <span class="keyword">return</span> .<span class="type">POST</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/// 配置参数</span></span><br><span class="line">    <span class="keyword">var</span> parameters: [<span class="type">String</span>: <span class="type">AnyObject</span>]? &#123;</span><br><span class="line">        <span class="keyword">switch</span> <span class="keyword">self</span> &#123;</span><br><span class="line">            <span class="keyword">case</span> .<span class="type">GetAds</span>(<span class="keyword">let</span> type):</span><br><span class="line">                <span class="keyword">return</span> [<span class="string">"type"</span>: <span class="type">String</span>(type)]</span><br><span class="line">            <span class="keyword">case</span> .<span class="type">GetCategories</span>(<span class="keyword">let</span> userid):</span><br><span class="line">                <span class="keyword">return</span> [<span class="string">"userid"</span>: <span class="type">String</span>(userid)]</span><br><span class="line">            <span class="keyword">case</span> .<span class="type">GetNews</span>(<span class="keyword">let</span> pagenum, <span class="keyword">let</span> pagesize):</span><br><span class="line">                <span class="keyword">return</span> [<span class="string">"pagenum"</span>: <span class="type">String</span>(pagenum), <span class="string">"pagesize"</span>: <span class="type">String</span>(pagesize)]</span><br><span class="line">            <span class="keyword">case</span> .<span class="type">GetWeibos</span>(<span class="keyword">let</span> accessToken):</span><br><span class="line">                <span class="keyword">return</span> [</span><br><span class="line">                    <span class="string">"access_token"</span>: accessToken</span><br><span class="line">                ]</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/// 是否打印请求</span></span><br><span class="line">    <span class="keyword">var</span> isPrintRequest: <span class="type">Bool</span> &#123;</span><br><span class="line">        <span class="keyword">switch</span> <span class="keyword">self</span> &#123;</span><br><span class="line">            <span class="keyword">default</span>:</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">true</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/// 是否打印结果</span></span><br><span class="line">    <span class="keyword">var</span> isPrintResponse: <span class="type">Bool</span> &#123;</span><br><span class="line">        <span class="keyword">switch</span> <span class="keyword">self</span> &#123;</span><br><span class="line">        <span class="keyword">default</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>能过Enum来定义API，以及一个Message来确定失败和成功的提示</p>
<figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">enum</span> <span class="title">NetworkAPI</span> </span>&#123;</span><br><span class="line">    <span class="keyword">case</span> <span class="type">GetAds</span>(type: <span class="type">Int</span>)</span><br><span class="line">    <span class="keyword">case</span> <span class="type">GetCategories</span>(userid: <span class="type">Int</span>)</span><br><span class="line">    <span class="comment">/// 获取新闻 pagenum 起始页 pagesize 每页大小</span></span><br><span class="line">    <span class="keyword">case</span> <span class="type">GetNews</span>(pagenum: <span class="type">Int</span>, pagesize: <span class="type">Int</span>)</span><br><span class="line">    <span class="keyword">case</span> <span class="type">GetWeibos</span>(accessToke: <span class="type">String</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">enum</span> <span class="title">CSMessage</span> </span>&#123;</span><br><span class="line">    <span class="keyword">case</span> <span class="type">Success</span>(<span class="type">String</span>)</span><br><span class="line">    <span class="keyword">case</span> <span class="type">Fail</span>(<span class="type">String</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="添加UIViewController可请求式协议">添加UIViewController可请求式协议</h2><p>通过ObjectMapper, Alamofire， 来实现请求到数据封装成Model,看需求也可以通过SwiftyJSON封装成只取出想要的值。</p>
<figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">protocol</span> <span class="title">Requestable</span>: <span class="title">class</span> </span>&#123;</span><br><span class="line">    <span class="func"><span class="keyword">func</span> <span class="title">setupNetworkComponentWith</span><span class="generics">&lt;T: Mappable&gt;</span><span class="params">(api: NetworkAPI, mapType: T.<span class="keyword">Type</span>, mappedObjectHandle: <span class="params">(<span class="params">(object: T)</span></span></span></span> -&gt; ())?, moreInfo: ((message: <span class="type">CSMessage</span>)-&gt;())?) -&gt; <span class="type">Request</span></span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>
<p>可以按项目需要来配置参数</p>
<figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">extension</span> <span class="title">Requestable</span> <span class="title">where</span> <span class="title">Self</span>: <span class="title">UIViewController</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">/// NetworkComponent 初使化设置 [必需]</span></span><br><span class="line"><span class="func"><span class="keyword">func</span> <span class="title">setupNetworkComponentWith</span><span class="generics">&lt;T: Mappable&gt;</span><span class="params">(api: NetworkAPI, mapType: T.<span class="keyword">Type</span>, mappedObjectHandle: <span class="params">(<span class="params">(object: T)</span></span></span></span> -&gt; ())?, moreInfo: ((message: <span class="type">CSMessage</span>)-&gt;())?) -&gt; <span class="type">Request</span> &#123;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 开始请求地址</span></span><br><span class="line">        <span class="keyword">let</span> request = <span class="type">Alamofire</span>.request(api.method, api.url, parameters: api.parameters).responseJSON &#123; (response) <span class="keyword">in</span></span><br><span class="line">            <span class="keyword">switch</span> response.result &#123;</span><br><span class="line">                <span class="keyword">case</span> .<span class="type">Success</span>(<span class="keyword">let</span> value):</span><br><span class="line"></span><br><span class="line">                <span class="keyword">let</span> responseJSON = <span class="type">JSON</span>(value)</span><br><span class="line">                <span class="keyword">if</span> api.isPrintResponse &#123; responseJSON.debugPringJSON() &#125;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">if</span> <span class="keyword">let</span> mapObject = <span class="type">Mapper</span>&lt;<span class="type">T</span>&gt;().<span class="built_in">map</span>(value) &#123;</span><br><span class="line">                    mappedObjectHandle?(object: mapObject)</span><br><span class="line">                    moreInfo?(message: <span class="type">CSMessage</span>.<span class="type">Success</span>(<span class="string">"mapped object success"</span>))</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    moreInfo?(message: <span class="type">CSMessage</span>.<span class="type">Fail</span>(<span class="string">"unable to mapped object"</span>))</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">case</span> .<span class="type">Failure</span>(<span class="keyword">let</span> error):</span><br><span class="line">                    <span class="built_in">print</span>(error.localizedDescription)</span><br><span class="line">                &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 打印请求</span></span><br><span class="line">        <span class="keyword">if</span> api.isPrintRequest &#123; request.debugPringRequest() &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 返回请求</span></span><br><span class="line">        <span class="keyword">return</span> request</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>下面的方法是用来打印参数和结果的，为了方便Debug</p>
<figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">extension</span> <span class="title">JSON</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/// 打印JSON结果</span></span><br><span class="line">    <span class="func"><span class="keyword">func</span> <span class="title">debugPringJSON</span><span class="params">()</span></span> &#123;</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">"-----------------------------------------------------------------------"</span>)</span><br><span class="line">        <span class="built_in">print</span>(<span class="keyword">self</span>)</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">"-----------------------------------------------------------------------"</span>)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">extension</span> <span class="title">Request</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/// 打印Request参数</span></span><br><span class="line">    <span class="func"><span class="keyword">func</span> <span class="title">debugPringRequest</span><span class="params">()</span></span> &#123;</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">"-----------------------------------------------------------------------"</span>)</span><br><span class="line">        guard <span class="keyword">let</span> httpBodyData = <span class="keyword">self</span>.request?.<span class="type">HTTPBody</span> <span class="keyword">else</span> &#123; <span class="built_in">print</span>(<span class="string">"请求：<span class="subst">\( <span class="keyword">self</span>)</span>"</span>); <span class="keyword">return</span> &#125;</span><br><span class="line">        guard <span class="keyword">let</span> parameterString = <span class="type">String</span>(data: httpBodyData, encoding:<span class="type">NSUTF8StringEncoding</span>) <span class="keyword">else</span> &#123; <span class="built_in">print</span>(<span class="string">"请求：<span class="subst">\(<span class="keyword">self</span>)</span>"</span>); <span class="keyword">return</span> &#125;</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">"请求：<span class="subst">\(<span class="keyword">self</span>)</span>"</span>)</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">"参数：<span class="subst">\(parameterString)</span>"</span>)</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">"-----------------------------------------------------------------------"</span>)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/// 得到Request参数</span></span><br><span class="line">    <span class="func"><span class="keyword">func</span> <span class="title">getUniqueRequestString</span><span class="params">()</span></span> -&gt; <span class="type">String</span>? &#123;</span><br><span class="line">        guard <span class="keyword">let</span> urlString = <span class="keyword">self</span>.request?.<span class="type">URLString</span> <span class="keyword">else</span> &#123; <span class="keyword">return</span> <span class="literal">nil</span> &#125;</span><br><span class="line">        guard <span class="keyword">let</span> httpBodyData = <span class="keyword">self</span>.request?.<span class="type">HTTPBody</span> <span class="keyword">else</span> &#123; <span class="keyword">return</span> urlString &#125;</span><br><span class="line">        guard <span class="keyword">let</span> parameterString = <span class="type">String</span>(data: httpBodyData, encoding:<span class="type">NSUTF8StringEncoding</span>) <span class="keyword">else</span> &#123; <span class="keyword">return</span> urlString &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"<span class="subst">\(urlString)</span>?<span class="subst">\(parameterString)</span>"</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="使用方法">使用方法</h2><blockquote>
<p>WeiboResponse 模型可以查看ObjectMapper的用法， mapType是Alamofire请求成功后要封装成的模型，模式必需要遵从ObjectMapper的Mappable协议。mappedObjectHandle是得到模型，moreInfo是更多信息。</p>
<p>self.setupNetworkComponentWith…设置完就会开始请求网络接口。</p>
</blockquote>
<figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="type">UIKit</span></span><br><span class="line"><span class="keyword">import</span> <span class="type">Alamofire</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ViewController</span>: <span class="title">UIViewController</span>, <span class="title">Requestable</span> </span>&#123; <span class="comment">// [1] 遵从协议</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">override</span> <span class="func"><span class="keyword">func</span> <span class="title">viewDidLoad</span><span class="params">()</span></span> &#123;</span><br><span class="line">    <span class="keyword">super</span>.viewDidLoad()</span><br><span class="line"></span><br><span class="line">        <span class="comment">// [2] 配置参数</span></span><br><span class="line">        <span class="keyword">self</span>.setupNetworkComponentWith(<span class="type">NetworkAPI</span>.<span class="type">GetWeibos</span>(accessToke: <span class="string">"2.00E7lO_Gz3nuNE20518953d1TBPE_C"</span>), mapType: <span class="type">WeiboResponse</span>.<span class="keyword">self</span>, mappedObjectHandle: &#123; (object) -&gt; () <span class="keyword">in</span></span><br><span class="line">        <span class="comment">// 得到WeiboResponse模型</span></span><br><span class="line">        &#125;, moreInfo: <span class="literal">nil</span>)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>moreInfo可以打印更多信息</p>
<figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">moreInfo: &#123; (message) <span class="keyword">in</span></span><br><span class="line">    <span class="keyword">switch</span> message &#123;</span><br><span class="line">        <span class="keyword">case</span> .<span class="type">Success</span>(<span class="keyword">let</span> successText):</span><br><span class="line">        <span class="built_in">print</span>(successText)</span><br><span class="line">        <span class="keyword">case</span> .<span class="type">Fail</span>(<span class="keyword">let</span> failText):</span><br><span class="line">        <span class="built_in">print</span>(failText)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="结果">结果</h2><p><img src="/img/requestable1.png" alt=""></p>
<h2 id="管理不同请求">管理不同请求</h2><p>设置的时候会返回不同的Alamofire的Request对象，可以查看Alamofre来看具体用法。</p>
<figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 微博请求</span></span><br><span class="line"><span class="keyword">let</span> weiboRequest = <span class="keyword">self</span>.setupNetworkComponentWith(<span class="type">NetworkAPI</span>.<span class="type">GetWeibos</span>(accessToke: <span class="string">"2.00E7lO_Gz3nuNE20518953d1TBPE_C"</span>), mapType: <span class="type">WeiboResponse</span>.<span class="keyword">self</span>, mappedObjectHandle: <span class="literal">nil</span>, moreInfo: <span class="literal">nil</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 新闻请求</span></span><br><span class="line"><span class="keyword">let</span> newsRequest = <span class="keyword">self</span>.setupNetworkComponentWith(<span class="type">NetworkAPI</span>.<span class="type">GetNews</span>(pagenum: <span class="number">0</span>, pagesize: <span class="number">5</span>), mapType: <span class="type">NewsResponse</span>.<span class="keyword">self</span>, mappedObjectHandle: <span class="literal">nil</span>, moreInfo: <span class="literal">nil</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 取消微博请求</span></span><br><span class="line">weiboRequest.cancel()</span><br></pre></td></tr></table></figure>
<p>使用的时候有补全功能<br><img src="/img/requestable2.png" alt=""></p>
]]></content>
    <summary type="html">
    <![CDATA[<h2 id="定义网络协议">定义网络协议</h2><p>我们将通过定义一个网络协议，用来确定网络请求的基础URL，完整URL，请求的方法，以及请求的参数。</p>
<figure class="highlight swift"><table><tr><td class="gu]]>
    </summary>
    
      <category term="Swift" scheme="http://lecason.com/tags/Swift/"/>
    
      <category term="Swift" scheme="http://lecason.com/categories/Swift/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Swift 协议式封装分享控件]]></title>
    <link href="http://lecason.com/2016/06/22/swift-protocol-share-view/"/>
    <id>http://lecason.com/2016/06/22/swift-protocol-share-view/</id>
    <published>2016-06-22T03:09:05.000Z</published>
    <updated>2016-06-22T08:41:22.000Z</updated>
    <content type="html"><![CDATA[<h2 id="首先通过CollectionView自定义一个分享的控件">首先通过CollectionView自定义一个分享的控件</h2><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="type">UIKit</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">protocol</span> <span class="title">CSShareViewDelegate</span>: <span class="title">class</span> </span>&#123;</span><br><span class="line">    <span class="func"><span class="keyword">func</span> <span class="title">clickShareViewAt</span><span class="params">(index: Int, type: CSShareType)</span></span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">CSShareView</span>: <span class="title">UIView</span> </span>&#123;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">var</span> height: <span class="type">CGFloat</span> = <span class="number">140</span></span><br><span class="line">    <span class="keyword">var</span> cancelButton: <span class="type">UIButton</span>!</span><br><span class="line">    <span class="keyword">var</span> collectionView: <span class="type">UICollectionView</span>!</span><br><span class="line">    <span class="keyword">var</span> shareModel: [<span class="type">CSShareModel</span>] = []</span><br><span class="line">    <span class="keyword">weak</span> <span class="keyword">var</span> delegate: <span class="type">CSShareViewDelegate</span>?</span><br><span class="line">    </span><br><span class="line">    private <span class="keyword">override</span> <span class="keyword">init</span>(frame: <span class="type">CGRect</span>) &#123;</span><br><span class="line">        <span class="keyword">super</span>.<span class="keyword">init</span>(frame: frame)</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    convenience <span class="keyword">init</span>(view: <span class="type">UIView</span>, shareModel: [<span class="type">CSShareModel</span>]) &#123;</span><br><span class="line">        <span class="keyword">self</span>.<span class="keyword">init</span>(frame: <span class="type">CGRect</span>(x: <span class="number">0</span>, y: <span class="type">UIScreen</span>.mainScreen().bounds.height, width: <span class="type">UIScreen</span>.mainScreen().bounds.width, height: <span class="number">140</span>))</span><br><span class="line">        <span class="keyword">self</span>.shareModel = shareModel</span><br><span class="line">        <span class="keyword">self</span>.backgroundColor = <span class="type">UIColor</span>.groupTableViewBackgroundColor()</span><br><span class="line">        cancelButton = <span class="type">UIButton</span>(frame: <span class="type">CGRect</span>(x: <span class="number">0</span>, y: <span class="number">100</span>, width: <span class="type">UIScreen</span>.mainScreen().bounds.width, height: <span class="number">40</span>))</span><br><span class="line">        cancelButton.setTitle(<span class="string">"取消"</span>, forState: .<span class="type">Normal</span>)</span><br><span class="line">        cancelButton.setTitleColor(<span class="type">UIColor</span>.darkGrayColor(), forState: <span class="type">UIControlState</span>.<span class="type">Normal</span>)</span><br><span class="line">        cancelButton.backgroundColor = <span class="type">UIColor</span>.whiteColor()</span><br><span class="line">        cancelButton.addTarget(<span class="keyword">self</span>, action: <span class="string">"dismissShareView"</span>, forControlEvents: <span class="type">UIControlEvents</span>.<span class="type">TouchUpInside</span>)</span><br><span class="line">        <span class="keyword">self</span>.addSubview(cancelButton)</span><br><span class="line">        <span class="keyword">self</span>.initCollectionView()</span><br><span class="line">        view.addSubview(<span class="keyword">self</span>)</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="func"><span class="keyword">func</span> <span class="title">initCollectionView</span><span class="params">()</span></span> &#123;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">let</span> flowLayout = <span class="type">UICollectionViewFlowLayout</span>()</span><br><span class="line">        flowLayout.itemSize = <span class="type">CGSizeMake</span>(<span class="number">70</span>, <span class="number">70</span>)</span><br><span class="line">        flowLayout.scrollDirection = <span class="type">UICollectionViewScrollDirection</span>.<span class="type">Horizontal</span></span><br><span class="line">        <span class="keyword">let</span> nib = <span class="type">UINib</span>(nibName: <span class="string">"SMShareCollectionViewCell"</span>, bundle: <span class="literal">nil</span>)</span><br><span class="line">        collectionView = <span class="type">UICollectionView</span>(frame: <span class="type">CGRect</span>(x: <span class="number">0</span>, y: <span class="number">0</span>, width: <span class="type">UIScreen</span>.mainScreen().bounds.width, height: <span class="number">100</span>), collectionViewLayout: flowLayout)</span><br><span class="line">        collectionView.backgroundColor = <span class="type">UIColor</span>.groupTableViewBackgroundColor()</span><br><span class="line">        collectionView.delegate = <span class="keyword">self</span></span><br><span class="line">        collectionView.dataSource = <span class="keyword">self</span></span><br><span class="line">        collectionView.showsHorizontalScrollIndicator = <span class="literal">false</span></span><br><span class="line">        collectionView.registerNib(nib, forCellWithReuseIdentifier: <span class="string">"SMShareCollectionViewCellIdentifier"</span>)</span><br><span class="line">        <span class="keyword">self</span>.addSubview(collectionView)</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    required <span class="keyword">init</span>?(coder aDecoder: <span class="type">NSCoder</span>) &#123;</span><br><span class="line">        fatalError(<span class="string">"init(coder:) has not been implemented"</span>)</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="func"><span class="keyword">func</span> <span class="title">dismissShareView</span><span class="params">()</span></span> &#123;</span><br><span class="line">        <span class="type">UIView</span>.animateWithDuration(<span class="number">0.25</span>, delay: <span class="number">0</span>, options: <span class="type">UIViewAnimationOptions</span>.<span class="type">CurveEaseInOut</span>, animations: &#123; [<span class="keyword">unowned</span> <span class="keyword">self</span>] () -&gt; <span class="type">Void</span> <span class="keyword">in</span></span><br><span class="line">            <span class="keyword">self</span>.frame.origin.y = <span class="type">UIScreen</span>.mainScreen().bounds.height</span><br><span class="line">            &#125;, completion: <span class="literal">nil</span> )</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="func"><span class="keyword">func</span> <span class="title">showShareView</span><span class="params">()</span></span> &#123;</span><br><span class="line">        <span class="type">UIView</span>.animateWithDuration(<span class="number">0.25</span>, delay: <span class="number">0</span>, options: <span class="type">UIViewAnimationOptions</span>.<span class="type">CurveEaseInOut</span>, animations: &#123; [<span class="keyword">unowned</span> <span class="keyword">self</span>] () -&gt; <span class="type">Void</span> <span class="keyword">in</span></span><br><span class="line">            <span class="keyword">self</span>.frame.origin.y = <span class="type">UIScreen</span>.mainScreen().bounds.height - <span class="keyword">self</span>.height</span><br><span class="line">            &#125;, completion: <span class="literal">nil</span> )</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">extension</span> <span class="title">CSShareView</span>: <span class="title">UICollectionViewDelegateFlowLayout</span> </span>&#123;</span><br><span class="line">    </span><br><span class="line">    <span class="func"><span class="keyword">func</span> <span class="title">collectionView</span><span class="params">(collectionView: UICollectionView, layout collectionViewLayout: UICollectionViewLayout, insetForSectionAtIndex section: Int)</span></span> -&gt; <span class="type">UIEdgeInsets</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="type">UIEdgeInsetsMake</span>(<span class="number">10</span>, <span class="number">5</span>, <span class="number">10</span>, <span class="number">5</span>)</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="func"><span class="keyword">func</span> <span class="title">collectionView</span><span class="params">(collectionView: UICollectionView, layout collectionViewLayout: UICollectionViewLayout, minimumLineSpacingForSectionAtIndex section: Int)</span></span> -&gt; <span class="type">CGFloat</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">15</span></span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">extension</span> <span class="title">CSShareView</span>: <span class="title">UICollectionViewDataSource</span> </span>&#123;</span><br><span class="line">    </span><br><span class="line">    <span class="func"><span class="keyword">func</span> <span class="title">collectionView</span><span class="params">(collectionView: UICollectionView, numberOfItemsInSection section: Int)</span></span> -&gt; <span class="type">Int</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> shareModel.<span class="built_in">count</span></span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="func"><span class="keyword">func</span> <span class="title">collectionView</span><span class="params">(collectionView: UICollectionView, cellForItemAtIndexPath indexPath: NSIndexPath)</span></span> -&gt; <span class="type">UICollectionViewCell</span> &#123;</span><br><span class="line">        <span class="keyword">let</span> cell = collectionView.dequeueReusableCellWithReuseIdentifier(<span class="string">"SMShareCollectionViewCellIdentifier"</span>, forIndexPath: indexPath) <span class="keyword">as</span>! <span class="type">SMShareCollectionViewCell</span></span><br><span class="line">        cell.iconImageView.image = <span class="type">UIImage</span>(named: shareModel[indexPath.row].icon.rawValue ?? <span class="string">""</span>)</span><br><span class="line">        cell.shareLabel.text = shareModel[indexPath.row].name.rawValue</span><br><span class="line">        <span class="keyword">return</span> cell</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">extension</span> <span class="title">CSShareView</span>: <span class="title">UICollectionViewDelegate</span> </span>&#123;</span><br><span class="line">    <span class="func"><span class="keyword">func</span> <span class="title">collectionView</span><span class="params">(collectionView: UICollectionView, didSelectItemAtIndexPath indexPath: NSIndexPath)</span></span> &#123;</span><br><span class="line">        collectionView.deselectItemAtIndexPath(indexPath, animated: <span class="literal">true</span>)</span><br><span class="line">        <span class="keyword">self</span>.delegate?.clickShareViewAt(indexPath.row, type: shareModel[indexPath.row].name)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="效果：">效果：</h2><p><img src="/img/swiftshareview1.png" alt=""></p>
<h2 id="用协议的方法封装分享的方法">用协议的方法封装分享的方法</h2><blockquote>
<p>要先按官方方法引入微信，QQ，微博的SDK</p>
</blockquote>
<figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="type">UIKit</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">protocol</span> <span class="title">CSShareable</span>: <span class="title">class</span> </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> shareTitle: <span class="type">String</span>? &#123; <span class="keyword">get</span> &#125; <span class="comment">/// 分享标题</span></span><br><span class="line">    <span class="keyword">var</span> shareView: <span class="type">CSShareView</span>! &#123; <span class="keyword">get</span> <span class="keyword">set</span> &#125; <span class="comment">/// 分享控件</span></span><br><span class="line">    <span class="keyword">var</span> shareURL: <span class="type">String</span>? &#123; <span class="keyword">get</span> &#125; <span class="comment">/// 分享链接</span></span><br><span class="line">    <span class="keyword">var</span> shareImage: <span class="type">UIImage</span>? &#123; <span class="keyword">get</span> &#125; <span class="comment">/// 分享图片</span></span><br><span class="line">    <span class="keyword">var</span> sharePreviewImageURL: <span class="type">String</span>? &#123; <span class="keyword">get</span> &#125; <span class="comment">/// QQ分享需要的图片地址</span></span><br><span class="line">    <span class="keyword">var</span> shareDescription: <span class="type">String</span>? &#123; <span class="keyword">get</span> &#125; <span class="comment">/// QQ分享需要的分享描述</span></span><br><span class="line">    <span class="func"><span class="keyword">func</span> <span class="title">setupShareView</span><span class="params">()</span></span>  <span class="comment">/// CSShareable 设置分享控件 [必需]</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">enum</span> <span class="title">CSShareType</span>: <span class="title">String</span> </span>&#123;</span><br><span class="line">    <span class="comment">/// 新浪微博</span></span><br><span class="line">    <span class="keyword">case</span> <span class="type">WeiboTimeline</span> = <span class="string">"新浪微博"</span></span><br><span class="line">    <span class="comment">/// 微信朋友圈</span></span><br><span class="line">    <span class="keyword">case</span> <span class="type">WXSceneTimeline</span> = <span class="string">"微信朋友圈"</span></span><br><span class="line">    <span class="comment">/// 微信好友</span></span><br><span class="line">    <span class="keyword">case</span> <span class="type">WXSession</span> = <span class="string">"微信好友"</span></span><br><span class="line">    <span class="comment">/// QQ好友</span></span><br><span class="line">    <span class="keyword">case</span> <span class="type">QQSession</span> = <span class="string">"QQ好友"</span></span><br><span class="line">    <span class="comment">/// QQ空间</span></span><br><span class="line">    <span class="keyword">case</span> <span class="type">QQZone</span> = <span class="string">"QQ空间"</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">enum</span> <span class="title">CSShareIcon</span>: <span class="title">String</span> </span>&#123;</span><br><span class="line">    <span class="keyword">case</span> <span class="type">WeiboTimeline</span> = <span class="string">"Weibo"</span></span><br><span class="line">    <span class="keyword">case</span> <span class="type">WXSceneTimeline</span> = <span class="string">"Friend"</span></span><br><span class="line">    <span class="keyword">case</span> <span class="type">WXSession</span> = <span class="string">"Wechat"</span></span><br><span class="line">    <span class="keyword">case</span> <span class="type">QQSession</span> = <span class="string">"QQ"</span></span><br><span class="line">    <span class="keyword">case</span> <span class="type">QQZone</span> = <span class="string">"Qzone"</span></span><br><span class="line">    <span class="keyword">case</span> <span class="type">Blank</span> = <span class="string">"Blank"</span>  <span class="comment">// Assets.xcassets 必需存在这张图片</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">CSShareModel</span> </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> icon: <span class="type">CSShareIcon</span></span><br><span class="line">    <span class="keyword">var</span> name: <span class="type">CSShareType</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">extension</span> <span class="title">CSShareable</span> <span class="title">where</span> <span class="title">Self</span>: <span class="title">UIViewController</span>, <span class="title">Self</span>: <span class="title">CSShareViewDelegate</span>  </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 默认值</span></span><br><span class="line">    <span class="keyword">var</span> shareTitle: <span class="type">String</span>? &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"分享标题"</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">var</span> shareURL: <span class="type">String</span>? &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"http://www.welkj.com"</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">var</span> shareImage: <span class="type">UIImage</span>? &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="type">UIImage</span>(named: <span class="type">CSShareIcon</span>.<span class="type">Blank</span>.rawValue)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">var</span> sharePreviewImageURL: <span class="type">String</span>? &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"http://welkj.com/img/LOGO2.png"</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">var</span> shareDescription: <span class="type">String</span>? &#123;</span><br><span class="line">        <span class="keyword">return</span>  <span class="string">"分享描述"</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/// CSShareable 设置分享控件 [必需]</span></span><br><span class="line">    <span class="func"><span class="keyword">func</span> <span class="title">setupShareView</span><span class="params">()</span></span> &#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">var</span> shareModels: [<span class="type">CSShareModel</span>] = []</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> <span class="type">WeiboSDK</span>.isCanShareInWeiboAPP() &#123;</span><br><span class="line">            shareModels.append(<span class="type">CSShareModel</span>(icon: .<span class="type">WeiboTimeline</span>, name: .<span class="type">WeiboTimeline</span>))</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> <span class="type">WXApi</span>.isWXAppInstalled() &amp;&amp; <span class="type">WXApi</span>.isWXAppSupportApi() &#123;</span><br><span class="line">            shareModels.append(<span class="type">CSShareModel</span>(icon: .<span class="type">WXSceneTimeline</span>, name: .<span class="type">WXSceneTimeline</span>))</span><br><span class="line">            shareModels.append(<span class="type">CSShareModel</span>(icon: .<span class="type">WXSession</span>, name: .<span class="type">WXSession</span>))</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> <span class="type">QQApiInterface</span>.isQQInstalled() &amp;&amp; <span class="type">QQApiInterface</span>.isQQSupportApi() &#123;</span><br><span class="line">            shareModels.append(<span class="type">CSShareModel</span>(icon: .<span class="type">QQSession</span>, name: .<span class="type">QQSession</span>))</span><br><span class="line">            shareModels.append(<span class="type">CSShareModel</span>(icon: .<span class="type">QQZone</span>, name: .<span class="type">QQZone</span>))</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">self</span>.shareView = <span class="type">CSShareView</span>(view: <span class="keyword">self</span>.view, shareModel: shareModels)</span><br><span class="line">        <span class="keyword">self</span>.shareView.delegate = <span class="keyword">self</span></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/// CSShareable 设置分享控件 [必需] 需要在 CSShareViewDelegate 里面调用</span></span><br><span class="line">    <span class="func"><span class="keyword">func</span> <span class="title">shareViewClickShareViewAt</span><span class="params">(index: Int, type: CSShareType)</span></span> &#123;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 分享的标题内容及链接</span></span><br><span class="line">        <span class="keyword">let</span> title = shareTitle ?? <span class="string">""</span></span><br><span class="line">        <span class="keyword">let</span> image = shareImage ?? <span class="type">UIImage</span>(named: <span class="type">CSShareIcon</span>.<span class="type">Blank</span>.rawValue)! <span class="comment">// 如果没有图片分享将不成功</span></span><br><span class="line">        <span class="keyword">let</span> url = shareURL ?? <span class="string">""</span></span><br><span class="line">        <span class="keyword">let</span> previewImageURL = sharePreviewImageURL ?? <span class="string">""</span></span><br><span class="line">        <span class="keyword">let</span> description = shareDescription ?? <span class="string">""</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> type == <span class="type">CSShareType</span>.<span class="type">WeiboTimeline</span> &#123;</span><br><span class="line">            <span class="keyword">self</span>.shareToWeiboTimeline(title, image: image, url: url)</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> type == <span class="type">CSShareType</span>.<span class="type">WXSceneTimeline</span> &#123;</span><br><span class="line">            <span class="keyword">self</span>.shareToWechat(title, image: image, url: url, type: <span class="type">WXSceneTimeline</span>)</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> type == <span class="type">CSShareType</span>.<span class="type">WXSession</span> &#123;</span><br><span class="line">            <span class="keyword">self</span>.shareToWechat(title, image: image, url: url, type: <span class="type">WXSceneSession</span>)</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> type == <span class="type">CSShareType</span>.<span class="type">QQSession</span> &#123;</span><br><span class="line">            <span class="keyword">self</span>.shareToTencent(title, description: description, url: url, previewImageURL: previewImageURL, type: <span class="type">CSShareType</span>.<span class="type">QQSession</span>)</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> type == <span class="type">CSShareType</span>.<span class="type">QQZone</span> &#123;</span><br><span class="line">            <span class="keyword">self</span>.shareToTencent(title, description: description, url: url, previewImageURL: previewImageURL, type: <span class="type">CSShareType</span>.<span class="type">QQZone</span>)</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">self</span>.shareView.dismissShareView()</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 微博分享内容</span></span><br><span class="line">    private <span class="func"><span class="keyword">func</span> <span class="title">shareToWeiboTimeline</span><span class="params">(text: String, image: UIImage, url: String)</span></span> &#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">let</span> request = <span class="type">WBSendMessageToWeiboRequest</span>()</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 文字</span></span><br><span class="line">        <span class="keyword">let</span> message = <span class="type">WBMessageObject</span>.message() <span class="keyword">as</span>! <span class="type">WBMessageObject</span></span><br><span class="line">        message.text = <span class="string">"<span class="subst">\(text)</span> 链接地址:<span class="subst">\(url)</span>"</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// 图片</span></span><br><span class="line">        <span class="keyword">let</span> imageObject = <span class="type">WBImageObject</span>()</span><br><span class="line">        imageObject.imageData = <span class="type">UIImagePNGRepresentation</span>(image)</span><br><span class="line">        message.imageObject = imageObject</span><br><span class="line">        request.message = message</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 发送</span></span><br><span class="line">        <span class="type">WeiboSDK</span>.sendRequest(request)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 微信分享</span></span><br><span class="line">    private <span class="func"><span class="keyword">func</span> <span class="title">shareToWechat</span><span class="params">(text: String, image: UIImage, url: String, type: WXScene)</span></span> &#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">let</span> message =  <span class="type">WXMediaMessage</span>()</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 文字</span></span><br><span class="line">        message.title = text</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 图片</span></span><br><span class="line">        <span class="keyword">let</span> imageObject =  <span class="type">WXImageObject</span>()</span><br><span class="line">        imageObject.imageData = <span class="type">UIImagePNGRepresentation</span>(image)</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 图片缩略图</span></span><br><span class="line">        <span class="keyword">let</span> width = <span class="number">240.0</span> <span class="keyword">as</span> <span class="type">CGFloat</span></span><br><span class="line">        <span class="keyword">let</span> height = width*image.size.height/image.size.width</span><br><span class="line">        <span class="type">UIGraphicsBeginImageContext</span>(<span class="type">CGSizeMake</span>(width, height))</span><br><span class="line">        image.drawInRect(<span class="type">CGRectMake</span>(<span class="number">0</span>, <span class="number">0</span>, width, height))</span><br><span class="line">        message.setThumbImage(<span class="type">UIGraphicsGetImageFromCurrentImageContext</span>())</span><br><span class="line">        <span class="type">UIGraphicsEndImageContext</span>()</span><br><span class="line"></span><br><span class="line">        <span class="comment">// URL</span></span><br><span class="line">        <span class="keyword">let</span> web = <span class="type">WXWebpageObject</span>()</span><br><span class="line">        web.webpageUrl = url</span><br><span class="line">        message.mediaObject = web</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 发送</span></span><br><span class="line">        <span class="keyword">let</span> req =  <span class="type">SendMessageToWXReq</span>()</span><br><span class="line">        req.bText = <span class="literal">false</span></span><br><span class="line">        req.message = message</span><br><span class="line">        req.scene = <span class="type">Int32</span>(type.rawValue)</span><br><span class="line">        <span class="type">WXApi</span>.sendReq(req)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// QQ分享文本消息</span></span><br><span class="line">    private <span class="func"><span class="keyword">func</span> <span class="title">shareToTencent</span><span class="params">(title: String, description: String, url: String, previewImageURL: String, type: CSShareType)</span></span> &#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">let</span> newsObj = <span class="type">QQApiNewsObject</span>(<span class="type">URL</span>: <span class="type">NSURL</span>(string: url), title: title, description: description, previewImageURL: <span class="type">NSURL</span>(string: previewImageURL), targetContentType: <span class="type">QQApiURLTargetTypeNews</span>)</span><br><span class="line">        <span class="keyword">let</span> req = <span class="type">SendMessageToQQReq</span>(content: newsObj)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> type == <span class="type">CSShareType</span>.<span class="type">QQSession</span> &#123;</span><br><span class="line">            <span class="type">QQApiInterface</span>.sendReq(req)</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> type == <span class="type">CSShareType</span>.<span class="type">QQZone</span> &#123;</span><br><span class="line">            <span class="type">QQApiInterface</span>.<span class="type">SendReqToQZone</span>(req)</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/// CSShareable 显示分享控件</span></span><br><span class="line">    <span class="func"><span class="keyword">func</span> <span class="title">showShareView</span><span class="params">()</span></span> &#123;</span><br><span class="line">        shareView.showShareView()</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="使用方法">使用方法</h2><blockquote>
<p>由于是基于协议，所以输入的方法和变量都有提示。</p>
</blockquote>
<figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="type">UIKit</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ViewController</span>: <span class="title">UIViewController</span>, <span class="title">CSShareable</span>  </span>&#123;  <span class="comment">// [1] 遵从协议</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> shareView: <span class="type">CSShareView</span>! <span class="comment">// [2] 创建shareView</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">override</span> <span class="func"><span class="keyword">func</span> <span class="title">viewDidLoad</span><span class="params">()</span></span> &#123;</span><br><span class="line">        <span class="keyword">super</span>.viewDidLoad()</span><br><span class="line">        <span class="keyword">self</span>.setupShareView() <span class="comment">// [3] 初使化分享控件</span></span><br><span class="line">        <span class="keyword">self</span>.showShareView() <span class="comment">// [5] 显示分享控件</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">extension</span> <span class="title">ViewController</span>: <span class="title">CSShareViewDelegate</span> </span>&#123;  <span class="comment">// [4] 实现协议方法</span></span><br><span class="line">    <span class="func"><span class="keyword">func</span> <span class="title">clickShareViewAt</span><span class="params">(index: Int, type: CSShareType)</span></span> &#123;</span><br><span class="line">        <span class="keyword">self</span>.shareViewClickShareViewAt(index, type: type)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<blockquote>
<p>分享内容是通过使用协议变量的方法更改，如果不实现，将全部使用默认值 </p>
</blockquote>
<h2 id="更改要分享的内容">更改要分享的内容</h2><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="type">UIKit</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ViewController</span>: <span class="title">UIViewController</span>, <span class="title">CSShareable</span>  </span>&#123;  </span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> shareView: <span class="type">CSShareView</span>! </span><br><span class="line">    <span class="comment">// ----------------- [1] 更改要分享的内容---------------------</span></span><br><span class="line">    <span class="keyword">var</span> shareTitle: <span class="type">String</span>? <span class="comment">// 分享标题</span></span><br><span class="line">    <span class="keyword">var</span> shareURL: <span class="type">String</span>? <span class="comment">// 分享链接</span></span><br><span class="line">    <span class="keyword">var</span> shareImage: <span class="type">UIImage</span>? <span class="comment">// 分享图片</span></span><br><span class="line">    <span class="keyword">var</span> sharePreviewImageURL: <span class="type">String</span>? <span class="comment">// QQ分享需要的图片地址</span></span><br><span class="line">    <span class="keyword">var</span> shareDescription: <span class="type">String</span>? <span class="comment">// QQ分享需要的分享描述</span></span><br><span class="line">    <span class="comment">// --------------------------------------------------------</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">override</span> <span class="func"><span class="keyword">func</span> <span class="title">viewDidLoad</span><span class="params">()</span></span> &#123;</span><br><span class="line">        <span class="keyword">super</span>.viewDidLoad()</span><br><span class="line">        <span class="keyword">self</span>.setupShareView()</span><br><span class="line">        <span class="keyword">self</span>.shareTitle = <span class="string">"要更改的标题"</span> <span class="comment">// [2] 更改成想要的内容</span></span><br><span class="line">        <span class="keyword">self</span>.showShareView()</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">extension</span> <span class="title">ViewController</span>: <span class="title">CSShareViewDelegate</span> </span>&#123;  </span><br><span class="line">    <span class="func"><span class="keyword">func</span> <span class="title">clickShareViewAt</span><span class="params">(index: Int, type: CSShareType)</span></span> &#123;</span><br><span class="line">        <span class="keyword">self</span>.shareViewClickShareViewAt(index, type: type)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
    <summary type="html">
    <![CDATA[<h2 id="首先通过CollectionView自定义一个分享的控件">首先通过CollectionView自定义一个分享的控件</h2><figure class="highlight swift"><table><tr><td class="gutter"><pre><s]]>
    </summary>
    
      <category term="Swift" scheme="http://lecason.com/tags/Swift/"/>
    
      <category term="Swift" scheme="http://lecason.com/categories/Swift/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Swift 自定义按钮列表]]></title>
    <link href="http://lecason.com/2016/03/01/Swift-List-Button/"/>
    <id>http://lecason.com/2016/03/01/Swift-List-Button/</id>
    <published>2016-03-01T06:00:32.000Z</published>
    <updated>2016-03-01T06:16:14.000Z</updated>
    <content type="html"><![CDATA[<p>项目要用到这个按钮，就封装起来。覆盖的灰色按钮可以左右拖动。点击左边往左滑，点击右边往右滑，可以设置是否显示一个按钮，还是所有按钮。</p>
<h2 id="文件">文件</h2><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//  CSListButton.swift</span></span><br><span class="line"><span class="comment">//  List Button</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//  Created by Lecason on 16/2/29.</span></span><br><span class="line"><span class="comment">//  Copyright © 2016年 Shenzhen WEL Technology Co., Ltd. All rights reserved.</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="type">UIKit</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">enum</span> <span class="title">CSListButtonPosition</span> </span>&#123;</span><br><span class="line">    <span class="keyword">case</span> <span class="type">Origin</span></span><br><span class="line">    <span class="keyword">case</span> <span class="type">ButtonWidth</span></span><br><span class="line">    <span class="keyword">case</span> <span class="type">ScreenWidth</span></span><br><span class="line">    <span class="keyword">case</span> <span class="type">NegativeWidth</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="preprocessor">@objc</span> <span class="class"><span class="keyword">protocol</span> <span class="title">CSTopButtonDelegate</span> </span>&#123;</span><br><span class="line">    optional <span class="func"><span class="keyword">func</span> <span class="title">clickTopButtonAtIndexPath</span><span class="params">(indexColumn: Int, indexRow: Int)</span></span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="preprocessor">@objc</span> <span class="class"><span class="keyword">protocol</span> <span class="title">CSRowButtonDelegate</span> </span>&#123;</span><br><span class="line">    optional <span class="func"><span class="keyword">func</span> <span class="title">clickRowButtonAtIndexPath</span><span class="params">(indexColumn: Int, indexRow: Int)</span></span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="preprocessor">@objc</span> <span class="class"><span class="keyword">protocol</span> <span class="title">CSListButtonDelegate</span> </span>&#123;</span><br><span class="line">    optional <span class="func"><span class="keyword">func</span> <span class="title">clickListButtonAtIndexPath</span><span class="params">(indexColumn: Int, indexRow: Int)</span></span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 多行按钮</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">CSListButton</span>: <span class="title">UIView</span>, <span class="title">CSRowButtonDelegate</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> buttons: [[<span class="type">UIButton</span>]!]!</span><br><span class="line">    <span class="keyword">var</span> gap: <span class="type">CGFloat</span> = <span class="number">1</span> <span class="comment">// 按钮间隔</span></span><br><span class="line">    <span class="keyword">var</span> delegate: <span class="type">CSListButtonDelegate</span>?</span><br><span class="line">    <span class="keyword">var</span> isShowOnline: <span class="type">Bool</span> = <span class="literal">false</span> <span class="comment">// 是否允许展开多行</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">override</span> <span class="keyword">init</span>(frame: <span class="type">CGRect</span>) &#123;</span><br><span class="line">        <span class="keyword">super</span>.<span class="keyword">init</span>(frame: frame)</span><br><span class="line">        <span class="keyword">self</span>.backgroundColor = <span class="type">UIColor</span>.redColor()  <span class="comment">// 行的背景颜色</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    required <span class="keyword">init</span>?(coder aDecoder: <span class="type">NSCoder</span>) &#123;</span><br><span class="line">        <span class="keyword">super</span>.<span class="keyword">init</span>(coder: aDecoder)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    convenience <span class="keyword">init</span>(frame: <span class="type">CGRect</span>, buttons: [<span class="type">Int</span>]) &#123;</span><br><span class="line">        <span class="keyword">self</span>.<span class="keyword">init</span>(frame: frame)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">self</span>.buttons = <span class="type">Array</span>(<span class="built_in">count</span>: buttons.<span class="built_in">count</span>, repeatedValue: [])</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="number">0</span>..&lt;buttons.<span class="built_in">count</span> &#123;</span><br><span class="line">            <span class="keyword">let</span> hight = (frame.height - gap * <span class="type">CGFloat</span>(buttons.<span class="built_in">count</span> - <span class="number">1</span>))  / <span class="type">CGFloat</span>(buttons.<span class="built_in">count</span>)</span><br><span class="line">            <span class="keyword">let</span> frame = <span class="type">CGRectMake</span>(<span class="number">0</span>, <span class="type">CGFloat</span>(i) * hight + (<span class="type">CGFloat</span>(i) * gap), frame.width, hight)</span><br><span class="line">            <span class="keyword">let</span> rowButton = <span class="type">CSRowButton</span>(frame: frame, <span class="built_in">count</span>: buttons[i], row: i)</span><br><span class="line">            rowButton.delegate = <span class="keyword">self</span></span><br><span class="line">            <span class="keyword">self</span>.buttons[i] = rowButton.rowButtons</span><br><span class="line">            <span class="keyword">self</span>.addSubview(rowButton)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="func"><span class="keyword">func</span> <span class="title">clickRowButtonAtIndexPath</span><span class="params">(indexColumn: Int, indexRow: Int)</span></span> &#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">self</span>.delegate?.clickListButtonAtIndexPath?(indexColumn, indexRow: indexRow)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> isShowOnline &#123;</span><br><span class="line">            getTopButton(indexColumn)</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 得到选中的顶层按钮</span></span><br><span class="line">    <span class="func"><span class="keyword">func</span> <span class="title">getTopButton</span><span class="params">(indexColumn: Int)</span></span> &#123;</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="number">0</span>..&lt;buttons.<span class="built_in">count</span> &#123;</span><br><span class="line">        <span class="keyword">for</span> row <span class="keyword">in</span> buttons[i] &#123;</span><br><span class="line">                <span class="keyword">if</span> <span class="keyword">let</span> topBtn = row <span class="keyword">as</span>? <span class="type">CSListTopButtton</span> &#123;</span><br><span class="line">                    <span class="keyword">if</span> topBtn.row == indexColumn &#123;</span><br><span class="line">                        <span class="comment">// 选中的行</span></span><br><span class="line">                    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                        topBtn.animationHolderButtonOringe(.<span class="type">Origin</span>)</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 整个一行按钮</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">CSRowButton</span>: <span class="title">UIView</span>, <span class="title">CSTopButtonDelegate</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> gap:<span class="type">CGFloat</span> = <span class="number">1</span> <span class="comment">// 按钮的间距</span></span><br><span class="line">    <span class="keyword">var</span> holderButton: <span class="type">CSListTopButtton</span>! <span class="comment">// 按钮载体</span></span><br><span class="line">    <span class="keyword">var</span> animationDuration: <span class="type">NSTimeInterval</span> = <span class="number">0.5</span> <span class="comment">// 动画时长</span></span><br><span class="line">    <span class="keyword">var</span> iconButton: <span class="type">UIButton</span>! <span class="comment">// 图标按钮</span></span><br><span class="line">    <span class="keyword">var</span> delegate: <span class="type">CSRowButtonDelegate</span>?</span><br><span class="line">    <span class="keyword">var</span> rowButtons: [<span class="type">UIButton</span>]! <span class="comment">// 行的按钮</span></span><br><span class="line">    <span class="keyword">var</span> row: <span class="type">Int</span>!</span><br><span class="line"></span><br><span class="line">    <span class="comment">// MARK: 初使化</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">override</span> <span class="keyword">init</span>(frame: <span class="type">CGRect</span>) &#123;</span><br><span class="line">        <span class="keyword">super</span>.<span class="keyword">init</span>(frame: frame)</span><br><span class="line">        <span class="keyword">self</span>.backgroundColor = <span class="type">UIColor</span>.redColor() <span class="comment">// 列的背景颜色</span></span><br><span class="line">        rowButtons = [<span class="type">UIButton</span>]()</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// count 按钮个数，除去图标和顶部按钮 , row 按钮位于第几行</span></span><br><span class="line">    convenience <span class="keyword">init</span>(frame: <span class="type">CGRect</span>, <span class="built_in">count</span>: <span class="type">Int</span>, row: <span class="type">Int</span>) &#123;</span><br><span class="line">        <span class="keyword">self</span>.<span class="keyword">init</span>(frame: frame)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">self</span>.row = row</span><br><span class="line"></span><br><span class="line">        iconButton = <span class="type">UIButton</span>()</span><br><span class="line">        iconButton.frame.size = <span class="type">CGSizeMake</span>(frame.height, frame.height)</span><br><span class="line">        iconButton.backgroundColor = <span class="type">UIColor</span>.greenColor()</span><br><span class="line">        iconButton.addTarget(<span class="keyword">self</span>, action: <span class="string">"iconButtonAction:"</span>, forControlEvents: <span class="type">UIControlEvents</span>.<span class="type">TouchUpInside</span>)</span><br><span class="line">        rowButtons.append(iconButton)</span><br><span class="line">        <span class="keyword">self</span>.addSubview(iconButton)</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 添加按钮</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="number">0</span>..&lt;<span class="built_in">count</span> &#123;</span><br><span class="line">            <span class="keyword">let</span> width = (frame.width - <span class="type">CGFloat</span>(<span class="built_in">count</span>) * gap - iconButton.frame.width) / <span class="type">CGFloat</span>(<span class="built_in">count</span>)</span><br><span class="line">            <span class="keyword">let</span> btnFrame = <span class="type">CGRectMake</span>(<span class="type">CGFloat</span>(i) * width + iconButton.frame.width + gap + (<span class="type">CGFloat</span>(i) * gap), <span class="number">0</span>, width, frame.height)</span><br><span class="line">            <span class="keyword">let</span> btn = <span class="type">UIButton</span>(frame: btnFrame)</span><br><span class="line">            btn.tag = i + <span class="number">1</span></span><br><span class="line">            btn.addTarget(<span class="keyword">self</span>, action: <span class="string">"btnAction:"</span>, forControlEvents: <span class="type">UIControlEvents</span>.<span class="type">TouchUpInside</span>)</span><br><span class="line">            btn.backgroundColor = <span class="type">UIColor</span>.whiteColor()</span><br><span class="line">            <span class="keyword">self</span>.addSubview(btn)</span><br><span class="line">            rowButtons.append(btn)</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 按钮载体</span></span><br><span class="line">        holderButton = <span class="type">CSListTopButtton</span>()</span><br><span class="line">        holderButton.frame.size = <span class="keyword">self</span>.frame.size</span><br><span class="line">        holderButton.frame.origin = <span class="type">CGPointZero</span></span><br><span class="line">        holderButton.backgroundColor = <span class="type">UIColor</span>.grayColor()</span><br><span class="line">        holderButton.tag = <span class="built_in">count</span> + <span class="number">1</span></span><br><span class="line">        holderButton.row = <span class="keyword">self</span>.row</span><br><span class="line">        holderButton.delegate = <span class="keyword">self</span></span><br><span class="line">        <span class="keyword">self</span>.addSubview(holderButton)</span><br><span class="line">        rowButtons.append(holderButton)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    required <span class="keyword">init</span>?(coder aDecoder: <span class="type">NSCoder</span>) &#123;</span><br><span class="line">        <span class="keyword">super</span>.<span class="keyword">init</span>(coder: aDecoder)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// MARK: 按钮事件</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 中间按钮事件</span></span><br><span class="line">    <span class="func"><span class="keyword">func</span> <span class="title">btnAction</span><span class="params">(sender: UIButton)</span></span> &#123;</span><br><span class="line">    <span class="comment">// 点击中间按钮，顶层按钮是否覆盖回去</span></span><br><span class="line">    <span class="comment">// animationHolderButtonOringe(.Origin)</span></span><br><span class="line">        <span class="keyword">self</span>.delegate?.clickRowButtonAtIndexPath?(<span class="keyword">self</span>.row, indexRow: sender.tag)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 图标按钮事件</span></span><br><span class="line">    <span class="func"><span class="keyword">func</span> <span class="title">iconButtonAction</span><span class="params">(sender: UIButton)</span></span> &#123;</span><br><span class="line">        animationHolderButtonOringe(.<span class="type">Origin</span>)</span><br><span class="line">        <span class="keyword">self</span>.delegate?.clickRowButtonAtIndexPath?(<span class="keyword">self</span>.row, indexRow: sender.tag)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// MARK: 其它方法</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 设置按钮位置</span></span><br><span class="line">    <span class="func"><span class="keyword">func</span> <span class="title">animationHolderButtonOringe</span><span class="params">(position: CSListButtonPosition)</span></span> &#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">var</span> origin: <span class="type">CGFloat</span> = <span class="number">0</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">switch</span> position &#123;</span><br><span class="line">            <span class="keyword">case</span> .<span class="type">Origin</span>:</span><br><span class="line">            origin = <span class="number">0</span></span><br><span class="line">            <span class="keyword">case</span> .<span class="type">ButtonWidth</span>:</span><br><span class="line">            origin = <span class="keyword">self</span>.frame.width</span><br><span class="line">            <span class="keyword">case</span> .<span class="type">ScreenWidth</span>:</span><br><span class="line">            origin = <span class="type">UIScreen</span>.mainScreen().bounds.width</span><br><span class="line">            <span class="keyword">case</span> .<span class="type">NegativeWidth</span>:</span><br><span class="line">            origin = -<span class="keyword">self</span>.frame.width</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="type">UIView</span>.beginAnimations(<span class="literal">nil</span>, context: <span class="literal">nil</span>)</span><br><span class="line">        <span class="type">UIView</span>.setAnimationDuration(animationDuration)</span><br><span class="line">        <span class="type">UIView</span>.setAnimationCurve(.<span class="type">EaseInOut</span>)</span><br><span class="line">        holderButton.frame.origin.x = origin</span><br><span class="line">        <span class="type">UIView</span>.commitAnimations()</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="func"><span class="keyword">func</span> <span class="title">clickTopButtonAtIndexPath</span><span class="params">(indexColumn: Int, indexRow: Int)</span></span> &#123;</span><br><span class="line">        <span class="keyword">self</span>.delegate?.clickRowButtonAtIndexPath?(indexColumn, indexRow: indexRow)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 顶层按钮拖动按钮</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">CSListTopButtton</span>: <span class="title">UIButton</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> lastLocation:<span class="type">CGPoint</span> = <span class="type">CGPointMake</span>(<span class="number">0</span>, <span class="number">0</span>)</span><br><span class="line">    <span class="keyword">var</span> animationDuration: <span class="type">NSTimeInterval</span> = <span class="number">0.5</span> <span class="comment">// 动画时长</span></span><br><span class="line">    <span class="keyword">var</span> row: <span class="type">Int</span>!</span><br><span class="line">    <span class="keyword">var</span> delegate: <span class="type">CSTopButtonDelegate</span>?</span><br><span class="line"></span><br><span class="line">    <span class="keyword">override</span> <span class="keyword">init</span>(frame: <span class="type">CGRect</span>) &#123;</span><br><span class="line">        <span class="keyword">super</span>.<span class="keyword">init</span>(frame: frame)</span><br><span class="line">        <span class="keyword">let</span> panRecognizer = <span class="type">UIPanGestureRecognizer</span>(target:<span class="keyword">self</span>, action:<span class="string">"detectPan:"</span>)</span><br><span class="line">        <span class="keyword">let</span> tapRecognizer = <span class="type">UITapGestureRecognizer</span>(target: <span class="keyword">self</span>, action: <span class="string">"detectTap:"</span>)</span><br><span class="line">        <span class="keyword">self</span>.gestureRecognizers = [panRecognizer, tapRecognizer]</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    required <span class="keyword">init</span>?(coder aDecoder: <span class="type">NSCoder</span>) &#123;</span><br><span class="line">        <span class="keyword">super</span>.<span class="keyword">init</span>(coder: aDecoder)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 拖动事件</span></span><br><span class="line">    <span class="func"><span class="keyword">func</span> <span class="title">detectPan</span><span class="params">(recognizer:UIPanGestureRecognizer)</span></span> &#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">let</span> translation  = recognizer.translationInView(<span class="keyword">self</span>.superview!)</span><br><span class="line">        <span class="keyword">self</span>.center = <span class="type">CGPointMake</span>(lastLocation.x + translation.x, <span class="keyword">self</span>.center.y)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> recognizer.state == <span class="type">UIGestureRecognizerState</span>.<span class="type">Ended</span> &#123;</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 向左移过一半</span></span><br><span class="line">            <span class="keyword">if</span> <span class="keyword">self</span>.center.x &lt; <span class="number">0</span> &#123;</span><br><span class="line">                animationHolderButtonOringe(.<span class="type">NegativeWidth</span>)</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 向左移小于一半</span></span><br><span class="line">            <span class="keyword">if</span> <span class="keyword">self</span>.center.x &gt; <span class="number">0</span> &amp;&amp; <span class="keyword">self</span>.center.x &lt; <span class="keyword">self</span>.frame.width / <span class="number">2</span> &#123;</span><br><span class="line">                animationHolderButtonOringe(.<span class="type">Origin</span>)</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 向右移小于一半</span></span><br><span class="line">            <span class="keyword">if</span> <span class="keyword">self</span>.center.x &gt; <span class="keyword">self</span>.frame.width / <span class="number">2</span> &amp;&amp; <span class="keyword">self</span>.center.x &lt; <span class="keyword">self</span>.frame.width &#123;</span><br><span class="line">                animationHolderButtonOringe(.<span class="type">Origin</span>)</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 向右移过一半</span></span><br><span class="line">            <span class="keyword">if</span> <span class="keyword">self</span>.center.x &gt; <span class="keyword">self</span>.frame.width &#123;</span><br><span class="line">                animationHolderButtonOringe(.<span class="type">ButtonWidth</span>)</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 点击事件</span></span><br><span class="line"></span><br><span class="line">    <span class="func"><span class="keyword">func</span> <span class="title">detectTap</span><span class="params">(recognizer: UITapGestureRecognizer)</span></span> &#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">let</span> translation = recognizer.locationInView(superview)</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 点击小于一半左移</span></span><br><span class="line">        <span class="keyword">if</span> translation.x &lt; <span class="keyword">self</span>.frame.width / <span class="number">2</span> &#123;</span><br><span class="line">            animationHolderButtonOringe(.<span class="type">NegativeWidth</span>)</span><br><span class="line">        <span class="comment">// 点击大于一半右移</span></span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            animationHolderButtonOringe(.<span class="type">ButtonWidth</span>)</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">self</span>.delegate?.clickTopButtonAtIndexPath?(<span class="keyword">self</span>.row, indexRow: <span class="keyword">self</span>.tag)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 设置按钮位置</span></span><br><span class="line">    <span class="func"><span class="keyword">func</span> <span class="title">animationHolderButtonOringe</span><span class="params">(position: CSListButtonPosition)</span></span> &#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">var</span> origin: <span class="type">CGFloat</span> = <span class="number">0</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">switch</span> position &#123;</span><br><span class="line">            <span class="keyword">case</span> .<span class="type">Origin</span>:</span><br><span class="line">            origin = <span class="number">0</span></span><br><span class="line">            <span class="keyword">case</span> .<span class="type">ButtonWidth</span>:</span><br><span class="line">            origin = <span class="keyword">self</span>.frame.width</span><br><span class="line">            <span class="keyword">case</span> .<span class="type">ScreenWidth</span>:</span><br><span class="line">            origin = <span class="type">UIScreen</span>.mainScreen().bounds.width</span><br><span class="line">            <span class="keyword">case</span> .<span class="type">NegativeWidth</span>:</span><br><span class="line">            origin = -<span class="keyword">self</span>.frame.width</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="type">UIView</span>.beginAnimations(<span class="literal">nil</span>, context: <span class="literal">nil</span>)</span><br><span class="line">        <span class="type">UIView</span>.setAnimationDuration(animationDuration)</span><br><span class="line">        <span class="type">UIView</span>.setAnimationCurve(.<span class="type">EaseInOut</span>)</span><br><span class="line">        <span class="keyword">self</span>.frame.origin.x = origin</span><br><span class="line">        <span class="type">UIView</span>.commitAnimations()</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">override</span> <span class="func"><span class="keyword">func</span> <span class="title">touchesBegan</span><span class="params">(touches: Set&lt;UITouch&gt;, withEvent event: UIEvent?)</span></span> &#123;</span><br><span class="line">        <span class="keyword">self</span>.superview?.bringSubviewToFront(<span class="keyword">self</span>)</span><br><span class="line">        lastLocation = <span class="keyword">self</span>.center</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="使用方法">使用方法</h2><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ViewController</span>: <span class="title">UIViewController</span>, <span class="title">CSListButtonDelegate</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">override</span> <span class="func"><span class="keyword">func</span> <span class="title">viewDidLoad</span><span class="params">()</span></span> &#123;</span><br><span class="line">        <span class="keyword">super</span>.viewDidLoad()</span><br><span class="line"></span><br><span class="line">        <span class="keyword">self</span>.view.backgroundColor = <span class="type">UIColor</span>.groupTableViewBackgroundColor()</span><br><span class="line"></span><br><span class="line">        <span class="keyword">let</span> frame = <span class="type">CGRectMake</span>(<span class="number">0</span>, <span class="number">130</span>, <span class="keyword">self</span>.view.frame.width, <span class="number">150</span>)</span><br><span class="line">        <span class="keyword">let</span> list = <span class="type">CSListButton</span>(frame: frame, buttons: [<span class="number">3</span>,<span class="number">4</span>,<span class="number">2</span>])</span><br><span class="line">        list.isShowOnline = <span class="literal">true</span></span><br><span class="line">        list.delegate = <span class="keyword">self</span></span><br><span class="line">        list.buttons[<span class="number">0</span>][<span class="number">3</span>].backgroundColor = <span class="type">UIColor</span>.purpleColor()</span><br><span class="line">        <span class="keyword">self</span>.view.addSubview(list)</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="func"><span class="keyword">func</span> <span class="title">clickListButtonAtIndexPath</span><span class="params">(indexColumn: Int, indexRow: Int)</span></span> &#123;</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">"column: <span class="subst">\(indexColumn)</span> --- row: <span class="subst">\(indexRow)</span>"</span>)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="效果">效果</h2><p><img src="/img/listbutton1.png" alt=""></p>
]]></content>
    <summary type="html">
    <![CDATA[<p>项目要用到这个按钮，就封装起来。覆盖的灰色按钮可以左右拖动。点击左边往左滑，点击右边往右滑，可以设置是否显示一个按钮，还是所有按钮。</p>
<h2 id="文件">文件</h2><figure class="highlight swift"><table><tr><td ]]>
    </summary>
    
      <category term="Swift" scheme="http://lecason.com/tags/Swift/"/>
    
      <category term="Swift" scheme="http://lecason.com/categories/Swift/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Swift 函数相关]]></title>
    <link href="http://lecason.com/2016/02/19/Swift-func-func/"/>
    <id>http://lecason.com/2016/02/19/Swift-func-func/</id>
    <published>2016-02-19T14:46:36.000Z</published>
    <updated>2016-02-19T14:51:17.000Z</updated>
    <content type="html"><![CDATA[<h2 id="用函数作为参数">用函数作为参数</h2><p>首先创建一个立方函数</p>
<figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="func"><span class="keyword">func</span> <span class="title">cube</span><span class="params">(num: Int)</span></span> -&gt; <span class="type">Int</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> num * num * num</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>再创建一个平方函数</p>
<figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="func"><span class="keyword">func</span> <span class="title">squre</span><span class="params">(num: Int)</span></span> -&gt; <span class="type">Int</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> num * num</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>再创建一个函数，传入平方或者立方函数，就执行相应的计算</p>
<figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="func"><span class="keyword">func</span> <span class="title">mathCalc</span><span class="params">(type: <span class="params">(Int)</span></span></span> -&gt; <span class="type">Int</span>, num: <span class="type">Int</span>) -&gt; <span class="type">Int</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> type(num)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>使用方法：<br><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">print</span>(mathCalc(cube, num: <span class="number">3</span>))</span><br><span class="line"><span class="built_in">print</span>(mathCalc(squre, num: <span class="number">3</span>))</span><br></pre></td></tr></table></figure></p>
<p>结果：<br><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">27&#10;9</span><br></pre></td></tr></table></figure></p>
]]></content>
    <summary type="html">
    <![CDATA[<h2 id="用函数作为参数">用函数作为参数</h2><p>首先创建一个立方函数</p>
<figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span]]>
    </summary>
    
      <category term="Swift" scheme="http://lecason.com/tags/Swift/"/>
    
      <category term="Swift" scheme="http://lecason.com/categories/Swift/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Swift 创建导航下拉菜单按钮]]></title>
    <link href="http://lecason.com/2016/01/25/Swift-Create-a-Slider-Donw-Navitigation-Button/"/>
    <id>http://lecason.com/2016/01/25/Swift-Create-a-Slider-Donw-Navitigation-Button/</id>
    <published>2016-01-25T08:28:57.000Z</published>
    <updated>2016-01-25T08:34:30.000Z</updated>
    <content type="html"><![CDATA[<h2 id="前言">前言</h2><p>点击导航栏标题，会下拉一个View, 同时按钮箭头也会旋转，没写View的拖拽返回</p>
<h2 id="文件">文件</h2><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//  CSNavigationButton.swift</span></span><br><span class="line"><span class="comment">//  ScrollView Test</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//  Created by Lecason on 16/1/25.</span></span><br><span class="line"><span class="comment">//  Copyright © 2016年 Shenzhen WEL Technology Co., Ltd. All rights reserved.</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="type">UIKit</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">CSNavigationButton</span>: <span class="title">UIButton</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> contentView: <span class="type">UIView</span>!      <span class="comment">// 内容页</span></span><br><span class="line">    <span class="keyword">var</span> controllerView: <span class="type">UIView</span>! <span class="comment">// 控制器页</span></span><br><span class="line">    <span class="keyword">var</span> animationTime: <span class="type">Double</span> = <span class="number">0.5</span> <span class="comment">// 动画时长</span></span><br><span class="line">    <span class="keyword">var</span> arrow: <span class="type">UIImageView</span>! <span class="comment">// 箭头</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">override</span> <span class="keyword">init</span>(frame: <span class="type">CGRect</span>) &#123;</span><br><span class="line">        <span class="keyword">super</span>.<span class="keyword">init</span>(frame: frame)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    required <span class="keyword">init</span>?(coder aDecoder: <span class="type">NSCoder</span>) &#123;</span><br><span class="line">        <span class="keyword">super</span>.<span class="keyword">init</span>(coder: aDecoder)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    convenience <span class="keyword">init</span>(frame: <span class="type">CGRect</span>, controllerView: <span class="type">UIView</span>) &#123;</span><br><span class="line">        <span class="keyword">self</span>.<span class="keyword">init</span>(frame: frame)</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 设置内容页</span></span><br><span class="line">        contentView = <span class="type">UIView</span>()</span><br><span class="line">        contentView.frame = <span class="type">CGRectMake</span>(<span class="number">0</span>, -<span class="type">UIScreen</span>.mainScreen().bounds.height, <span class="type">UIScreen</span>.mainScreen().bounds.width, <span class="type">UIScreen</span>.mainScreen().bounds.height)</span><br><span class="line">        contentView.backgroundColor = <span class="type">UIColor</span>.blueColor()</span><br><span class="line">        <span class="keyword">self</span>.addTarget(<span class="keyword">self</span>, action: <span class="string">"buttonAction:"</span>, forControlEvents: <span class="type">UIControlEvents</span>.<span class="type">TouchUpInside</span>)</span><br><span class="line">        <span class="keyword">self</span>.controllerView = controllerView</span><br><span class="line">        <span class="keyword">self</span>.controllerView.addSubview(contentView)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment">// 设置箭头</span></span><br><span class="line">        arrow = <span class="type">UIImageView</span>()</span><br><span class="line">        arrow.frame = <span class="type">CGRectMake</span>((frame.width - frame.height) + frame.height/<span class="number">4</span>, frame.height/<span class="number">4</span>, frame.height/<span class="number">2</span>, frame.height/<span class="number">2</span>)</span><br><span class="line">        arrow.image = <span class="type">UIImage</span>(named: <span class="string">"NavArrow"</span>)</span><br><span class="line">        <span class="keyword">self</span>.addSubview(arrow)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 按钮事件</span></span><br><span class="line">    <span class="func"><span class="keyword">func</span> <span class="title">buttonAction</span><span class="params">(sender: UIButton)</span></span> &#123;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 向下滑动</span></span><br><span class="line">        <span class="keyword">if</span> sender.selected == <span class="literal">false</span> &#123;</span><br><span class="line">            sender.selected = <span class="literal">true</span></span><br><span class="line">            controllerView.bringSubviewToFront(contentView)</span><br><span class="line">            <span class="type">UIView</span>.beginAnimations(<span class="literal">nil</span>, context: <span class="literal">nil</span>)</span><br><span class="line">            <span class="type">UIView</span>.setAnimationDuration(animationTime)</span><br><span class="line">            <span class="type">UIView</span>.setAnimationCurve(<span class="type">UIViewAnimationCurve</span>.<span class="type">EaseInOut</span>)</span><br><span class="line">            <span class="keyword">self</span>.contentView.frame.origin.y = <span class="number">0</span></span><br><span class="line">            <span class="type">UIView</span>.commitAnimations()</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 箭头旋转</span></span><br><span class="line">            <span class="type">UIView</span>.beginAnimations(<span class="literal">nil</span>, context: <span class="literal">nil</span>)</span><br><span class="line">            <span class="type">UIView</span>.setAnimationDuration(animationTime)</span><br><span class="line">            <span class="type">UIView</span>.setAnimationCurve(<span class="type">UIViewAnimationCurve</span>.<span class="type">EaseInOut</span>)</span><br><span class="line">            <span class="keyword">self</span>.arrow.transform = <span class="type">CGAffineTransformMakeRotation</span>(<span class="number">180.0</span> * <span class="type">CGFloat</span>(<span class="type">M_PI</span>) /  <span class="number">180.0</span>)</span><br><span class="line">            <span class="type">UIView</span>.commitAnimations()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment">// 向上滑动</span></span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> sender.selected == <span class="literal">true</span> &#123;</span><br><span class="line">            sender.selected = <span class="literal">false</span></span><br><span class="line">            <span class="type">UIView</span>.beginAnimations(<span class="literal">nil</span>, context: <span class="literal">nil</span>)</span><br><span class="line">            <span class="type">UIView</span>.setAnimationDuration(animationTime)</span><br><span class="line">            <span class="type">UIView</span>.setAnimationCurve(<span class="type">UIViewAnimationCurve</span>.<span class="type">EaseInOut</span>)</span><br><span class="line">            <span class="keyword">self</span>.contentView.frame.origin.y = -<span class="type">UIScreen</span>.mainScreen().bounds.height</span><br><span class="line">            <span class="type">UIView</span>.commitAnimations()</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 箭头旋转</span></span><br><span class="line">            <span class="type">UIView</span>.beginAnimations(<span class="literal">nil</span>, context: <span class="literal">nil</span>)</span><br><span class="line">            <span class="type">UIView</span>.setAnimationDuration(animationTime)</span><br><span class="line">            <span class="type">UIView</span>.setAnimationCurve(<span class="type">UIViewAnimationCurve</span>.<span class="type">EaseInOut</span>)</span><br><span class="line">            <span class="keyword">self</span>.arrow.transform = <span class="type">CGAffineTransformMakeRotation</span>(<span class="number">0</span> * <span class="type">CGFloat</span>(<span class="type">M_PI</span>) /  <span class="number">180.0</span>)</span><br><span class="line">            <span class="type">UIView</span>.commitAnimations()</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="使用">使用</h2><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="type">UIKit</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ViewController</span>: <span class="title">UIViewController</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">override</span> <span class="func"><span class="keyword">func</span> <span class="title">viewDidLoad</span><span class="params">()</span></span> &#123;</span><br><span class="line">        <span class="keyword">super</span>.viewDidLoad()</span><br><span class="line"></span><br><span class="line">        <span class="keyword">let</span> navButton = <span class="type">CSNavigationButton</span>(frame: <span class="type">CGRectMake</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">140</span>, <span class="number">30</span>), controllerView: <span class="keyword">self</span>.view)</span><br><span class="line">        navButton.setTitle(<span class="string">"LECASON"</span>, forState: <span class="type">UIControlState</span>.<span class="type">Normal</span>)</span><br><span class="line">        navButton.backgroundColor = <span class="type">UIColor</span>.greenColor()</span><br><span class="line"></span><br><span class="line">        <span class="keyword">let</span> lb = <span class="type">UILabel</span>()</span><br><span class="line">        lb.frame = <span class="type">CGRectMake</span>(<span class="number">100</span>, <span class="number">100</span>, <span class="number">200</span>, <span class="number">40</span>)</span><br><span class="line">        lb.text = <span class="string">"Just for test"</span></span><br><span class="line">        navButton.contentView.addSubview(lb)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">self</span>.navigationItem.titleView = navButton</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="效果">效果</h2><p><img src="/img/csnavigationbutton1.png" alt=""></p>
]]></content>
    <summary type="html">
    <![CDATA[<h2 id="前言">前言</h2><p>点击导航栏标题，会下拉一个View, 同时按钮箭头也会旋转，没写View的拖拽返回</p>
<h2 id="文件">文件</h2><figure class="highlight swift"><table><tr><td class=]]>
    </summary>
    
      <category term="Swift" scheme="http://lecason.com/tags/Swift/"/>
    
      <category term="Swift" scheme="http://lecason.com/categories/Swift/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Swift 创建一个SegmentView]]></title>
    <link href="http://lecason.com/2016/01/25/Swift-Create-a-Segment-Slider-View/"/>
    <id>http://lecason.com/2016/01/25/Swift-Create-a-Segment-Slider-View/</id>
    <published>2016-01-25T06:45:24.000Z</published>
    <updated>2016-01-26T08:09:21.000Z</updated>
    <content type="html"><![CDATA[<h2 id="前言">前言</h2><p>本来想找一个相关的，但Swift没找到好的轮子，自己就造了一个。</p>
<h2 id="主文件">主文件</h2><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//  CSSegmentView.swift</span></span><br><span class="line"><span class="comment">//  ScrollView Test</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//  Created by Lecason on 16/1/25.</span></span><br><span class="line"><span class="comment">//  Copyright © 2016年 Shenzhen WEL Technology Co., Ltd. All rights reserved.</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="type">UIKit</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">CSSegmentView</span>: <span class="title">UIView</span>, <span class="title">UIScrollViewDelegate</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> scrollView: <span class="type">UIScrollView</span>!  <span class="comment">// 滚动内容</span></span><br><span class="line">    <span class="keyword">var</span> scrollWidth: <span class="type">CGFloat</span> = <span class="number">0</span> <span class="comment">// 滚动宽度</span></span><br><span class="line">    <span class="keyword">let</span> scrollViewContentOffset: <span class="type">CGFloat</span> = <span class="number">30</span> <span class="comment">// 按钮高度</span></span><br><span class="line">    <span class="keyword">var</span> scrollHeight: <span class="type">CGFloat</span> = <span class="number">0</span> <span class="comment">// 滚动高度</span></span><br><span class="line">    <span class="keyword">var</span> views = [<span class="type">UIView</span>]() <span class="comment">// 内容页</span></span><br><span class="line">    <span class="keyword">var</span> buttons = [<span class="type">UIButton</span>]() <span class="comment">// 按钮页</span></span><br><span class="line">    <span class="keyword">var</span> line: <span class="type">UIView</span> = <span class="type">UIView</span>() <span class="comment">// 线</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">override</span> <span class="keyword">init</span>(frame: <span class="type">CGRect</span>) &#123;</span><br><span class="line">        <span class="keyword">super</span>.<span class="keyword">init</span>(frame: frame)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    required <span class="keyword">init</span>?(coder aDecoder: <span class="type">NSCoder</span>) &#123;</span><br><span class="line">        <span class="keyword">super</span>.<span class="keyword">init</span>(coder: aDecoder)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    convenience <span class="keyword">init</span>(frame: <span class="type">CGRect</span>, buttons: [<span class="type">UIButton</span>], views: [<span class="type">UIView</span>]) &#123;</span><br><span class="line">        <span class="keyword">self</span>.<span class="keyword">init</span>(frame: frame)</span><br><span class="line">        <span class="keyword">self</span>.views = views</span><br><span class="line">        <span class="keyword">self</span>.buttons = buttons</span><br><span class="line">        <span class="keyword">self</span>.initContentView()</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 设置按钮和内容</span></span><br><span class="line">    <span class="func"><span class="keyword">func</span> <span class="title">initContentView</span><span class="params">()</span></span> &#123;</span><br><span class="line"></span><br><span class="line">        scrollHeight = <span class="keyword">self</span>.frame.height - scrollViewContentOffset</span><br><span class="line">        scrollWidth = <span class="keyword">self</span>.frame.width</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 初使化</span></span><br><span class="line">        scrollView = <span class="type">UIScrollView</span>()</span><br><span class="line">        scrollView.delegate = <span class="keyword">self</span></span><br><span class="line">        scrollView.frame = <span class="type">CGRectMake</span>(<span class="number">0</span>, scrollViewContentOffset, scrollWidth, scrollHeight)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment">// 添加内容</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="number">0</span>..&lt;views.<span class="built_in">count</span> &#123;</span><br><span class="line">            views[i].frame = <span class="type">CGRectMake</span>(<span class="type">CGFloat</span>(i) * scrollWidth, <span class="number">0</span>, scrollWidth, scrollHeight)</span><br><span class="line">            scrollView.addSubview(views[i])</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 添加按钮</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="number">0</span>..&lt;buttons.<span class="built_in">count</span> &#123;</span><br><span class="line">            buttons[i].frame = <span class="type">CGRectMake</span>(<span class="type">CGFloat</span>(i) * scrollView.bounds.width/<span class="type">CGFloat</span>(buttons.<span class="built_in">count</span>), <span class="number">0</span>, scrollWidth/<span class="type">CGFloat</span>(buttons.<span class="built_in">count</span>) , scrollViewContentOffset)</span><br><span class="line">            buttons[i].addTarget(<span class="keyword">self</span>, action: <span class="string">"buttonPress:"</span>, forControlEvents: <span class="type">UIControlEvents</span>.<span class="type">TouchUpInside</span>)</span><br><span class="line">            <span class="keyword">self</span>.addSubview(buttons[i])</span><br><span class="line">            <span class="keyword">self</span>.bringSubviewToFront(buttons[i])</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 线</span></span><br><span class="line">        <span class="keyword">let</span> lineHeigth: <span class="type">CGFloat</span> = <span class="number">1</span></span><br><span class="line">        line = <span class="type">UIView</span>()</span><br><span class="line">        line.backgroundColor = <span class="type">UIColor</span>.whiteColor()</span><br><span class="line">        line.frame = <span class="type">CGRectMake</span>(<span class="number">0</span>, scrollViewContentOffset - lineHeigth, scrollWidth/<span class="type">CGFloat</span>(buttons.<span class="built_in">count</span>), lineHeigth)</span><br><span class="line">        <span class="keyword">self</span>.addSubview(line)</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 设置</span></span><br><span class="line">        scrollView.contentSize = <span class="type">CGSizeMake</span>(scrollWidth * <span class="type">CGFloat</span>(views.<span class="built_in">count</span>), scrollHeight)</span><br><span class="line">        scrollView.showsHorizontalScrollIndicator = <span class="literal">false</span></span><br><span class="line">        scrollView.showsVerticalScrollIndicator = <span class="literal">false</span></span><br><span class="line">        scrollView.pagingEnabled = <span class="literal">true</span></span><br><span class="line">        <span class="keyword">self</span>.addSubview(scrollView)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 点击按钮事件</span></span><br><span class="line">    <span class="func"><span class="keyword">func</span> <span class="title">buttonPress</span><span class="params">(sender: UIButton)</span></span> &#123;</span><br><span class="line">        <span class="keyword">let</span> i = sender.frame.origin.x / sender.frame.width</span><br><span class="line">        scrollView.scrollRectToVisible(<span class="type">CGRectMake</span>(i * scrollView.bounds.width, <span class="number">0</span>, scrollView.bounds.width, scrollHeight), animated: <span class="literal">true</span>)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 线的位置</span></span><br><span class="line">    <span class="func"><span class="keyword">func</span> <span class="title">scrollViewDidScroll</span><span class="params">(scrollView: UIScrollView)</span></span> &#123;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 如果位置在最前和最后就不再移动</span></span><br><span class="line">        <span class="keyword">if</span> scrollView.contentOffset.x &lt; <span class="number">0</span> || scrollView.contentOffset.x &gt; scrollWidth * <span class="type">CGFloat</span>(buttons.<span class="built_in">count</span>  - <span class="number">1</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 线的位置</span></span><br><span class="line">    line.frame = <span class="type">CGRectMake</span>(scrollView.contentOffset.x / <span class="type">CGFloat</span>(buttons.<span class="built_in">count</span>) , line.frame.origin.y, line.frame.width, line.frame.height)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="使用方法">使用方法</h2><p>在外在设置好view和buttons后传入初使化，没有把buttons和view封装在里面。</p>
<figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="type">UIKit</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ViewController</span>: <span class="title">UIViewController</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">override</span> <span class="func"><span class="keyword">func</span> <span class="title">viewDidLoad</span><span class="params">()</span></span> &#123;</span><br><span class="line">        <span class="keyword">super</span>.viewDidLoad()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="keyword">var</span> buttons = [<span class="type">UIButton</span>]()</span><br><span class="line">        <span class="keyword">var</span> views = [<span class="type">UIView</span>]()</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 设置buttons</span></span><br><span class="line">        <span class="keyword">let</span> button1 = <span class="type">UIButton</span>()</span><br><span class="line">        button1.setTitle(<span class="string">"ABC"</span>, forState: <span class="type">UIControlState</span>.<span class="type">Normal</span>)</span><br><span class="line">        button1.backgroundColor = <span class="type">UIColor</span>.blackColor()</span><br><span class="line">        buttons.append(button1)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">let</span> button2 = <span class="type">UIButton</span>()</span><br><span class="line">        button2.setTitle(<span class="string">"FFF"</span>, forState: <span class="type">UIControlState</span>.<span class="type">Normal</span>)</span><br><span class="line">        button2.backgroundColor = <span class="type">UIColor</span>.grayColor()</span><br><span class="line">        buttons.append(button2)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">let</span> button3 = <span class="type">UIButton</span>()</span><br><span class="line">        button3.setTitle(<span class="string">"ABC"</span>, forState: <span class="type">UIControlState</span>.<span class="type">Normal</span>)</span><br><span class="line">        button3.backgroundColor = <span class="type">UIColor</span>.purpleColor()</span><br><span class="line">        buttons.append(button3)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">let</span> button4 = <span class="type">UIButton</span>()</span><br><span class="line">        button4.setTitle(<span class="string">"ABC"</span>, forState: <span class="type">UIControlState</span>.<span class="type">Normal</span>)</span><br><span class="line">        button4.backgroundColor = <span class="type">UIColor</span>.redColor()</span><br><span class="line">        buttons.append(button4)</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 设置views</span></span><br><span class="line">        <span class="keyword">let</span> view1 = <span class="type">UIView</span>()</span><br><span class="line">        view1.backgroundColor = <span class="type">UIColor</span>.redColor()</span><br><span class="line">        views.append(view1)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">let</span> view2 = <span class="type">UIView</span>()</span><br><span class="line">        view2.backgroundColor = <span class="type">UIColor</span>.blueColor()</span><br><span class="line">        views.append(view2)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">let</span> view3 = <span class="type">UIView</span>()</span><br><span class="line">        view3.backgroundColor = <span class="type">UIColor</span>.yellowColor()</span><br><span class="line">        views.append(view3)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">let</span> view4 = <span class="type">UIView</span>()</span><br><span class="line">        view4.backgroundColor = <span class="type">UIColor</span>.greenColor()</span><br><span class="line">        views.append(view4)</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 初使化</span></span><br><span class="line">        <span class="keyword">let</span> cs = <span class="type">CSSegmentView</span>(frame: <span class="type">CGRectMake</span>(<span class="number">60</span>, <span class="number">120</span>, <span class="number">200</span>, <span class="number">300</span>), buttons: buttons, views: views)</span><br><span class="line">        <span class="keyword">self</span>.view.addSubview(cs)</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="效果">效果</h2><p><img src="/img/segmentView1.png" alt=""></p>
<h2 id="修改">修改</h2><p>把外部初使化去掉了</p>
<figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//  CSSegmentView.swift</span></span><br><span class="line"><span class="comment">//  ScrollView Test</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//  Created by Lecason on 16/1/25.</span></span><br><span class="line"><span class="comment">//  Copyright © 2016年 Shenzhen WEL Technology Co., Ltd. All rights reserved.</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="type">UIKit</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">CSSegmentView</span>: <span class="title">UIView</span>, <span class="title">UIScrollViewDelegate</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> scrollView: <span class="type">UIScrollView</span>!  <span class="comment">// 滚动内容</span></span><br><span class="line">    <span class="keyword">var</span> scrollWidth: <span class="type">CGFloat</span> = <span class="number">0</span> <span class="comment">// 滚动宽度</span></span><br><span class="line">    <span class="keyword">let</span> scrollViewContentOffset: <span class="type">CGFloat</span> = <span class="number">30</span> <span class="comment">// 按钮高度</span></span><br><span class="line">    <span class="keyword">var</span> scrollHeight: <span class="type">CGFloat</span> = <span class="number">0</span> <span class="comment">// 滚动高度</span></span><br><span class="line">    <span class="keyword">var</span> views = [<span class="type">UIView</span>]() <span class="comment">// 内容页</span></span><br><span class="line">    <span class="keyword">var</span> buttons = [<span class="type">UIButton</span>]() <span class="comment">// 按钮页</span></span><br><span class="line">    <span class="keyword">var</span> line: <span class="type">UIView</span> = <span class="type">UIView</span>() <span class="comment">// 线</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">override</span> <span class="keyword">init</span>(frame: <span class="type">CGRect</span>) &#123;</span><br><span class="line">        <span class="keyword">super</span>.<span class="keyword">init</span>(frame: frame)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    required <span class="keyword">init</span>?(coder aDecoder: <span class="type">NSCoder</span>) &#123;</span><br><span class="line">        <span class="keyword">super</span>.<span class="keyword">init</span>(coder: aDecoder)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 关闭从外部初使化</span></span><br><span class="line">    private convenience <span class="keyword">init</span>(frame: <span class="type">CGRect</span>, buttons: [<span class="type">UIButton</span>], views: [<span class="type">UIView</span>]) &#123;</span><br><span class="line">        <span class="keyword">self</span>.<span class="keyword">init</span>(frame: frame)</span><br><span class="line">        <span class="keyword">self</span>.views = views</span><br><span class="line">        <span class="keyword">self</span>.buttons = buttons</span><br><span class="line">        <span class="keyword">self</span>.initContentView(<span class="number">0</span>)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 初使化</span></span><br><span class="line">    convenience <span class="keyword">init</span>(frame: <span class="type">CGRect</span>, <span class="built_in">count</span>: <span class="type">Int</span>) &#123;</span><br><span class="line">        <span class="keyword">self</span>.<span class="keyword">init</span>(frame: frame)</span><br><span class="line">        <span class="keyword">self</span>.initContentView(<span class="built_in">count</span>)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 设置按钮和内容</span></span><br><span class="line">    <span class="func"><span class="keyword">func</span> <span class="title">initContentView</span><span class="params">(<span class="built_in">count</span>: Int)</span></span> &#123;</span><br><span class="line"></span><br><span class="line">        scrollHeight = <span class="keyword">self</span>.frame.height - scrollViewContentOffset</span><br><span class="line">        scrollWidth = <span class="keyword">self</span>.frame.width</span><br><span class="line"></span><br><span class="line">        views = <span class="type">Array</span>(<span class="built_in">count</span>: <span class="built_in">count</span>, repeatedValue: <span class="type">UIView</span>())</span><br><span class="line">        buttons = <span class="type">Array</span>(<span class="built_in">count</span>: <span class="built_in">count</span>, repeatedValue: <span class="type">UIButton</span>())</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 初使化</span></span><br><span class="line">        scrollView = <span class="type">UIScrollView</span>()</span><br><span class="line">        scrollView.delegate = <span class="keyword">self</span></span><br><span class="line">        scrollView.frame = <span class="type">CGRectMake</span>(<span class="number">0</span>, scrollViewContentOffset, scrollWidth, scrollHeight)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment">// 添加内容</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="number">0</span>..&lt;<span class="built_in">count</span> &#123;</span><br><span class="line">            <span class="keyword">let</span> view = <span class="type">UIView</span>()</span><br><span class="line">            view.frame = <span class="type">CGRectMake</span>(<span class="type">CGFloat</span>(i) * scrollWidth, <span class="number">0</span>, scrollWidth, scrollHeight)</span><br><span class="line">            views[i] = view</span><br><span class="line">            scrollView.addSubview(views[i])</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 添加按钮</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="number">0</span>..&lt;<span class="built_in">count</span> &#123;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">let</span> button = <span class="type">UIButton</span>()</span><br><span class="line">            button.frame = <span class="type">CGRectMake</span>(<span class="type">CGFloat</span>(i) * scrollView.bounds.width/<span class="type">CGFloat</span>(buttons.<span class="built_in">count</span>), <span class="number">0</span>, scrollWidth/<span class="type">CGFloat</span>(buttons.<span class="built_in">count</span>) , scrollViewContentOffset)</span><br><span class="line">            button.addTarget(<span class="keyword">self</span>, action: <span class="string">"buttonPress:"</span>, forControlEvents: <span class="type">UIControlEvents</span>.<span class="type">TouchUpInside</span>)</span><br><span class="line">            buttons[i] = button</span><br><span class="line">            <span class="keyword">self</span>.addSubview(buttons[i])</span><br><span class="line">            <span class="keyword">self</span>.bringSubviewToFront(buttons[i])</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 线</span></span><br><span class="line">        <span class="keyword">let</span> lineHeigth: <span class="type">CGFloat</span> = <span class="number">1</span></span><br><span class="line">        line = <span class="type">UIView</span>()</span><br><span class="line">        line.backgroundColor = <span class="type">UIColor</span>.whiteColor()</span><br><span class="line">        line.frame = <span class="type">CGRectMake</span>(<span class="number">0</span>, scrollViewContentOffset - lineHeigth, scrollWidth/<span class="type">CGFloat</span>(buttons.<span class="built_in">count</span>), lineHeigth)</span><br><span class="line">        <span class="keyword">self</span>.addSubview(line)</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 设置</span></span><br><span class="line">        scrollView.contentSize = <span class="type">CGSizeMake</span>(scrollWidth * <span class="type">CGFloat</span>(views.<span class="built_in">count</span>), scrollHeight)</span><br><span class="line">        scrollView.showsHorizontalScrollIndicator = <span class="literal">false</span></span><br><span class="line">        scrollView.showsVerticalScrollIndicator = <span class="literal">false</span></span><br><span class="line">        scrollView.pagingEnabled = <span class="literal">true</span></span><br><span class="line">        <span class="keyword">self</span>.addSubview(scrollView)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 点击按钮事件</span></span><br><span class="line">    <span class="func"><span class="keyword">func</span> <span class="title">buttonPress</span><span class="params">(sender: UIButton)</span></span> &#123;</span><br><span class="line">        <span class="keyword">let</span> i = sender.frame.origin.x / sender.frame.width</span><br><span class="line">        scrollView.scrollRectToVisible(<span class="type">CGRectMake</span>(i * scrollView.bounds.width, <span class="number">0</span>, scrollView.bounds.width, scrollHeight), animated: <span class="literal">true</span>)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 线的位置</span></span><br><span class="line">    <span class="func"><span class="keyword">func</span> <span class="title">scrollViewDidScroll</span><span class="params">(scrollView: UIScrollView)</span></span> &#123;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 如果位置在最前和最后就不再移动</span></span><br><span class="line">        <span class="keyword">if</span> scrollView.contentOffset.x &lt; <span class="number">0</span> || scrollView.contentOffset.x &gt; scrollWidth * <span class="type">CGFloat</span>(buttons.<span class="built_in">count</span>  - <span class="number">1</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 线的位置</span></span><br><span class="line">        line.frame = <span class="type">CGRectMake</span>(scrollView.contentOffset.x / <span class="type">CGFloat</span>(buttons.<span class="built_in">count</span>) , line.frame.origin.y, line.frame.width, line.frame.height)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="使用">使用</h2><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="type">UIKit</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ViewController</span>: <span class="title">UIViewController</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">override</span> <span class="func"><span class="keyword">func</span> <span class="title">viewDidLoad</span><span class="params">()</span></span> &#123;</span><br><span class="line">        <span class="keyword">super</span>.viewDidLoad()</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 初使化</span></span><br><span class="line">        <span class="keyword">let</span> cs = <span class="type">CSSegmentView</span>(frame: <span class="type">CGRectMake</span>(<span class="number">60</span>, <span class="number">120</span>, <span class="number">200</span>, <span class="number">300</span>),<span class="built_in">count</span>: <span class="number">3</span>)</span><br><span class="line">        cs.backgroundColor = <span class="type">UIColor</span>.grayColor()</span><br><span class="line">        cs.buttons[<span class="number">1</span>].setTitle(<span class="string">"HI"</span>, forState: <span class="type">UIControlState</span>.<span class="type">Normal</span>)</span><br><span class="line">        cs.buttons[<span class="number">1</span>].backgroundColor = <span class="type">UIColor</span>.purpleColor()</span><br><span class="line">        cs.views[<span class="number">2</span>].backgroundColor = <span class="type">UIColor</span>.blueColor()</span><br><span class="line">        <span class="keyword">self</span>.view.addSubview(cs)</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="效果-1">效果</h2><p><img src="/img/segmentView2.png" alt=""></p>
<h2 id="停止的时候设置按钮字体的颜色">停止的时候设置按钮字体的颜色</h2><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 停止的时候</span></span><br><span class="line"><span class="func"><span class="keyword">func</span> <span class="title">scrollViewDidEndScrollingAnimation</span><span class="params">(scrollView: UIScrollView)</span></span> &#123;</span><br><span class="line">    setButtonColor()</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 停止的时候</span></span><br><span class="line"><span class="func"><span class="keyword">func</span> <span class="title">scrollViewDidEndDecelerating</span><span class="params">(scrollView: UIScrollView)</span></span> &#123;</span><br><span class="line">    setButtonColor()</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 停止的时候设置按钮的颜色 </span></span><br><span class="line"><span class="func"><span class="keyword">func</span> <span class="title">setButtonColor</span><span class="params">()</span></span> &#123;</span><br><span class="line">    <span class="keyword">for</span> button <span class="keyword">in</span> buttons &#123;</span><br><span class="line">        <span class="keyword">if</span> button.frame.origin.x == line.frame.origin.x &#123;</span><br><span class="line">        button.setTitleColor(<span class="type">UIColor</span>.redColor(), forState: <span class="type">UIControlState</span>.<span class="type">Normal</span>)</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        button.setTitleColor(<span class="type">UIColor</span>.whiteColor(), forState: <span class="type">UIControlState</span>.<span class="type">Normal</span>)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
    <summary type="html">
    <![CDATA[<h2 id="前言">前言</h2><p>本来想找一个相关的，但Swift没找到好的轮子，自己就造了一个。</p>
<h2 id="主文件">主文件</h2><figure class="highlight swift"><table><tr><td class="gutter]]>
    </summary>
    
      <category term="Swift" scheme="http://lecason.com/tags/Swift/"/>
    
      <category term="Swift" scheme="http://lecason.com/categories/Swift/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Swift 新浪微博分享Demo]]></title>
    <link href="http://lecason.com/2016/01/23/Swift-Sina-Share-Demo/"/>
    <id>http://lecason.com/2016/01/23/Swift-Sina-Share-Demo/</id>
    <published>2016-01-23T06:55:39.000Z</published>
    <updated>2016-01-23T07:13:03.000Z</updated>
    <content type="html"><![CDATA[<blockquote>
<p>Xcode 版本 Version 7.2 (7C68)<br>SinaWeiBo版本 WEIBO_IOS_SDK V3.1.1</p>
</blockquote>
<h2 id="设置Bundle_ID">设置Bundle ID</h2><p>Apple ID如果没有的话,先随意填写,当获取了合法的Apple ID之后,改回新浪应用基本信息里面填写的Bundle ID。</p>
<h2 id="设置工程回调URL_Scheme">设置工程回调URL Scheme</h2><p><img src="/img/sinashare1.png" alt=""></p>
<h2 id="引入新浪SDK">引入新浪SDK</h2><p><img src="/img/sinashare2.png" alt=""></p>
<h2 id="设置Bridging-Header-h">设置Bridging-Header.h</h2><figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor">#ifndef SinaShareDemo_Bridging_Header_h</span></span><br><span class="line"><span class="preprocessor">#define SinaShareDemo_Bridging_Header_h</span></span><br><span class="line"></span><br><span class="line"><span class="preprocessor">#import <span class="title">"WeiboSDK.h"</span></span></span><br><span class="line"></span><br><span class="line"><span class="preprocessor">#endif /* SinaShareDemo_Bridging_Header_h */</span></span><br></pre></td></tr></table></figure>
<h2 id="设置编译选项">设置编译选项</h2><p>在工程中引⼊入静态库之后,需要在编译时添加 –objC 编译选项,避免静态库中类 加载 不全造成程序崩溃。⽅方法:程序 Target-&gt;Buid Settings-&gt;Linking 下 Other Linker Flags 项添加-ObjC。</p>
<h2 id="注册AppDelegate_并重写handleOpenURL_和_openURL_方法">注册AppDelegate 并重写handleOpenURL 和 openURL 方法</h2><blockquote>
<p>AppDelegate注意要遵从<code>WeiboSDKDelegate</code></p>
</blockquote>
<figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="func"><span class="keyword">func</span> <span class="title">application</span><span class="params">(application: UIApplication, didFinishLaunchingWithOptions launchOptions: [NSObject: AnyObject]?)</span></span> -&gt; <span class="type">Bool</span> &#123;</span><br><span class="line">    <span class="comment">// 注册 Appkey</span></span><br><span class="line">    <span class="type">WeiboSDK</span>.registerApp(sinaAppId)</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 重写 openURL</span></span><br><span class="line"><span class="func"><span class="keyword">func</span> <span class="title">application</span><span class="params">(application: UIApplication, openURL url: NSURL, sourceApplication: String?, annotation: AnyObject)</span></span> -&gt; <span class="type">Bool</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="type">WeiboSDK</span>.handleOpenURL(url, delegate: <span class="keyword">self</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 重写 handleOpenURL</span></span><br><span class="line"><span class="func"><span class="keyword">func</span> <span class="title">application</span><span class="params">(application: UIApplication, handleOpenURL url: NSURL)</span></span> -&gt; <span class="type">Bool</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="type">WeiboSDK</span>.handleOpenURL(url, delegate: <span class="keyword">self</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="开始使用">开始使用</h2><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ViewController</span>: <span class="title">UIViewController</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">override</span> <span class="func"><span class="keyword">func</span> <span class="title">viewDidLoad</span><span class="params">()</span></span> &#123;</span><br><span class="line">    <span class="keyword">super</span>.viewDidLoad()</span><br><span class="line">        <span class="keyword">self</span>.shareSinaWeibo()</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 发送分享请求</span></span><br><span class="line">    <span class="func"><span class="keyword">func</span> <span class="title">shareSinaWeibo</span><span class="params">()</span></span> &#123;</span><br><span class="line">        <span class="keyword">let</span> request = <span class="type">WBSendMessageToWeiboRequest</span>()</span><br><span class="line">        request.message = messageToShare(<span class="string">"Hello"</span>, image: <span class="type">UIImage</span>(named: <span class="string">"hello"</span>)!)</span><br><span class="line">        <span class="type">WeiboSDK</span>.sendRequest(request)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 分享内容</span></span><br><span class="line">    <span class="func"><span class="keyword">func</span> <span class="title">messageToShare</span><span class="params">(text: String, image: UIImage)</span></span> -&gt; <span class="type">WBMessageObject</span> &#123;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 文字内容</span></span><br><span class="line">        <span class="keyword">let</span> message = <span class="type">WBMessageObject</span>.message() <span class="keyword">as</span>! <span class="type">WBMessageObject</span></span><br><span class="line">        message.text = text</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 图片内容</span></span><br><span class="line">        <span class="keyword">let</span> imageObject = <span class="type">WBImageObject</span>()</span><br><span class="line">        imageObject.imageData = <span class="type">UIImagePNGRepresentation</span>(image)</span><br><span class="line">        message.imageObject = imageObject</span><br><span class="line">        <span class="keyword">return</span> message</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="参考资料">参考资料</h1><p><a href="http://open.weibo.com/" target="_blank" rel="external">微博开放平台</a></p>
]]></content>
    <summary type="html">
    <![CDATA[<blockquote>
<p>Xcode 版本 Version 7.2 (7C68)<br>SinaWeiBo版本 WEIBO_IOS_SDK V3.1.1</p>
</blockquote>
<h2 id="设置Bundle_ID">设置Bundle ID</h2><p>Ap]]>
    </summary>
    
      <category term="Swift" scheme="http://lecason.com/tags/Swift/"/>
    
      <category term="Swift" scheme="http://lecason.com/categories/Swift/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Swift QQ分享Demo]]></title>
    <link href="http://lecason.com/2016/01/13/Swift-QQ-Share-Demo/"/>
    <id>http://lecason.com/2016/01/13/Swift-QQ-Share-Demo/</id>
    <published>2016-01-13T12:12:09.000Z</published>
    <updated>2016-01-18T09:05:02.000Z</updated>
    <content type="html"><![CDATA[<h2 id="一、准备工作">一、准备工作</h2><blockquote>
<p>Xcode 版本 Version 7.2 (7C68)<br>QQ SDK iOS_OpenSDK_2.9.5_all</p>
</blockquote>
<h2 id="二、导入相关文件">二、导入相关文件</h2><p><img src="/img/qqshare1.png" alt=""></p>
<h2 id="三、设置URL">三、设置URL</h2><p><img src="/img/qqshare2.png" alt=""></p>
<blockquote>
<p>为了兼容旧版本的手机QQ，需要增加 URL Scheme，QQ + 十六进制新AppId，不足八位在首部补0。（如 appid=222222 则 scheme=QQ0003640E）  <code>如果在这里设置不正确，分享后将不能返回APP</code></p>
</blockquote>
<h2 id="四、修改必要的工程配置属性">四、修改必要的工程配置属性</h2><p>在桥文件里面导入</p>
<figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor">#import <span class="title">&lt;TencentOpenAPI/TencentOAuth.h&gt;</span></span></span><br><span class="line"><span class="preprocessor">#import <span class="title">&lt;TencentOpenAPI/QQApiInterface.h&gt;</span></span></span><br><span class="line"><span class="preprocessor">#import <span class="title">&lt;TencentOpenAPI/QQApiInterfaceObject.h&gt;</span></span></span><br></pre></td></tr></table></figure>
<p>在工程配置中的“Build Settings”一栏中找到“Linking”配置区，给“Other Linker Flags”配置项添加属性值“-fobjc-arc”。</p>
<h2 id="五、重写App_Delegate">五、重写App Delegate</h2><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="func"><span class="keyword">func</span> <span class="title">application</span><span class="params">(application: UIApplication, openURL url: NSURL, sourceApplication: String?, annotation: AnyObject)</span></span> -&gt; <span class="type">Bool</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="type">TencentOAuth</span>.<span class="type">HandleOpenURL</span>(url)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="func"><span class="keyword">func</span> <span class="title">application</span><span class="params">(application: UIApplication, handleOpenURL url: NSURL)</span></span> -&gt; <span class="type">Bool</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="type">TencentOAuth</span>.<span class="type">HandleOpenURL</span>(url)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="六、初使化并使用">六、初使化并使用</h2><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="type">UIKit</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ViewController</span>: <span class="title">UIViewController</span>, <span class="title">TencentSessionDelegate</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> tencentOAuth: <span class="type">TencentOAuth</span>!</span><br><span class="line"></span><br><span class="line">    <span class="keyword">override</span> <span class="func"><span class="keyword">func</span> <span class="title">viewDidLoad</span><span class="params">()</span></span> &#123;</span><br><span class="line">        <span class="keyword">super</span>.viewDidLoad()</span><br><span class="line">        <span class="keyword">self</span>.screenShotMethod()</span><br><span class="line">        <span class="keyword">self</span>.initTencentOuth()</span><br><span class="line">        <span class="keyword">self</span>.sendShareImage()</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 初使化QQ分享接口</span></span><br><span class="line">    <span class="func"><span class="keyword">func</span> <span class="title">initTencentOuth</span><span class="params">()</span></span> &#123;</span><br><span class="line">        tencentOAuth = <span class="type">TencentOAuth</span>(appId: <span class="string">"1234567890"</span>, andDelegate: <span class="keyword">self</span>)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 分享文本消息</span></span><br><span class="line">    <span class="func"><span class="keyword">func</span> <span class="title">sendShareMessage</span><span class="params">(message: String)</span></span> &#123;</span><br><span class="line">        <span class="keyword">let</span> txt = <span class="type">QQApiTextObject</span>.objectWithText(message) <span class="keyword">as</span>! <span class="type">QQApiTextObject</span></span><br><span class="line">        <span class="keyword">let</span> req = <span class="type">SendMessageToQQReq</span>(content: txt)</span><br><span class="line">        <span class="type">QQApiInterface</span>.sendReq(req)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 分享图片消息</span></span><br><span class="line">    <span class="func"><span class="keyword">func</span> <span class="title">sendShareImage</span><span class="params">()</span></span> &#123;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 从沙盒中得到图片数据</span></span><br><span class="line">        <span class="keyword">let</span> documentsPath = <span class="type">NSSearchPathForDirectoriesInDomains</span>(.<span class="type">DocumentDirectory</span>, .<span class="type">UserDomainMask</span>, <span class="literal">true</span>)[<span class="number">0</span>] <span class="keyword">as</span> <span class="type">String</span></span><br><span class="line">        <span class="keyword">let</span> destinationPath = documentsPath + <span class="string">"/detail.jpg"</span></span><br><span class="line">        <span class="keyword">let</span> image = <span class="type">UIImage</span>(contentsOfFile:destinationPath)</span><br><span class="line">        <span class="keyword">let</span> imageData = <span class="type">UIImageJPEGRepresentation</span>(image!, <span class="number">0</span>)</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 分享到QQ</span></span><br><span class="line">        <span class="keyword">let</span> imgObj = <span class="type">QQApiImageObject</span>.objectWithData(imageData, previewImageData: imageData, title: <span class="string">"分享图片"</span>, description: <span class="string">"截图"</span>) <span class="keyword">as</span>! <span class="type">QQApiObject</span></span><br><span class="line">        <span class="keyword">let</span> req = <span class="type">SendMessageToQQReq</span>(content: imgObj)</span><br><span class="line">        <span class="type">QQApiInterface</span>.sendReq(req)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// MARK: QQ分享代理</span></span><br><span class="line"></span><br><span class="line">    <span class="func"><span class="keyword">func</span> <span class="title">tencentDidLogin</span><span class="params">()</span></span> &#123;</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">"登录AccessToken : <span class="subst">\(tencentOAuth.accessToken)</span>"</span>)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="func"><span class="keyword">func</span> <span class="title">tencentDidNotLogin</span><span class="params">(cancelled: Bool)</span></span> &#123;</span><br><span class="line">        <span class="keyword">if</span> cancelled &#123; <span class="built_in">print</span>(<span class="string">"用户取消登录"</span>) &#125;</span><br><span class="line">        <span class="keyword">else</span> &#123; <span class="built_in">print</span>(<span class="string">"等录失败"</span>) &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="func"><span class="keyword">func</span> <span class="title">tencentDidNotNetWork</span><span class="params">()</span></span> &#123;</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">"无网络连接，请设置网络"</span>)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 截图并保存图片到沙盒</span></span><br><span class="line">    <span class="func"><span class="keyword">func</span> <span class="title">screenShotMethod</span><span class="params">()</span></span> &#123;</span><br><span class="line">        <span class="comment">// 截图</span></span><br><span class="line">        <span class="type">UIGraphicsBeginImageContext</span>(view.frame.size)</span><br><span class="line">        view.layer.renderInContext(<span class="type">UIGraphicsGetCurrentContext</span>()!)</span><br><span class="line">        <span class="keyword">let</span> image = <span class="type">UIGraphicsGetImageFromCurrentImageContext</span>()</span><br><span class="line">        <span class="type">UIGraphicsEndImageContext</span>()</span><br><span class="line">        <span class="comment">// 保存</span></span><br><span class="line">        <span class="keyword">let</span> documentsPath = <span class="type">NSSearchPathForDirectoriesInDomains</span>(.<span class="type">DocumentDirectory</span>, .<span class="type">UserDomainMask</span>, <span class="literal">true</span>)[<span class="number">0</span>] <span class="keyword">as</span> <span class="type">String</span></span><br><span class="line">        <span class="keyword">let</span> destinationPath = documentsPath + <span class="string">"/detail.jpg"</span></span><br><span class="line">        <span class="type">UIImageJPEGRepresentation</span>(image,<span class="number">1.0</span>)!.writeToFile(destinationPath, atomically: <span class="literal">true</span>)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    <summary type="html">
    <![CDATA[<h2 id="一、准备工作">一、准备工作</h2><blockquote>
<p>Xcode 版本 Version 7.2 (7C68)<br>QQ SDK iOS_OpenSDK_2.9.5_all</p>
</blockquote>
<h2 id="二、导入相关文件">二]]>
    </summary>
    
      <category term="Swift" scheme="http://lecason.com/tags/Swift/"/>
    
      <category term="Swift" scheme="http://lecason.com/categories/Swift/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[iOS 创建二维码]]></title>
    <link href="http://lecason.com/2016/01/12/iOS-qrcode-generator/"/>
    <id>http://lecason.com/2016/01/12/iOS-qrcode-generator/</id>
    <published>2016-01-12T08:33:59.000Z</published>
    <updated>2016-01-12T08:58:49.000Z</updated>
    <content type="html"><![CDATA[<p>试了几个创建两维码的方法都是不能保存到手机相册里面的。猜想应该是生成图片格式问题。最后找到一个可以的，顺便转成Swift版本。</p>
<h2 id="Objective_C_版本">Objective C 版本</h2><figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span><br><span class="line">*  创建二维码</span><br><span class="line">*</span><br><span class="line">*  @param text 二维码文字</span><br><span class="line">*  @param size  二维码大小</span><br><span class="line">*/</span></span><br><span class="line">- (<span class="built_in">UIImage</span> *)generatorQRCode:(<span class="built_in">NSString</span> *)text withSize:(<span class="built_in">CGFloat</span>)size</span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">// 1.实例化二维码滤镜</span></span><br><span class="line">    <span class="built_in">CIFilter</span> *filter = [<span class="built_in">CIFilter</span> filterWithName:<span class="string">@"CIQRCodeGenerator"</span>];</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 2.恢复滤镜的默认属性</span></span><br><span class="line">    [filter setDefaults];</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 3.将字符串转成二进制数据</span></span><br><span class="line">    <span class="built_in">NSData</span> *data = [text dataUsingEncoding:<span class="built_in">NSUTF8StringEncoding</span>];</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 4.通过KVC设置滤镜inputMessage数据</span></span><br><span class="line">    [filter setValue:data forKey:<span class="string">@"inputMessage"</span>];</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 5.获取滤镜输出的图像</span></span><br><span class="line">    <span class="built_in">CIImage</span> *outputImage = [filter outputImage];</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 6.将CIImage转成UIImage</span></span><br><span class="line">    <span class="built_in">UIImage</span> *image = [<span class="keyword">self</span> createNonInterpolated<span class="built_in">UIImageFormCIImage</span>:outputImage withSize:size];</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 7.返回二维码</span></span><br><span class="line">    <span class="keyword">return</span> image;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span><br><span class="line">*  根据CIImage生成指定大小的UIImage</span><br><span class="line">*</span><br><span class="line">*  @param image CIImage</span><br><span class="line">*  @param size  图片宽度</span><br><span class="line">*/</span></span><br><span class="line">- (<span class="built_in">UIImage</span> *)createNonInterpolated<span class="built_in">UIImageFormCIImage</span>:(<span class="built_in">CIImage</span> *)image withSize:(<span class="built_in">CGFloat</span>) size</span><br><span class="line">    &#123;</span><br><span class="line">    <span class="built_in">CGRect</span> extent = <span class="built_in">CGRectIntegral</span>(image<span class="variable">.extent</span>);</span><br><span class="line">    <span class="built_in">CGFloat</span> scale = MIN(size/<span class="built_in">CGRectGetWidth</span>(extent), size/<span class="built_in">CGRectGetHeight</span>(extent));</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 1.创建bitmap;</span></span><br><span class="line">    size_t width = <span class="built_in">CGRectGetWidth</span>(extent) * scale;</span><br><span class="line">    size_t height = <span class="built_in">CGRectGetHeight</span>(extent) * scale;</span><br><span class="line">    <span class="built_in">CGColorSpaceRef</span> cs = <span class="built_in">CGColorSpaceCreateDeviceGray</span>();</span><br><span class="line">    <span class="built_in">CGContextRef</span> bitmapRef = <span class="built_in">CGBitmapContextCreate</span>(<span class="literal">nil</span>, width, height, <span class="number">8</span>, <span class="number">0</span>, cs, (<span class="built_in">CGBitmapInfo</span>)k<span class="built_in">CGImageAlphaNone</span>);</span><br><span class="line">    <span class="built_in">CIContext</span> *context = [<span class="built_in">CIContext</span> contextWithOptions:<span class="literal">nil</span>];</span><br><span class="line">    <span class="built_in">CGImageRef</span> bitmapImage = [context create<span class="built_in">CGImage</span>:image fromRect:extent];</span><br><span class="line">    <span class="built_in">CGContextSetInterpolationQuality</span>(bitmapRef, k<span class="built_in">CGInterpolationNone</span>);</span><br><span class="line">    <span class="built_in">CGContextScaleCTM</span>(bitmapRef, scale, scale);</span><br><span class="line">    <span class="built_in">CGContextDrawImage</span>(bitmapRef, extent, bitmapImage);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 2.保存bitmap到图片</span></span><br><span class="line">    <span class="built_in">CGImageRef</span> scaledImage = <span class="built_in">CGBitmapContextCreateImage</span>(bitmapRef);</span><br><span class="line">    <span class="built_in">CGContextRelease</span>(bitmapRef);</span><br><span class="line">    <span class="built_in">CGImageRelease</span>(bitmapImage);</span><br><span class="line">    <span class="keyword">return</span> [<span class="built_in">UIImage</span> imageWith<span class="built_in">CGImage</span>:scaledImage];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="Swift_版本">Swift 版本</h2><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 生成两维码</span></span><br><span class="line"><span class="func"><span class="keyword">func</span> <span class="title">generatorQRCode</span><span class="params">(text: String, size: CGFloat)</span></span> -&gt; <span class="type">UIImage</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">let</span> <span class="built_in">filter</span> = <span class="type">CIFilter</span>(name: <span class="string">"CIQRCodeGenerator"</span>)</span><br><span class="line">    <span class="built_in">filter</span>?.setDefaults()</span><br><span class="line">    <span class="keyword">let</span> data = text.dataUsingEncoding(<span class="type">NSUTF8StringEncoding</span>)</span><br><span class="line">    <span class="built_in">filter</span>?.setValue(data, forKey: <span class="string">"inputMessage"</span>)</span><br><span class="line">    <span class="keyword">let</span> outputImage = <span class="built_in">filter</span>?.outputImage</span><br><span class="line">    <span class="keyword">let</span> image = <span class="keyword">self</span>.createNonInterpolatedUIImageFormCIImage(outputImage!, size: size)</span><br><span class="line">    <span class="keyword">return</span> image</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 保存二维码</span></span><br><span class="line"><span class="func"><span class="keyword">func</span> <span class="title">createNonInterpolatedUIImageFormCIImage</span><span class="params">(image: CIImage, size: CGFloat)</span></span> -&gt; <span class="type">UIImage</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">let</span> extent = <span class="type">CGRectIntegral</span>(image.extent)</span><br><span class="line">    <span class="keyword">let</span> scale = <span class="built_in">min</span>(size / <span class="type">CGRectGetWidth</span>(extent), size / <span class="type">CGRectGetHeight</span>(extent))</span><br><span class="line">    <span class="keyword">let</span> width = <span class="type">CGRectGetWidth</span>(extent) * scale</span><br><span class="line">    <span class="keyword">let</span> height = <span class="type">CGRectGetHeight</span>(extent) * scale</span><br><span class="line">    <span class="keyword">let</span> cs = <span class="type">CGColorSpaceCreateDeviceGray</span>()</span><br><span class="line">    <span class="keyword">let</span> bitmapRef = <span class="type">CGBitmapContextCreate</span>(<span class="literal">nil</span>, <span class="type">Int</span>(width), <span class="type">Int</span>(height), <span class="number">8</span>, <span class="number">0</span>, cs, <span class="type">CGImageAlphaInfo</span>.<span class="type">None</span>.rawValue)</span><br><span class="line">    <span class="keyword">let</span> context = <span class="type">CIContext</span>(options: <span class="literal">nil</span>)</span><br><span class="line">    <span class="keyword">let</span> bitmapImage = context.createCGImage(image, fromRect: extent)</span><br><span class="line">    <span class="type">CGContextSetInterpolationQuality</span>(bitmapRef, <span class="type">CGInterpolationQuality</span>.<span class="type">None</span>)</span><br><span class="line">    <span class="type">CGContextScaleCTM</span>(bitmapRef, scale, scale);</span><br><span class="line">    <span class="type">CGContextDrawImage</span>(bitmapRef, extent, bitmapImage);</span><br><span class="line">    <span class="keyword">let</span> scaledImage = <span class="type">CGBitmapContextCreateImage</span>(bitmapRef)</span><br><span class="line">    <span class="keyword">let</span> retrunImage = <span class="type">UIImage</span>(<span class="type">CGImage</span>: scaledImage!)</span><br><span class="line">    <span class="keyword">return</span> retrunImage</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>用上面方法创建的二维码就可以用下面的方法来把创建的图片保存到手机相册里面。</p>
<figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">UIImageWriteToSavedPhotosAlbum</span>(image, <span class="literal">nil</span>, <span class="literal">nil</span>, <span class="literal">nil</span>)</span><br></pre></td></tr></table></figure>
<h1 id="参考资料">参考资料</h1><p><a href="http://www.jianshu.com/p/4d42c15b4c1f" target="_blank" rel="external">YotrolZ 二维码</a></p>
]]></content>
    <summary type="html">
    <![CDATA[<p>试了几个创建两维码的方法都是不能保存到手机相册里面的。猜想应该是生成图片格式问题。最后找到一个可以的，顺便转成Swift版本。</p>
<h2 id="Objective_C_版本">Objective C 版本</h2><figure class="highlight o]]>
    </summary>
    
      <category term="iOS" scheme="http://lecason.com/tags/iOS/"/>
    
      <category term="iOS" scheme="http://lecason.com/categories/iOS/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Swift 微信登录Demo]]></title>
    <link href="http://lecason.com/2016/01/09/iOS-Wechat-Login-Pure-Demo/"/>
    <id>http://lecason.com/2016/01/09/iOS-Wechat-Login-Pure-Demo/</id>
    <published>2016-01-09T02:30:22.000Z</published>
    <updated>2016-01-13T07:50:07.000Z</updated>
    <content type="html"><![CDATA[<h2 id="一、_准备工作">一、 准备工作</h2><blockquote>
<p>Xcode 版本 <code>Version 7.2 (7C68)</code><br>WeChatSKD <code>SDK1.6.2</code></p>
</blockquote>
<ol>
<li>到<a href="https://open.weixin.qq.com" target="_blank" rel="external">微信开放平台</a>注册账号并得到登录的权限。</li>
</ol>
<h2 id="二、_导入相关文件">二、 导入相关文件</h2><h3 id="导入SDK">导入SDK</h3><p><img src="/img/wechat1.png" alt=""></p>
<h3 id="创建桥接文件Wechat-Bridging-Header-h">创建桥接文件<code>Wechat-Bridging-Header.h</code></h3><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">#ifndef <span class="type">Wechat_Bridging_Header_h</span></span><br><span class="line">#define <span class="type">Wechat_Bridging_Header_h</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">@<span class="keyword">import</span> <span class="type">UIKit</span>;</span><br><span class="line">#<span class="keyword">import</span> <span class="string">"WXApiObject.h"</span></span><br><span class="line">#<span class="keyword">import</span> <span class="string">"WXApi.h"</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#endif <span class="comment">/* Wechat_Bridging_Header_h */</span></span><br></pre></td></tr></table></figure>
<h3 id="建立连接地址_$(SRCROOT)/Wechat/Wechat-Bridging-Header-h">建立连接地址 <code>$(SRCROOT)/Wechat/Wechat-Bridging-Header.h</code></h3><p><img src="/img/wechat2.png" alt=""></p>
<h3 id="导入相关的库">导入相关的库</h3><p><img src="/img/wechat3.png" alt=""></p>
<h3 id="设置Url_schame">设置Url schame</h3><p><img src="/img/wechat4.png" alt=""></p>
<h3 id="在文本文件里面打开_Info-plist_并添加内容">在文本文件里面打开 <code>Info.plist</code> 并添加内容</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&lt;key&gt;LSApplicationQueriesSchemes&lt;/key&gt;</span><br><span class="line">&lt;array&gt;</span><br><span class="line">&lt;string&gt;weixin&lt;/string&gt;</span><br><span class="line">&lt;/array&gt;</span><br><span class="line">&lt;key&gt;NSAppTransportSecurity&lt;/key&gt;</span><br><span class="line">&lt;dict&gt;</span><br><span class="line">&lt;key&gt;NSAllowsArbitraryLoads&lt;/key&gt;</span><br><span class="line">&lt;<span class="literal">true</span>/&gt;</span><br><span class="line">&lt;/dict&gt;</span><br></pre></td></tr></table></figure>
<p><img src="/img/wechat5.png" alt=""></p>
<h3 id="在Appdelegate里面添加微信代理">在Appdelegate里面添加微信代理</h3><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">AppDelegate</span>: <span class="title">UIResponder</span>, <span class="title">UIApplicationDelegate</span>, <span class="title">WXApiDelegate</span></span></span><br></pre></td></tr></table></figure>
<h3 id="在Appdelegate注册微信ID">在Appdelegate注册微信ID</h3><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="func"><span class="keyword">func</span> <span class="title">application</span><span class="params">(application: UIApplication, didFinishLaunchingWithOptions launchOptions: [NSObject: AnyObject]?)</span></span> -&gt; <span class="type">Bool</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="type">WXApi</span>.registerApp(<span class="string">"Weixin_AppID"</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="literal">true</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="重写AppDelegate方法">重写AppDelegate方法</h3><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="func"><span class="keyword">func</span> <span class="title">application</span><span class="params">(application: UIApplication, openURL url: NSURL, sourceApplication: String?, annotation: AnyObject)</span></span> -&gt; <span class="type">Bool</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="type">WXApi</span>.handleOpenURL(url, delegate: <span class="keyword">self</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="func"><span class="keyword">func</span> <span class="title">application</span><span class="params">(application: UIApplication, handleOpenURL url: NSURL)</span></span> -&gt; <span class="type">Bool</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="type">WXApi</span>.handleOpenURL(url, delegate: <span class="keyword">self</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="在AppDelegate里面处理WeixDelegate">在AppDelegate里面处理WeixDelegate</h3><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="func"><span class="keyword">func</span> <span class="title">onReq</span><span class="params">(req: BaseReq!)</span></span> &#123;</span><br><span class="line">    <span class="comment">//onReq是微信终端向第三方程序发起请求，要求第三方程序响应。第三方程序响应完后必须调用sendRsp返回。在调用sendRsp返回时，会切回到微信终端程序界面。</span></span><br><span class="line">    <span class="built_in">print</span>(req.type)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="func"><span class="keyword">func</span> <span class="title">onResp</span><span class="params">(resp: BaseResp!)</span></span> &#123;</span><br><span class="line"><span class="comment">//如果第三方程序向微信发送了sendReq的请求，那么onResp会被回调。sendReq请求调用后，会切到微信终端程序界面。</span></span><br><span class="line">    <span class="keyword">if</span> resp.isKindOfClass(<span class="type">SendAuthResp</span>) &#123;</span><br><span class="line">        <span class="keyword">let</span> response = resp <span class="keyword">as</span>! <span class="type">SendAuthResp</span></span><br><span class="line">        <span class="built_in">print</span>(<span class="string">"ErrCode : <span class="subst">\(response.errCode)</span>"</span>)</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">"EodeStr : <span class="subst">\(response.errStr)</span>"</span>)</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">"Code : <span class="subst">\(response.code)</span>"</span>)</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">"State : <span class="subst">\(response.state)</span>"</span>)</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">"Lang : <span class="subst">\(response.lang)</span>"</span>)</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">"Country : <span class="subst">\(response.country)</span>"</span>)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="发起微信登录请求">发起微信登录请求</h3><p>这时候，在iPhone上应该就会跳转到微信界面了。</p>
<figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">override</span> <span class="func"><span class="keyword">func</span> <span class="title">viewDidLoad</span><span class="params">()</span></span> &#123;</span><br><span class="line">    <span class="keyword">super</span>.viewDidLoad()</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 微信登录请求</span></span><br><span class="line">    <span class="keyword">let</span> req = <span class="type">SendAuthReq</span>()</span><br><span class="line">    req.scope = <span class="string">"snsapi_userinfo"</span></span><br><span class="line">    req.state = <span class="string">"123"</span></span><br><span class="line">    <span class="type">WXApi</span>.sendReq(req)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>这时修改App就会跳转到微信，点击确定后，返回代理就会打印相关的信息：</p>
<p><img src="/img/wechat0.jpeg" alt=""></p>
<figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ErrCode : 0&#10;EodeStr : nil&#10;Code : 041xxxx4b4b65740xxxx202dc4xxxxcQ&#10;State : 123&#10;Lang : nil&#10;Country : nil</span><br></pre></td></tr></table></figure>
<h3 id="从得到的Code中请求Access_Token">从得到的Code中请求Access_Token</h3><p>请求地址：</p>
<p><img src="/img/wechat6.png" alt=""></p>
<h3 id="发送图片分享">发送图片分享</h3><p>截屏并保存图片到沙盒</p>
<figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="func"><span class="keyword">func</span> <span class="title">screenShotMethod</span><span class="params">()</span></span> &#123;</span><br><span class="line">    <span class="comment">// 截图</span></span><br><span class="line">    <span class="type">UIGraphicsBeginImageContext</span>(view.frame.size)</span><br><span class="line">    view.layer.renderInContext(<span class="type">UIGraphicsGetCurrentContext</span>()!)</span><br><span class="line">    <span class="keyword">let</span> image = <span class="type">UIGraphicsGetImageFromCurrentImageContext</span>()</span><br><span class="line">    <span class="type">UIGraphicsEndImageContext</span>()</span><br><span class="line">    <span class="comment">// 保存</span></span><br><span class="line">    <span class="keyword">let</span> documentsPath = <span class="type">NSSearchPathForDirectoriesInDomains</span>(.<span class="type">DocumentDirectory</span>, .<span class="type">UserDomainMask</span>, <span class="literal">true</span>)[<span class="number">0</span>] <span class="keyword">as</span> <span class="type">String</span></span><br><span class="line">    <span class="keyword">let</span> destinationPath = documentsPath + <span class="string">"/detail.jpg"</span></span><br><span class="line">    <span class="type">UIImageJPEGRepresentation</span>(image,<span class="number">1.0</span>)!.writeToFile(destinationPath, atomically: <span class="literal">true</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>从沙盒读取图片并分享</p>
<figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="func"><span class="keyword">func</span> <span class="title">share</span><span class="params">()</span></span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">let</span> message =  <span class="type">WXMediaMessage</span>()</span><br><span class="line"></span><br><span class="line">    <span class="comment">//发送的图片</span></span><br><span class="line">    <span class="keyword">let</span> documentsPath = <span class="type">NSSearchPathForDirectoriesInDomains</span>(.<span class="type">DocumentDirectory</span>, .<span class="type">UserDomainMask</span>, <span class="literal">true</span>)[<span class="number">0</span>] <span class="keyword">as</span> <span class="type">String</span></span><br><span class="line">    <span class="keyword">let</span> destinationPath = documentsPath + <span class="string">"/detail.jpg"</span></span><br><span class="line">    <span class="keyword">let</span> image = <span class="type">UIImage</span>(contentsOfFile:destinationPath)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">let</span> imageObject =  <span class="type">WXImageObject</span>()</span><br><span class="line">    imageObject.imageData = <span class="type">UIImagePNGRepresentation</span>(image!)</span><br><span class="line">    message.mediaObject = imageObject</span><br><span class="line"></span><br><span class="line">    <span class="comment">//图片缩略图</span></span><br><span class="line">    <span class="keyword">let</span> width = <span class="number">240.0</span> <span class="keyword">as</span> <span class="type">CGFloat</span></span><br><span class="line">    <span class="keyword">let</span> height = width*image!.size.height/image!.size.width</span><br><span class="line">    <span class="type">UIGraphicsBeginImageContext</span>(<span class="type">CGSizeMake</span>(width, height))</span><br><span class="line">    image!.drawInRect(<span class="type">CGRectMake</span>(<span class="number">0</span>, <span class="number">0</span>, width, height))</span><br><span class="line">    message.setThumbImage(<span class="type">UIGraphicsGetImageFromCurrentImageContext</span>())</span><br><span class="line">    <span class="type">UIGraphicsEndImageContext</span>()</span><br><span class="line"></span><br><span class="line">    <span class="keyword">let</span> req =  <span class="type">SendMessageToWXReq</span>()</span><br><span class="line">    req.bText = <span class="literal">false</span></span><br><span class="line">    req.message = message</span><br><span class="line">    req.scene = <span class="type">Int32</span>(<span class="type">WXSceneTimeline</span>.rawValue)</span><br><span class="line">    <span class="type">WXApi</span>.sendReq(req)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="参考资料">参考资料</h1><p><a href="https://open.weixin.qq.com/cgi-bin/showdocument?action=dir_list&amp;t=resource/res_list&amp;verify=1&amp;id=1417694084&amp;token=&amp;lang=zh_CN" target="_blank" rel="external">微信官方文档《iOS接入指南》</a><br><a href="https://open.weixin.qq.com/zh_CN/htmledition/res/dev/document/sdk/ios/index.html" target="_blank" rel="external">微信iOS SDK文档</a></p>
]]></content>
    <summary type="html">
    <![CDATA[<h2 id="一、_准备工作">一、 准备工作</h2><blockquote>
<p>Xcode 版本 <code>Version 7.2 (7C68)</code><br>WeChatSKD <code>SDK1.6.2</code></p>
</blockquote>
<]]>
    </summary>
    
      <category term="iOS" scheme="http://lecason.com/tags/iOS/"/>
    
      <category term="Swift" scheme="http://lecason.com/categories/Swift/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[iOS 自定义每个ViewController支持的旋转方向]]></title>
    <link href="http://lecason.com/2016/01/02/iOS-Custom-Device-Orientation/"/>
    <id>http://lecason.com/2016/01/02/iOS-Custom-Device-Orientation/</id>
    <published>2016-01-02T03:58:43.000Z</published>
    <updated>2016-01-02T04:04:16.000Z</updated>
    <content type="html"><![CDATA[<p>首先在项目设置里勾选所有页面支持的方向：</p>
<p><img src="http://i.stack.imgur.com/l9mjW.png" alt=""></p>
<p>然后设置每一个想自定义的ViewController重写方法：</p>
<figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 如果是这几个方向就自动旋转</span></span><br><span class="line"><span class="keyword">override</span> <span class="func"><span class="keyword">func</span> <span class="title">shouldAutorotate</span><span class="params">()</span></span> -&gt; <span class="type">Bool</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="type">UIDevice</span>.currentDevice().orientation == <span class="type">UIDeviceOrientation</span>.<span class="type">Portrait</span> ||</span><br><span class="line">        <span class="type">UIDevice</span>.currentDevice().orientation == <span class="type">UIDeviceOrientation</span>.<span class="type">Unknown</span> ||</span><br><span class="line">        <span class="type">UIDevice</span>.currentDevice().orientation == <span class="type">UIDeviceOrientation</span>.<span class="type">LandscapeRight</span> ||</span><br><span class="line">        <span class="type">UIDevice</span>.currentDevice().orientation == <span class="type">UIDeviceOrientation</span>.<span class="type">LandscapeLeft</span></span><br><span class="line">    ) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 这个ViewController所支持的方向</span></span><br><span class="line"><span class="keyword">override</span> <span class="func"><span class="keyword">func</span> <span class="title">supportedInterfaceOrientations</span><span class="params">()</span></span> -&gt; <span class="type">UIInterfaceOrientationMask</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> [<span class="type">UIInterfaceOrientationMask</span>.<span class="type">Landscape</span>]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="参考资料">参考资料</h2><p><a href="http://stackoverflow.com/questions/25651969/setting-device-orientation-in-swift-ios" target="_blank" rel="external">Setting device orientation in Swift iOS</a></p>
]]></content>
    <summary type="html">
    <![CDATA[<p>首先在项目设置里勾选所有页面支持的方向：</p>
<p><img src="http://i.stack.imgur.com/l9mjW.png" alt=""></p>
<p>然后设置每一个想自定义的ViewController重写方法：</p>
<figure clas]]>
    </summary>
    
      <category term="iOS" scheme="http://lecason.com/tags/iOS/"/>
    
      <category term="iOS" scheme="http://lecason.com/categories/iOS/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[iOS 关于UIAlertController]]></title>
    <link href="http://lecason.com/2015/12/25/iOS-About-AlertController/"/>
    <id>http://lecason.com/2015/12/25/iOS-About-AlertController/</id>
    <published>2015-12-25T01:40:51.000Z</published>
    <updated>2016-01-12T03:28:17.000Z</updated>
    <content type="html"><![CDATA[<p>iOS8.0 有了个UIAlertController,感觉挺好用的。</p>
<p>用UIAlertController实现一个类似UIActionSheet的效果：</p>
<figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="func"><span class="keyword">func</span> <span class="title">moreAction</span><span class="params">()</span></span> &#123;</span><br><span class="line">    <span class="keyword">let</span> alertController = <span class="type">UIAlertController</span>(title: <span class="literal">nil</span>, message: <span class="literal">nil</span>, preferredStyle: <span class="type">UIAlertControllerStyle</span>.<span class="type">ActionSheet</span>)</span><br><span class="line">    <span class="keyword">let</span> cancelAction = <span class="type">UIAlertAction</span>(title: <span class="string">"取消"</span>,</span><br><span class="line">    style: <span class="type">UIAlertActionStyle</span>.<span class="type">Cancel</span>, handler: &#123; (action: <span class="type">UIAlertAction</span>) -&gt; <span class="type">Void</span> <span class="keyword">in</span></span><br><span class="line">    &#125;)</span><br><span class="line">    <span class="keyword">let</span> indexAction = <span class="type">UIAlertAction</span>(title: <span class="string">"于主页显示并操作"</span>,</span><br><span class="line">    style: <span class="type">UIAlertActionStyle</span>.<span class="type">Default</span>, handler: &#123; (action: <span class="type">UIAlertAction</span>) -&gt; <span class="type">Void</span> <span class="keyword">in</span></span><br><span class="line">    &#125;)</span><br><span class="line">    <span class="keyword">let</span> managerAction = <span class="type">UIAlertAction</span>(title: <span class="string">"用户管理"</span>,</span><br><span class="line">    style: <span class="type">UIAlertActionStyle</span>.<span class="type">Default</span>, handler: &#123; (action: <span class="type">UIAlertAction</span>) -&gt; <span class="type">Void</span> <span class="keyword">in</span></span><br><span class="line"></span><br><span class="line">    &#125;)</span><br><span class="line">    <span class="keyword">let</span> gpsAction = <span class="type">UIAlertAction</span>(title: <span class="string">"GPS定位"</span>,</span><br><span class="line">    style: <span class="type">UIAlertActionStyle</span>.<span class="type">Default</span>, handler: &#123; (action: <span class="type">UIAlertAction</span>) -&gt; <span class="type">Void</span> <span class="keyword">in</span></span><br><span class="line"></span><br><span class="line">    &#125;)</span><br><span class="line">    <span class="keyword">let</span> renameAction = <span class="type">UIAlertAction</span>(title: <span class="string">"重命名"</span>,</span><br><span class="line">    style: <span class="type">UIAlertActionStyle</span>.<span class="type">Default</span>, handler: &#123; (action: <span class="type">UIAlertAction</span>) -&gt; <span class="type">Void</span> <span class="keyword">in</span></span><br><span class="line"></span><br><span class="line">    &#125;)</span><br><span class="line">    <span class="keyword">let</span> qrAction = <span class="type">UIAlertAction</span>(title: <span class="string">"保存二维码"</span>,</span><br><span class="line">    style: <span class="type">UIAlertActionStyle</span>.<span class="type">Default</span>, handler: &#123; (action: <span class="type">UIAlertAction</span>) -&gt; <span class="type">Void</span> <span class="keyword">in</span></span><br><span class="line"></span><br><span class="line">    &#125;)</span><br><span class="line">    alertController.addAction(cancelAction)</span><br><span class="line">    alertController.addAction(indexAction)</span><br><span class="line">    alertController.addAction(managerAction)</span><br><span class="line">    alertController.addAction(gpsAction)</span><br><span class="line">    alertController.addAction(renameAction)</span><br><span class="line">    alertController.addAction(qrAction)</span><br><span class="line">    <span class="keyword">self</span>.presentViewController(alertController, animated: <span class="literal">true</span>, completion: <span class="literal">nil</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>效果:<br><img src="/img/alertviewcontroller1.png" alt=""></p>
<p>实现一个类似UIAlertView的效果：</p>
<figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> alertController = <span class="type">UIAlertController</span>(title: <span class="string">"重置滤网使用时间？"</span>, message: <span class="string">"请确保已更换新的滤网"</span>, preferredStyle: <span class="type">UIAlertControllerStyle</span>.<span class="type">Alert</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> cancelAction = <span class="type">UIAlertAction</span>(title: <span class="string">"取消"</span>, style: <span class="type">UIAlertActionStyle</span>.<span class="type">Cancel</span>) &#123; (action) -&gt; <span class="type">Void</span> <span class="keyword">in</span></span><br><span class="line">    <span class="comment">// 方法</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> comfirmAction = <span class="type">UIAlertAction</span>(title: <span class="string">"好的"</span>, style: <span class="type">UIAlertActionStyle</span>.<span class="type">Default</span>) &#123; (action) -&gt; <span class="type">Void</span> <span class="keyword">in</span></span><br><span class="line">    <span class="comment">// 方法</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">alertController.addAction(cancelAction)</span><br><span class="line">alertController.addAction(comfirmAction)</span><br><span class="line"></span><br><span class="line"><span class="keyword">self</span>.presentViewController(alertController, animated: <span class="literal">true</span>, completion: <span class="literal">nil</span>)</span><br></pre></td></tr></table></figure>
<p>效果:<br><img src="/img/alertviewcontroller2.png" alt=""></p>
]]></content>
    <summary type="html">
    <![CDATA[<p>iOS8.0 有了个UIAlertController,感觉挺好用的。</p>
<p>用UIAlertController实现一个类似UIActionSheet的效果：</p>
<figure class="highlight swift"><table><tr><td c]]>
    </summary>
    
      <category term="iOS" scheme="http://lecason.com/tags/iOS/"/>
    
      <category term="iOS" scheme="http://lecason.com/categories/iOS/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[iOS 讯飞语音识别极简Demo]]></title>
    <link href="http://lecason.com/2015/12/21/iOS-Xunfei/"/>
    <id>http://lecason.com/2015/12/21/iOS-Xunfei/</id>
    <published>2015-12-20T17:08:29.000Z</published>
    <updated>2015-12-30T17:14:12.000Z</updated>
    <content type="html"><![CDATA[<h2 id="导入头文件">导入头文件</h2><p>从<a href="http://www.xfyun.cn" target="_blank" rel="external">迅飞开发者平台</a>下载SDK，和导入SDK所要的库。引入头文件，以及遵从代理。</p>
<figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor">#import <span class="title">&lt;UIKit/UIKit.h&gt;</span></span></span><br><span class="line"><span class="preprocessor">#import <span class="title">"iflyMSC/iflyMSC.h"</span></span></span><br><span class="line"><span class="preprocessor">#import <span class="title">"iflyMSC/IFlySpeechRecognizerDelegate.h"</span></span></span><br><span class="line"><span class="preprocessor">#import <span class="title">"iflyMSC/IFlySpeechRecognizer.h"</span></span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">@interface</span> <span class="title">ViewController</span> : <span class="title">UIViewController</span>&lt;<span class="title">IFlySpeechRecognizerDelegate</span>&gt;</span></span><br><span class="line"><span class="keyword">@property</span> (<span class="keyword">nonatomic</span>, <span class="keyword">strong</span>) IFlySpeechRecognizer *iFlySpeechRecognizer;   <span class="comment">//不带界面的识别对象</span></span><br><span class="line"><span class="keyword">@end</span></span><br></pre></td></tr></table></figure>
<h2 id="初使化AppId">初使化AppId</h2><blockquote>
<p>注意下载的SDK要和AppId相对应。</p>
</blockquote>
<figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">-(<span class="keyword">void</span>)initAppId</span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">NSString</span> *initString = [[<span class="built_in">NSString</span> alloc] initWithFormat:<span class="string">@"appid=%@"</span>,<span class="string">@"567f981a"</span>];</span><br><span class="line">    [IFlySpeechUtility createUtility:initString];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="设置识别参数">设置识别参数</h2><figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line">-(<span class="keyword">void</span>)initRecognizer</span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">//单例模式，无UI的实例</span></span><br><span class="line">    <span class="keyword">if</span> (_iFlySpeechRecognizer == <span class="literal">nil</span>) &#123;</span><br><span class="line">    _iFlySpeechRecognizer = [IFlySpeechRecognizer sharedInstance];</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 设置参数</span></span><br><span class="line">    <span class="keyword">if</span> (_iFlySpeechRecognizer != <span class="literal">nil</span>) &#123;</span><br><span class="line">    <span class="comment">//扩展参数</span></span><br><span class="line">    [_iFlySpeechRecognizer setParameter:<span class="string">@""</span> forKey:[IFlySpeechConstant PARAMS]];</span><br><span class="line">    <span class="comment">//设置听写模式</span></span><br><span class="line">    [_iFlySpeechRecognizer setParameter:<span class="string">@"iat"</span> forKey:[IFlySpeechConstant IFLY_DOMAIN]];</span><br><span class="line">    <span class="comment">//设置最长录音时间</span></span><br><span class="line">    [_iFlySpeechRecognizer setParameter:<span class="string">@"30000"</span> forKey:[IFlySpeechConstant SPEECH_TIMEOUT]];</span><br><span class="line">    <span class="comment">//设置后端点</span></span><br><span class="line">    [_iFlySpeechRecognizer setParameter:<span class="string">@"1800"</span> forKey:[IFlySpeechConstant VAD_EOS]];</span><br><span class="line">    <span class="comment">//设置前端点</span></span><br><span class="line">    [_iFlySpeechRecognizer setParameter:<span class="string">@"1800"</span> forKey:[IFlySpeechConstant VAD_BOS]];</span><br><span class="line">    <span class="comment">//网络等待时间</span></span><br><span class="line">    [_iFlySpeechRecognizer setParameter:<span class="string">@"20000"</span> forKey:[IFlySpeechConstant NET_TIMEOUT]];</span><br><span class="line">    <span class="comment">//设置采样率，推荐使用16K</span></span><br><span class="line">    [_iFlySpeechRecognizer setParameter:<span class="string">@"16000"</span> forKey:[IFlySpeechConstant SA<span class="built_in">MPLE_RATE</span>]];</span><br><span class="line">    <span class="comment">//设置语言</span></span><br><span class="line">    [_iFlySpeechRecognizer setParameter:<span class="string">@"zh_cn"</span> forKey:[IFlySpeechConstant LANGUAGE]];</span><br><span class="line">    <span class="comment">//设置方言</span></span><br><span class="line">    [_iFlySpeechRecognizer setParameter:<span class="string">@"mandarin"</span> forKey:[IFlySpeechConstant ACCENT]];</span><br><span class="line">    <span class="comment">//设置是否返回标点符号</span></span><br><span class="line">    [_iFlySpeechRecognizer setParameter:<span class="string">@"1"</span> forKey:[IFlySpeechConstant ASR_PTT]];</span><br><span class="line">    <span class="comment">//设置数据返回格式</span></span><br><span class="line">    [_iFlySpeechRecognizer setParameter:<span class="string">@"plain"</span> forKey:[IFlySpeechConstant RESULT_TYPE]];</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 设置代理</span></span><br><span class="line">    _iFlySpeechRecognizer<span class="variable">.delegate</span> = <span class="keyword">self</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="实现代理协议">实现代理协议</h2><figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 出现错误</span></span><br><span class="line">- (<span class="keyword">void</span>) onError:(IFlySpeechError *) error</span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">NSLog</span>(<span class="string">@"出现错误 ：%@"</span>,error);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 识别结果 </span></span><br><span class="line">- (<span class="keyword">void</span>) onResults:(<span class="built_in">NSArray</span> *) results isLast:(<span class="built_in">BOOL</span>)isLast</span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">NSMutableString</span> *result = [[<span class="built_in">NSMutableString</span> alloc] init];</span><br><span class="line">    <span class="built_in">NSDictionary</span> *dic = [results objectAtIndex:<span class="number">0</span>];</span><br><span class="line">    <span class="keyword">for</span> (<span class="built_in">NSString</span> *key <span class="keyword">in</span> dic) &#123;</span><br><span class="line">        [result appendFormat:<span class="string">@"\n\n------ %@ (置信度:%@) ------ \n\n"</span>,key,[dic objectForKey:key]];</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 忽略结束。号</span></span><br><span class="line">    <span class="keyword">if</span> ([result hasPrefix:<span class="string">@"\n\n------ 。"</span>]) &#123;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">NSLog</span>(<span class="string">@"%@"</span>,result);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="点击开始和结束识别">点击开始和结束识别</h2><figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">- (<span class="keyword">IBAction</span>)understand:(<span class="keyword">id</span>)sender</span><br><span class="line">&#123;   </span><br><span class="line">    <span class="comment">// 开始识别</span></span><br><span class="line">    [_iFlySpeechRecognizer startListening];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">- (<span class="keyword">IBAction</span>)finish:(<span class="keyword">id</span>)sender</span><br><span class="line">&#123;   </span><br><span class="line">    <span class="comment">// 停止识别</span></span><br><span class="line">    [_iFlySpeechRecognizer stopListening];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="初使化">初使化</h2><figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">- (<span class="keyword">void</span>)viewDidLoad &#123;</span><br><span class="line">    [<span class="keyword">super</span> viewDidLoad];</span><br><span class="line">    [<span class="keyword">self</span> initAppId];</span><br><span class="line">    [<span class="keyword">self</span> initRecognizer];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="测试结果">测试结果</h2><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">2015-12-31 01:09:15.687 fa[23747:446296] [IFLYTEK] -[IFlySpeechUtility login],login=0&#10;2015-12-31 01:09:15.720 fa[23747:446296] [IFLYTEK] +[IFlySystemInfo getWorkPath],_gMscLogPath=(null)&#10;2015-12-31 01:09:15.723 fa[23747:446296] [IFLYTEK] login -[IFlyLoginParam toString:] SessionParam:timeout=20000,appid=567f981a,msc.ver=1.0.1109.1123,openudid=5f45f8636e008e75426c1dd4bb57c83da1a9312a,work_dir=/Users/lecason/Library/Developer/CoreSimulator/Devices/7B272449-DB68-43E8-A196-7C7D3FAA1F1D/data/Containers/Data/Application/4C7C4E0A-9A1A-4063-8068-B8978BC7D946/Library/Caches,carrier=,os.system=iPhone OS,os.release=8.4,os.version=8.4,os.model=x86_64,os.resolution=750*1334,os.manufact=apple,os.jailbreak=0,app.name=noName,app.path=/Users/lecason/Library/Developer/CoreSimulator/Devices/7B272449-DB68-43E8-A196-7C7D3FAA1F1D/data/Containers/Bundle/Application/E071193E-648F-4A18-9A22-378BB22F8649/fa.app,app.pkg=fa.app,net_type=wifi&#10;2015-12-31 01:09:15.723 fa[23747:446296] [IFLYTEK] paramString:&#10;timeout=20000,appid=567f981a,msc.ver=1.0.1109.1123,openudid=5f45f8636e008e75426c1dd4bb57c83da1a9312a,work_dir=/Users/lecason/Library/Developer/CoreSimulator/Devices/7B272449-DB68-43E8-A196-7C7D3FAA1F1D/data/Containers/Data/Application/4C7C4E0A-9A1A-4063-8068-B8978BC7D946/Library/Caches,carrier=,os.system=iPhone OS,os.release=8.4,os.version=8.4,os.model=x86_64,os.resolution=750*1334,os.manufact=apple,os.jailbreak=0,app.name=noName,app.path=/Users/lecason/Library/Developer/CoreSimulator/Devices/7B272449-DB68-43E8-A196-7C7D3FAA1F1D/data/Containers/Bundle/Application/E071193E-648F-4A18-9A22-378BB22F8649/fa.app,app.pkg=fa.app,net_type=wifi&#10;2015-12-31 01:09:15.726 fa[23747:446296] [IFLYTEK] login in&#10;2015-12-31 01:09:15.726 fa[23747:446296] [IFLYTEK] +[IFlySpeechRecognizer sharedInstance][IN],iflyInstance=0&#10;2015-12-31 01:09:15.726 fa[23747:446296] [IFLYTEK] +[IFlySpeechRecognizer sharedInstance][OUT],iflyInstance=53658592&#10;2015-12-31 01:09:20.069 fa[23747:446296] [IFLYTEK] -[IFlySpeechRecognizer startListening][IN]&#10;2015-12-31 01:09:20.070 fa[23747:446296] [IFLYTEK] isr SessionParam:engine_type=cloud,sub=iat,language=zh_cn,plr=0,audio_source=1,vad_speech_tail=1800,msc.skin=0,rse=utf8,asr_audio_path=record.pcm,sample_rate=16000,timeout=20000,domain=iat,speech_timeout=30000,vad_timeout=1800,vad_bos=1800,rst=plain,vad_eos=1800,auf=audio/L16;rate=16000,ptt=1,voice_change=0,sch=0,accent=mandarin,msc.ver=1.0.1109.1123,openudid=5f45f8636e008e75426c1dd4bb57c83da1a9312a,carrier=,os.system=iPhone OS,os.release=8.4,os.version=8.4,os.model=x86_64,os.resolution=750*1334,os.manufact=apple,os.jailbreak=0,app.name=noName,app.path=/Users/lecason/Library/Developer/CoreSimulator/Devices/7B272449-DB68-43E8-A196-7C7D3FAA1F1D/data/Containers/Bundle/Application/E071193E-648F-4A18-9A22-378BB22F8649/fa.app,app.pkg=fa.app,net_type=wifi&#10;2015-12-31 01:09:20.070 fa[23747:446296] [IFLYTEK] params=engine_type=cloud,sub=iat,language=zh_cn,plr=0,audio_source=1,vad_speech_tail=1800,msc.skin=0,rse=utf8,asr_audio_path=record.pcm,sample_rate=16000,timeout=20000,domain=iat,speech_timeout=30000,vad_timeout=1800,vad_bos=1800,rst=plain,vad_eos=1800,auf=audio/L16;rate=16000,ptt=1,voice_change=0,sch=0,accent=mandarin,msc.ver=1.0.1109.1123,openudid=5f45f8636e008e75426c1dd4bb57c83da1a9312a,carrier=,os.system=iPhone OS,os.release=8.4,os.version=8.4,os.model=x86_64,os.resolution=750*1334,os.manufact=apple,os.jailbreak=0,app.name=noName,app.path=/Users/lecason/Library/Developer/CoreSimulator/Devices/7B272449-DB68-43E8-A196-7C7D3FAA1F1D/data/Containers/Bundle/Application/E071193E-648F-4A18-9A22-378BB22F8649/fa.app,app.pkg=fa.app,net_type=wifi&#10;2015-12-31 01:09:20.070 fa[23747:446296] [IFLYTEK] grammarid=(null)&#10;2015-12-31 01:09:20.070 fa[23747:446296] [IFLYTEK] audioSource=1&#10;2015-12-31 01:09:20.070 fa[23747:446296] [IFLYTEK] isListening:NO&#10;2015-12-31 01:09:20.071 fa[23747:446296] [IFLYTEK] -[IFlySpeechRecognizer startListening:grammar:][IN]&#10;2015-12-31 01:09:20.071 fa[23747:446296] [IFLYTEK] _mscer count0=1&#10;2015-12-31 01:09:20.071 fa[23747:446296] [IFLYTEK] iflySpeechQueue0=1&#10;2015-12-31 01:09:20.071 fa[23747:446296] [IFLYTEK] _mscer count2=3&#10;2015-12-31 01:09:20.071 fa[23747:446296] [IFLYTEK] _mscer count3=2&#10;2015-12-31 01:09:20.071 fa[23747:446340] [IFLYTEK] -[IFlyMscRecognizer main][IN],self=53528272&#10;2015-12-31 01:09:20.071 fa[23747:446296] [IFLYTEK] iflySpeechQueue1=3&#10;2015-12-31 01:09:20.072 fa[23747:446296] [IFLYTEK] -[IFlySpeechRecognizer startListening:grammar:][OUT]&#10;2015-12-31 01:09:20.072 fa[23747:446296] [IFLYTEK] params:&#10;engine_type=cloud,sub=iat,language=zh_cn,plr=0,audio_source=1,vad_speech_tail=1800,msc.skin=0,rse=utf8,asr_audio_path=record.pcm,sample_rate=16000,timeout=20000,domain=iat,speech_timeout=30000,vad_timeout=1800,vad_bos=1800,rst=plain,vad_eos=1800,auf=audio/L16;rate=16000,ptt=1,voice_change=0,sch=0,accent=mandarin,msc.ver=1.0.1109.1123,openudid=5f45f8636e008e75426c1dd4bb57c83da1a9312a,carrier=,os.system=iPhone OS,os.release=8.4,os.version=8.4,os.model=x86_64,os.resolution=750*1334,os.manufact=apple,os.jailbreak=0,app.name=noName,app.path=/Users/lecason/Library/Developer/CoreSimulator/Devices/7B272449-DB68-43E8-A196-7C7D3FAA1F1D/data/Containers/Bundle/Application/E071193E-648F-4A18-9A22-378BB22F8649/fa.app,app.pkg=fa.app,net_type=wifi&#10;2015-12-31 01:09:20.072 fa[23747:446296] [IFLYTEK] startListening audioSource:1&#10;2015-12-31 01:09:20.072 fa[23747:446296] [IFLYTEK] -[IFlySpeechRecognizer runService][OUT]&#10;2015-12-31 01:09:20.072 fa[23747:446296] [IFLYTEK] -[IFlySpeechRecognizer startListening][OUT]&#10;2015-12-31 01:09:20.072 fa[23747:446340] [IFLYTEK] Converted String : 2016/12/31 01:09:20 072&#10;2015-12-31 01:09:20.073 fa[23747:446296] [IFLYTEK] -[IFlyMscRecognizer startRecord][IN]&#10;2015-12-31 01:09:20.073 fa[23747:446296] [IFLYTEK] +[IFlyAudioSession initRecordingAudioSession]&#10;2015-12-31 01:09:20.074 fa[23747:446296] [IFLYTEK] -[IFlyPcmRecorder setSample:],rate=16000&#10;2015-12-31 01:09:20.074 fa[23747:446296] [IFLYTEK] +[IFlySystemInfo getWorkPath],_gMscLogPath=(null)&#10;2015-12-31 01:09:20.074 fa[23747:446296] [IFLYTEK] -[IFlyPcmRecorder start],[IN]&#10;2015-12-31 01:09:20.124 fa[23747:446296] [IFLYTEK] pcmRecorder|timeValue:0.049352&#10;2015-12-31 01:09:20.124 fa[23747:446296] [IFLYTEK] -[IFlyPcmRecorder start],[OUT],ret =0&#10;2015-12-31 01:09:20.124 fa[23747:446296] [IFLYTEK] -[IFlyMscRecognizer startRecord][OUT]&#10;2015-12-31 01:09:20.124 fa[23747:446340] [IFLYTEK] -[IFlyMscRecognizer beginSession][IN],self=&#10;2015-12-31 01:09:20.124 fa[23747:446340] [IFLYTEK] beginSession before state=1&#10;2015-12-31 01:09:20.127 fa[23747:446340] [IFLYTEK] QISRSessionBegin:engine_type=cloud,sub=iat,language=zh_cn,plr=0,audio_source=1,vad_speech_tail=1800,msc.skin=0,rse=utf8,asr_audio_path=record.pcm,sample_rate=16000,timeout=20000,domain=iat,speech_timeout=30000,vad_timeout=1800,vad_bos=1800,rst=plain,vad_eos=1800,auf=audio/L16;rate=16000,ptt=1,voice_change=0,sch=0,accent=mandarin,msc.ver=1.0.1109.1123,openudid=5f45f8636e008e75426c1dd4bb57c83da1a9312a,carrier=,os.system=iPhone OS,os.release=8.4,os.version=8.4,os.model=x86_64,os.resolution=750*1334,os.manufact=apple,os.jailbreak=0,app.name=noName,app.path=/Users/lecason/Library/Developer/CoreSimulator/Devices/7B272449-DB68-43E8-A196-7C7D3FAA1F1D/data/Containers/Bundle/Application/E071193E-648F-4A18-9A22-378BB22F8649/fa.app,app.pkg=fa.app,net_type=wifi&#10;2015-12-31 01:09:20.200 fa[23747:446340] [IFLYTEK] QISRRegisterNotify=0&#10;2015-12-31 01:09:20.201 fa[23747:446340] [IFLYTEK] beginSession after state=1,_error=0&#10;2015-12-31 01:09:20.201 fa[23747:446340] [IFLYTEK] -[IFlyMscRecognizer beginSession][OUT],self=53528272&#10;2015-12-31 01:09:20.201 fa[23747:446340] [IFLYTEK] _startDate,50338112&#10;2015-12-31 01:09:20.205 fa[23747:446353] [IFLYTEK] recog_status_callback type==1,status=79&#10;2015-12-31 01:09:20.383 fa[23747:446353] [IFLYTEK] recog_status_callback type==0,status=1&#10;2015-12-31 01:09:22.946 fa[23747:446353] [IFLYTEK] recog_result_callback resultStatus==0,result=47889584,resultLen=6&#10;2015-12-31 01:09:22.946 fa[23747:446353] [IFLYTEK] -[ISREngine isVoiceChange],voiceChange=0&#10;2015-12-31 01:09:22.947 fa[23747:446296] &#10;&#10;------ &#20013;&#22269; (&#32622;&#20449;&#24230;:100) ------ &#10;&#10;2015-12-31 01:09:24.496 fa[23747:446353] [IFLYTEK] recog_status_callback type==0,status=3&#10;2015-12-31 01:09:24.497 fa[23747:446296] [IFLYTEK] -[IFlyPcmRecorder stop][IN]&#10;2015-12-31 01:09:24.497 fa[23747:446296] [IFLYTEK] -[IFlyPcmRecorder stop]|AudioQueueFlush&#10;2015-12-31 01:09:24.497 fa[23747:446353] [IFLYTEK] recog_status_callback type==0,status=3&#10;2015-12-31 01:09:24.497 fa[23747:446296] [IFLYTEK] stop recording success&#10;2015-12-31 01:09:24.498 fa[23747:446353] [IFLYTEK] recog_result_callback resultStatus==5,result=50332544,resultLen=3&#10;2015-12-31 01:09:24.498 fa[23747:446353] [IFLYTEK] -[ISREngine isVoiceChange],voiceChange=0&#10;2015-12-31 01:09:24.521 fa[23747:446296] [IFLYTEK] -[IFlyPcmRecorder stop]|AudioQueueStop&#10;2015-12-31 01:09:24.542 fa[23747:446296] [IFLYTEK] -[IFlyPcmRecorder stop]|AudioQueueDispose&#10;2015-12-31 01:09:24.542 fa[23747:446296] [IFLYTEK] -[IFlyPcmRecorder stop][OUT]&#10;2015-12-31 01:09:24.546 fa[23747:446340] [IFLYTEK] while end,self=53528272&#10;2015-12-31 01:09:24.546 fa[23747:446340] [IFLYTEK] -[IFlyMscRecognizer setSessionInfo][IN]&#10;2015-12-31 01:09:24.547 fa[23747:446340] [IFLYTEK] info:&#123;&#34;rec_ustop&#34;:&#34;0&#34;,&#34;app_fau&#34;:310,&#34;app_start&#34;:&#34;2016/12/31 01:09:20 072&#34;,&#34;app_frs&#34;:2875,&#34;rec_close&#34;:4425,&#34;app_lrs&#34;:4426,&#34;rec_start&#34;:307,&#34;rec_open&#34;:1,&#34;app_ssb&#34;:52,&#34;rec_ready&#34;:52,&#34;app_lau&#34;:4425&#125;&#10;2015-12-31 01:09:24.547 fa[23747:446340] [IFLYTEK] -[IFlyMscRecognizer setSessionInfo][OUT]&#10;2015-12-31 01:09:24.548 fa[23747:446340] [IFLYTEK] -[ISREngine stopEngine] _szSession=53715544[IN]&#10;2015-12-31 01:09:24.549 fa[23747:446340] [IFLYTEK] -[IFlyMscRecognizer setState:][ISREnd IN]&#10;2015-12-31 01:09:24.549 fa[23747:446340] [IFLYTEK] -[IFlySpeechRecognizer onError:] [IN] errorCode=0&#10;2015-12-31 01:09:24.549 fa[23747:446340] [IFLYTEK] -[IFlySpeechRecognizer onError:][OUT]&#10;2015-12-31 01:09:24.549 fa[23747:446296] &#20986;&#29616;&#38169;&#35823; &#65306;&#60;IFlySpeechError: 0x7fad02f74d80&#62;&#10;2015-12-31 01:09:24.549 fa[23747:446340] [IFLYTEK] -[IFlyMscRecognizer setState:][ISREnd OUT]&#10;2015-12-31 01:09:24.549 fa[23747:446340] [IFLYTEK] -[IFlyMscRecognizer main][OUT],self=53528272&#10;2015-12-31 01:09:24.550 fa[23747:446340] [IFLYTEK] -[IFlyMscRecognizer dealloc][IN],self=53528272&#10;2015-12-31 01:09:24.550 fa[23747:446340] [IFLYTEK] -[IFlyMscRecognizer dealloc][OUT],self=53528272</span><br></pre></td></tr></table></figure>]]></content>
    <summary type="html">
    <![CDATA[<h2 id="导入头文件">导入头文件</h2><p>从<a href="http://www.xfyun.cn" target="_blank" rel="external">迅飞开发者平台</a>下载SDK，和导入SDK所要的库。引入头文件，以及遵从代理。</p>
<fig]]>
    </summary>
    
      <category term="iOS" scheme="http://lecason.com/tags/iOS/"/>
    
      <category term="iOS" scheme="http://lecason.com/categories/iOS/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[iOS Cocoaasyncsocket 网络编程开发]]></title>
    <link href="http://lecason.com/2015/12/14/iOS-Cocoaasyncsocket-development/"/>
    <id>http://lecason.com/2015/12/14/iOS-Cocoaasyncsocket-development/</id>
    <published>2015-12-14T15:29:10.000Z</published>
    <updated>2015-12-14T15:51:02.000Z</updated>
    <content type="html"><![CDATA[<p>iOS 直接通过TCP UDP连接服务器，用封装好的 <a href="https://github.com/robbiehanson/CocoaAsyncSocket" target="_blank" rel="external">CocoaAsyncSocket</a> 使用起来非常方便。</p>
<h2 id="使用方法">使用方法</h2><p>引入头部和遵从代理：</p>
<figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor">#import <span class="title">&lt;UIKit/UIKit.h&gt;</span></span></span><br><span class="line">@import CocoaAsyncSocket;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">@interface</span> <span class="title">ViewController</span> : <span class="title">UIViewController</span>&lt;<span class="title">AsyncSocketDelegate</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">@end</span></span><br></pre></td></tr></table></figure>
<p>方法实现</p>
<figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor">#import <span class="title">"ViewController.h"</span></span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">@interface</span> <span class="title">ViewController</span> ()</span></span><br><span class="line"><span class="keyword">@property</span> (<span class="keyword">strong</span>,<span class="keyword">nonatomic</span>) AsyncSocket *socket;</span><br><span class="line"><span class="keyword">@end</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">@implementation</span> <span class="title">ViewController</span></span></span><br><span class="line"></span><br><span class="line">- (<span class="keyword">void</span>)viewDidLoad</span><br><span class="line">    &#123;</span><br><span class="line">    [<span class="keyword">super</span> viewDidLoad];</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 初使化和连接服务器</span></span><br><span class="line">    <span class="keyword">self</span><span class="variable">.socket</span> = [[AsyncSocket alloc] initWithDelegate:<span class="keyword">self</span>];</span><br><span class="line">    [<span class="keyword">self</span><span class="variable">.socket</span> connectToHost:<span class="string">@"8.8.8.8"</span> onPort:<span class="number">2012</span> error:<span class="literal">nil</span>];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 连接成功回调</span></span><br><span class="line">- (<span class="keyword">void</span>)onSocket:(AsyncSocket *)sock didConnectToHost:(<span class="built_in">NSString</span> *)host port:(<span class="built_in">UInt16</span>)port</span><br><span class="line">    &#123;</span><br><span class="line">    <span class="built_in">NSLog</span>(<span class="string">@"Connect to host"</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 连接成功请求读数据</span></span><br><span class="line">    [sock readDataWithTimeout:-<span class="number">1</span> tag:<span class="number">0</span>];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 收到数据回调</span></span><br><span class="line">- (<span class="keyword">void</span>)onSocket:(AsyncSocket *)sock didReadData:(<span class="built_in">NSData</span> *)data withTag:(<span class="keyword">long</span>)tag</span><br><span class="line">    &#123;</span><br><span class="line">    [sock readDataWithTimeout:-<span class="number">1</span> tag:<span class="number">0</span>];</span><br><span class="line">    <span class="built_in">NSLog</span>(<span class="string">@"did read data"</span>);</span><br><span class="line">    <span class="built_in">NSString</span>* message = [[<span class="built_in">NSString</span> alloc] initWithData:data encoding:<span class="built_in">NSUTF8StringEncoding</span>];</span><br><span class="line">    <span class="built_in">NSLog</span>(<span class="string">@"message is: \n%@"</span>,message);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 断开连接</span></span><br><span class="line">- (<span class="keyword">void</span>)onSocket:(AsyncSocket *)sock willDisconnectWithError:(<span class="built_in">NSError</span> *)err</span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">NSLog</span>(<span class="string">@"Disconnect host"</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 发送数据到服务器</span></span><br><span class="line">- (<span class="keyword">IBAction</span>)send:(<span class="built_in">UIButton</span> *)sender</span><br><span class="line">    &#123;</span><br><span class="line">    <span class="built_in">NSLog</span>(<span class="string">@"send"</span>);</span><br><span class="line">    [<span class="keyword">self</span><span class="variable">.socket</span> writeData:[<span class="string">@"SEND hello##"</span> dataUsingEncoding:<span class="built_in">NSUTF8StringEncoding</span>] withTimeout:-<span class="number">1</span> tag:<span class="number">0</span>];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">@end</span></span><br></pre></td></tr></table></figure>
<blockquote>
<p>如果不在didConnectToHost 和 didReadData 中调用[sock readDataWithTimeout:-1 tag:0]; 方法，那么只能得到服务器发回来的首条信息，以后服务器发送的将接收不到。</p>
<p>发送和接收的tag值要一样，不然收不到数据。</p>
</blockquote>
<h2 id="参考资料">参考资料</h2><p><a href="http://stackoverflow.com/questions/7997200/how-do-i-get-didreaddata-within-gcdasyncsocket-execute-within-the-current-runloo/7998021#7998021" target="_blank" rel="external">How do I get didReadData within GCDAsyncSocket execute within the current RunLoop?</a></p>
]]></content>
    <summary type="html">
    <![CDATA[<p>iOS 直接通过TCP UDP连接服务器，用封装好的 <a href="https://github.com/robbiehanson/CocoaAsyncSocket" target="_blank" rel="external">CocoaAsyncSocket</a>]]>
    </summary>
    
      <category term="iOS" scheme="http://lecason.com/tags/iOS/"/>
    
      <category term="iOS" scheme="http://lecason.com/categories/iOS/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[iOS UIView 随着手势滑动左右切换]]></title>
    <link href="http://lecason.com/2015/12/12/iOS-Transition-a-view-with-uiswipegesturerecongnizer/"/>
    <id>http://lecason.com/2015/12/12/iOS-Transition-a-view-with-uiswipegesturerecongnizer/</id>
    <published>2015-12-12T06:44:12.000Z</published>
    <updated>2015-12-12T07:06:09.000Z</updated>
    <content type="html"><![CDATA[<p>定义一个枚举</p>
<figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">enum</span> <span class="title">HPDViewTransitionDrection</span> </span>&#123;</span><br><span class="line">    <span class="keyword">case</span> <span class="type">Left</span></span><br><span class="line">    <span class="keyword">case</span> <span class="type">Right</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>创建Label，和左右滑动手势</p>
<figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="func"><span class="keyword">func</span> <span class="title">initSomething</span><span class="params">()</span></span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">let</span> lb = <span class="type">UILabel</span>()</span><br><span class="line">    lb.frame.size = <span class="type">CGSizeMake</span>(<span class="number">200</span>, <span class="number">30</span>)</span><br><span class="line">    lb.text = <span class="string">"LECASON"</span></span><br><span class="line">    lb.sizeToFit()</span><br><span class="line">    lb.center = <span class="keyword">self</span>.view.center</span><br><span class="line">    <span class="keyword">self</span>.view.addSubview(lb)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">let</span> leftSwipe = <span class="type">UISwipeGestureRecognizer</span>(target: <span class="keyword">self</span>, action: <span class="string">"handleSwipeFrom:"</span>)</span><br><span class="line">    leftSwipe.direction = <span class="type">UISwipeGestureRecognizerDirection</span>.<span class="type">Left</span></span><br><span class="line">    <span class="keyword">self</span>.view.addGestureRecognizer(leftSwipe)</span><br><span class="line">    <span class="keyword">let</span> rightSwipe = <span class="type">UISwipeGestureRecognizer</span>(target: <span class="keyword">self</span>, action: <span class="string">"handleSwipeFrom:"</span>)</span><br><span class="line">    rightSwipe.direction = <span class="type">UISwipeGestureRecognizerDirection</span>.<span class="type">Right</span></span><br><span class="line">    <span class="keyword">self</span>.view.addGestureRecognizer(rightSwipe)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>添加识别手势的方法</p>
<figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="func"><span class="keyword">func</span> <span class="title">handleSwipeFrom</span><span class="params">(recognizer: UISwipeGestureRecognizer)</span></span> &#123;</span><br><span class="line">    <span class="keyword">if</span> recognizer.direction == <span class="type">UISwipeGestureRecognizerDirection</span>.<span class="type">Left</span> &#123;</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">"swipe left"</span>)</span><br><span class="line">        <span class="keyword">self</span>.transitionView(<span class="type">HPDViewTransitionDrection</span>.<span class="type">Left</span>)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> recognizer.direction == <span class="type">UISwipeGestureRecognizerDirection</span>.<span class="type">Right</span> &#123;</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">"swipe right"</span>)</span><br><span class="line">        <span class="keyword">self</span>.transitionView(<span class="type">HPDViewTransitionDrection</span>.<span class="type">Right</span>)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>处理转换方法</p>
<figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="func"><span class="keyword">func</span> <span class="title">transitionView</span><span class="params">(derection: HPDViewTransitionDrection)</span></span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">let</span> duration = <span class="number">0.5</span></span><br><span class="line">    <span class="keyword">let</span> curve = <span class="type">UIViewAnimationCurve</span>.<span class="type">EaseInOut</span></span><br><span class="line">    <span class="keyword">var</span> transition = <span class="type">UIViewAnimationTransition</span>.<span class="type">FlipFromLeft</span></span><br><span class="line">    <span class="keyword">let</span> transview = <span class="keyword">self</span>.view</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> derection == <span class="type">HPDViewTransitionDrection</span>.<span class="type">Left</span> &#123;</span><br><span class="line">        transition = <span class="type">UIViewAnimationTransition</span>.<span class="type">FlipFromLeft</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> derection == <span class="type">HPDViewTransitionDrection</span>.<span class="type">Right</span> &#123;</span><br><span class="line">        transition = <span class="type">UIViewAnimationTransition</span>.<span class="type">FlipFromRight</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="type">UIView</span>.beginAnimations(<span class="string">"Animations"</span>, context: <span class="literal">nil</span>)</span><br><span class="line">    <span class="type">UIView</span>.setAnimationDuration(duration)</span><br><span class="line">    <span class="type">UIView</span>.setAnimationCurve(curve)</span><br><span class="line">    <span class="type">UIView</span>.setAnimationTransition(transition, forView: transview, cache: <span class="literal">true</span>)</span><br><span class="line">    <span class="type">UIView</span>.commitAnimations()</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>效果：</p>
<p><img src="/img/iostransitionview.png" alt=""></p>
<h2 id="参考资料">参考资料</h2><blockquote>
<p><a href="http://stackoverflow.com/questions/10701290/horizontal-flip-direction-in-ios-storyboards" target="_blank" rel="external">Horizontal flip direction in iOS Storyboards</a></p>
</blockquote>
]]></content>
    <summary type="html">
    <![CDATA[<p>定义一个枚举</p>
<figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><]]>
    </summary>
    
      <category term="iOS" scheme="http://lecason.com/tags/iOS/"/>
    
      <category term="iOS" scheme="http://lecason.com/categories/iOS/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[iOS 得到已经连接的SSID信息]]></title>
    <link href="http://lecason.com/2015/12/10/iOS-fetch-ssid-info/"/>
    <id>http://lecason.com/2015/12/10/iOS-fetch-ssid-info/</id>
    <published>2015-12-10T02:05:51.000Z</published>
    <updated>2015-12-28T02:18:04.000Z</updated>
    <content type="html"><![CDATA[<p>在iOS 7 以上，可以得到已经连接SSID信息。</p>
<figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor">#import <span class="title">"ViewController.h"</span></span></span><br><span class="line">@import SystemConfiguration<span class="variable">.CaptiveNetwork</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">@interface</span> <span class="title">ViewController</span> ()</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">@end</span></span><br></pre></td></tr></table></figure>
<figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">@implementation</span> <span class="title">ViewController</span></span></span><br><span class="line"></span><br><span class="line">- (<span class="keyword">void</span>)viewDidLoad</span><br><span class="line">&#123;</span><br><span class="line">    [<span class="keyword">super</span> viewDidLoad];</span><br><span class="line">    <span class="built_in">NSLog</span>(<span class="string">@"%@"</span>,[[<span class="keyword">self</span> fetchSSIDInfo] objectForKey:<span class="string">@"SSID"</span>]);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">- (<span class="built_in">NSDictionary</span> *)fetchSSIDInfo</span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">NSArray</span> *interfaceNames = <span class="built_in">CFBridgingRelease</span>(CNCopySupportedInterfaces());</span><br><span class="line">    <span class="built_in">NSLog</span>(<span class="string">@"%s: Supported interfaces: %@"</span>, __func__, interfaceNames);</span><br><span class="line"></span><br><span class="line">    <span class="built_in">NSDictionary</span> *SSIDInfo;</span><br><span class="line">    <span class="keyword">for</span> (<span class="built_in">NSString</span> *interfaceName <span class="keyword">in</span> interfaceNames) &#123;</span><br><span class="line">        SSIDInfo = <span class="built_in">CFBridgingRelease</span>(</span><br><span class="line">        CNCopyCurrentNetworkInfo((__bridge <span class="built_in">CFStringRef</span>)interfaceName));</span><br><span class="line">        <span class="built_in">NSLog</span>(<span class="string">@"%s: %@ =&gt; %@"</span>, __func__, interfaceName, SSIDInfo);</span><br><span class="line"></span><br><span class="line">        <span class="built_in">BOOL</span> isNotEmpty = (SSIDInfo<span class="variable">.count</span> &gt; <span class="number">0</span>);</span><br><span class="line">        <span class="keyword">if</span> (isNotEmpty) &#123;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> SSIDInfo;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">@end</span></span><br></pre></td></tr></table></figure>
<p>打印结果：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">2015</span>-<span class="number">12</span>-<span class="number">10</span> <span class="number">09</span>:<span class="number">45</span>:<span class="number">49.603</span> SSID[<span class="number">9694</span>:<span class="number">2134415</span>] -[ViewController fetchSSIDInfo]: Supported interfaces: (</span><br><span class="line">en0</span><br><span class="line">)</span><br><span class="line"><span class="number">2015</span>-<span class="number">12</span>-<span class="number">10</span> <span class="number">09</span>:<span class="number">45</span>:<span class="number">49.608</span> SSID[<span class="number">9694</span>:<span class="number">2134415</span>] -[ViewController fetchSSIDInfo]: en0 =&gt; &#123;</span><br><span class="line">BSSID = <span class="string">"66:e8:72:ff:ec:6e"</span>;</span><br><span class="line">SSID = <span class="string">"WEL Tech"</span>;</span><br><span class="line">SSIDDATA = &lt;<span class="number">57454</span>c20 <span class="number">54656368</span>&gt;;</span><br><span class="line">&#125;</span><br><span class="line"><span class="number">2015</span>-<span class="number">12</span>-<span class="number">10</span> <span class="number">09</span>:<span class="number">45</span>:<span class="number">49.608</span> SSID[<span class="number">9694</span>:<span class="number">2134415</span>] WEL Tech</span><br></pre></td></tr></table></figure>
<p>swift 版本</p>
<figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="type">Foundation</span></span><br><span class="line"><span class="keyword">import</span> <span class="type">SystemConfiguration</span>.<span class="type">CaptiveNetwork</span></span><br><span class="line"></span><br><span class="line">public <span class="class"><span class="keyword">class</span> <span class="title">SSID</span> </span>&#123;</span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">func</span> <span class="title">fetchSSIDInfo</span>() -&gt;  <span class="title">String</span> </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> currentSSID = <span class="string">""</span></span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">let</span> interfaces:<span class="type">CFArray</span>! = <span class="type">CNCopySupportedInterfaces</span>() &#123;</span><br><span class="line">            <span class="keyword">for</span> i <span class="keyword">in</span> <span class="number">0</span>..&lt;<span class="type">CFArrayGetCount</span>(interfaces)&#123;</span><br><span class="line">                <span class="keyword">let</span> interfaceName: <span class="type">UnsafePointer</span>&lt;<span class="type">Void</span>&gt; = <span class="type">CFArrayGetValueAtIndex</span>(interfaces, i)</span><br><span class="line">                <span class="keyword">let</span> rec = unsafeBitCast(interfaceName, <span class="type">AnyObject</span>.<span class="keyword">self</span>)</span><br><span class="line">                <span class="keyword">let</span> unsafeInterfaceData = <span class="type">CNCopyCurrentNetworkInfo</span>(<span class="string">"<span class="subst">\(rec)</span>"</span>)</span><br><span class="line">                <span class="keyword">if</span> unsafeInterfaceData != <span class="literal">nil</span> &#123;</span><br><span class="line">                    <span class="keyword">let</span> interfaceData = unsafeInterfaceData! <span class="keyword">as</span> <span class="type">Dictionary</span>!</span><br><span class="line">                    currentSSID = interfaceData[<span class="string">"SSID"</span>] <span class="keyword">as</span>! <span class="type">String</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> currentSSID</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    <summary type="html">
    <![CDATA[<p>在iOS 7 以上，可以得到已经连接SSID信息。</p>
<figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><spa]]>
    </summary>
    
      <category term="iOS" scheme="http://lecason.com/tags/iOS/"/>
    
      <category term="iOS" scheme="http://lecason.com/categories/iOS/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[iOS NSData [UInt] UInt 之间的转换]]></title>
    <link href="http://lecason.com/2015/11/23/iOS-NSData-UInt-Array-UInt-exchance/"/>
    <id>http://lecason.com/2015/11/23/iOS-NSData-UInt-Array-UInt-exchance/</id>
    <published>2015-11-23T09:35:39.000Z</published>
    <updated>2015-11-23T09:42:18.000Z</updated>
    <content type="html"><![CDATA[<p>蓝牙开发多用到这几个数据类型之间的转换，写好记下方便下个项目。</p>
<h2 id="扩展">扩展</h2><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// [UInt] 数组转化成 NSDate</span></span><br><span class="line"><span class="class"><span class="keyword">extension</span> <span class="title">Array</span> </span>&#123;</span><br><span class="line">    <span class="func"><span class="keyword">func</span> <span class="title">toData</span><span class="params">()</span></span> -&gt; <span class="type">NSData</span> &#123;</span><br><span class="line">    <span class="keyword">let</span> commandData: <span class="type">NSMutableData</span> = <span class="type">NSMutableData</span>()</span><br><span class="line">    <span class="keyword">for</span> <span class="keyword">var</span> subCommand <span class="keyword">in</span> <span class="keyword">self</span> &#123;</span><br><span class="line">        commandData.appendBytes(&amp;subCommand, length: <span class="number">1</span>)</span><br><span class="line">    &#125;</span><br><span class="line">        <span class="keyword">return</span> commandData</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 大端模式的[UInt]数组转换成UInt</span></span><br><span class="line"><span class="comment">// 大端模式 [0x01,0x02] 转化成 Binary = [0b00000001, 0b00000010] 转化成 Hex 应该是 0x0102</span></span><br><span class="line"><span class="class"><span class="keyword">extension</span> <span class="title">NSData</span> </span>&#123;</span><br><span class="line"><span class="func"><span class="keyword">func</span> <span class="title">toBigendInt</span><span class="params">()</span></span> -&gt; <span class="type">UInt</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">self</span>.length &gt; <span class="number">8</span> &#123; <span class="built_in">print</span>(<span class="string">"\n【toBigendInt overflow max big-end 8 byte maybe get the wrong value】\n"</span>) &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">let</span> intMutableArray = <span class="type">NSMutableData</span>()</span><br><span class="line">    <span class="keyword">var</span> subData = <span class="type">NSData</span>()</span><br><span class="line">    <span class="keyword">for</span> <span class="keyword">var</span> i = <span class="keyword">self</span>.length - <span class="number">1</span>; i &gt;= <span class="number">0</span>;  --i &#123;</span><br><span class="line">        subData = <span class="keyword">self</span>.subdataWithRange(<span class="type">NSMakeRange</span>(i, <span class="number">1</span>))</span><br><span class="line">        intMutableArray.appendData(subData)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">var</span> commandInt:<span class="type">UInt</span> = <span class="number">0</span></span><br><span class="line">    intMutableArray.getBytes(&amp;commandInt, length: <span class="built_in">sizeof</span>(<span class="keyword">self</span>.<span class="keyword">dynamicType</span>))</span><br><span class="line">    <span class="keyword">return</span> commandInt</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 小端模式的[UInt]数组转换成UInt</span></span><br><span class="line"><span class="comment">// 小端模式 [0x01,0x02] 会转成 Binary = [0b00000010, 0b00000001] 转化成 Hex 应该是 0x0201</span></span><br><span class="line"><span class="class"><span class="keyword">extension</span> <span class="title">NSData</span> </span>&#123;</span><br><span class="line"><span class="func"><span class="keyword">func</span> <span class="title">toSmallendInt</span><span class="params">()</span></span> -&gt; <span class="type">UInt</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">self</span>.length &gt; <span class="number">8</span> &#123; <span class="built_in">print</span>(<span class="string">"\n【toSmallendInt overflow max big-end 8 byte maybe get the wrong value】\n"</span>) &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> commandInt:<span class="type">UInt</span> = <span class="number">0</span></span><br><span class="line">    <span class="keyword">self</span>.getBytes(&amp;commandInt, length: <span class="built_in">sizeof</span>(<span class="keyword">self</span>.<span class="keyword">dynamicType</span>))</span><br><span class="line">    <span class="keyword">return</span> commandInt</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// NSData 转化成UInt 数组</span></span><br><span class="line"><span class="class"><span class="keyword">extension</span> <span class="title">NSData</span> </span>&#123;</span><br><span class="line"><span class="func"><span class="keyword">func</span> <span class="title">toUIntArray</span><span class="params">()</span></span> -&gt; [<span class="type">UInt8</span>] &#123;</span><br><span class="line">    <span class="keyword">var</span> uintArray = [<span class="type">UInt8</span>]()</span><br><span class="line">    <span class="keyword">var</span> subData: <span class="type">NSData</span>!</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="number">0</span>..&lt;<span class="keyword">self</span>.length &#123;</span><br><span class="line">        subData = <span class="keyword">self</span>.subdataWithRange(<span class="type">NSMakeRange</span>(i, <span class="number">1</span>))</span><br><span class="line">        uintArray.append(<span class="type">UInt8</span>(subData.toSmallendInt()))</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> uintArray</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="使用">使用</h2><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">override</span> <span class="func"><span class="keyword">func</span> <span class="title">viewDidLoad</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="keyword">super</span>.viewDidLoad()</span><br><span class="line">    <span class="keyword">let</span> intArray = [<span class="number">0x01</span>,<span class="number">0x02</span>,<span class="number">0x03</span>,<span class="number">0x04</span>,<span class="number">0x05</span>,<span class="number">0x06</span>,<span class="number">0x07</span>,<span class="number">0x08</span>]</span><br><span class="line">    <span class="keyword">let</span> intData = intArray.toData()</span><br><span class="line">    <span class="keyword">let</span> small = intData.toSmallendInt()</span><br><span class="line">    <span class="keyword">let</span> big = intData.toBigendInt()</span><br><span class="line">    <span class="keyword">let</span> uintArray = intData.toUIntArray()</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">"intArray: <span class="subst">\(intArray)</span>\nintData: <span class="subst">\(intData)</span>\nsmall: <span class="subst">\(small)</span>\nbig: <span class="subst">\(big)</span>\nuintArray: <span class="subst">\(uintArray)</span>\n"</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="结果">结果</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">intArray: [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>]</span><br><span class="line">intData: &lt;<span class="number">01020304</span> <span class="number">05060708</span>&gt;</span><br><span class="line">small: <span class="number">578437695752307201</span></span><br><span class="line">big: <span class="number">72623859790382856</span></span><br><span class="line">uintArray: [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>]</span><br></pre></td></tr></table></figure>
]]></content>
    <summary type="html">
    <![CDATA[<p>蓝牙开发多用到这几个数据类型之间的转换，写好记下方便下个项目。</p>
<h2 id="扩展">扩展</h2><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="li]]>
    </summary>
    
      <category term="iOS" scheme="http://lecason.com/tags/iOS/"/>
    
      <category term="iOS" scheme="http://lecason.com/categories/iOS/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[iOS 关于重复执行函数]]></title>
    <link href="http://lecason.com/2015/11/12/iOS-Repeat-Functions/"/>
    <id>http://lecason.com/2015/11/12/iOS-Repeat-Functions/</id>
    <published>2015-11-12T01:59:08.000Z</published>
    <updated>2015-11-24T05:34:33.000Z</updated>
    <content type="html"><![CDATA[<p>dispatch_source_set_timer 后台和函数内部执行重复任务：</p>
<figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">override</span> <span class="func"><span class="keyword">func</span> <span class="title">viewDidLoad</span><span class="params">()</span></span> &#123;</span><br><span class="line">    <span class="keyword">super</span>.viewDidLoad()</span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> timer: dispatch_source_t! </span><br><span class="line"></span><br><span class="line">    <span class="func"><span class="keyword">func</span> <span class="title">startTimer</span><span class="params">()</span></span> &#123;</span><br><span class="line">    <span class="keyword">let</span> queue = dispatch_queue_create(<span class="string">"com.lecason.app.timer"</span>, <span class="literal">nil</span>)</span><br><span class="line">    timer = dispatch_source_create(<span class="type">DISPATCH_SOURCE_TYPE_TIMER</span>, <span class="number">0</span>, <span class="number">0</span>, queue)</span><br><span class="line">    dispatch_source_set_timer(timer, <span class="type">DISPATCH_TIME_NOW</span>, <span class="number">3</span> * <span class="type">NSEC_PER_SEC</span>, <span class="number">1</span> * <span class="type">NSEC_PER_SEC</span>)</span><br><span class="line">    <span class="comment">// 每隔3秒执行，1秒的误差</span></span><br><span class="line">        dispatch_source_set_event_handler(timer) &#123;</span><br><span class="line">            <span class="comment">// 要执行的任务</span></span><br><span class="line">        &#125;</span><br><span class="line">        dispatch_resume(timer)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="func"><span class="keyword">func</span> <span class="title">stopTimer</span><span class="params">()</span></span> &#123;</span><br><span class="line">        dispatch_source_cancel(timer)</span><br><span class="line">        timer = <span class="literal">nil</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>dispatch_time 延时一定时间后执行</p>
<figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> delay = <span class="number">4.5</span> * <span class="type">Double</span>(<span class="type">NSEC_PER_SEC</span>)</span><br><span class="line"><span class="keyword">let</span> time = dispatch_time(<span class="type">DISPATCH_TIME_NOW</span>, <span class="type">Int64</span>(delay))</span><br><span class="line">dispatch_after(time, dispatch_get_main_queue(), &#123;</span><br><span class="line">    <span class="comment">// 4.5秒后要执行的任务</span></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>
]]></content>
    <summary type="html">
    <![CDATA[<p>dispatch_source_set_timer 后台和函数内部执行重复任务：</p>
<figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</spa]]>
    </summary>
    
      <category term="iOS" scheme="http://lecason.com/tags/iOS/"/>
    
      <category term="iOS" scheme="http://lecason.com/categories/iOS/"/>
    
  </entry>
  
</feed>

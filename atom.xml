<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title><![CDATA[LECASON]]></title>
  
  <link href="/atom.xml" rel="self"/>
  <link href="http://lecason.com/"/>
  <updated>2015-09-05T08:47:54.000Z</updated>
  <id>http://lecason.com/</id>
  
  <author>
    <name><![CDATA[Lecason]]></name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title><![CDATA[iOS 应用程序本地化]]></title>
    <link href="http://lecason.com/2015/09/02/iOS-Localizaion/"/>
    <id>http://lecason.com/2015/09/02/iOS-Localizaion/</id>
    <published>2015-09-02T08:39:24.000Z</published>
    <updated>2015-09-05T08:47:54.000Z</updated>
    <content type="html"><![CDATA[<h2 id="程序名称本地化">程序名称本地化</h2><p>点击<code>项目</code> &gt; <code>PROJECT</code> &gt; <code>Info</code> &gt; <code>Localizations</code> 添加要支持的语言</p>
<p><img src="/img/localizion3.png" alt=""><br><a id="more"></a></p>
<p>新建一个文件<code>InfoPlist.strings</code> 然后在文件里点击 <code>InfoPlist.strings</code></p>
<p><img src="/img/localizion1.png" alt=""></p>
<p>点击右侧<code>localization</code>添加Chinese</p>
<p><img src="/img/localizion2.png" alt=""></p>
<p>在InfoPlist.strings(English)添加</p>
<figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">CFBundleDisplayName</span>=<span class="string">"China"</span>;</span><br></pre></td></tr></table></figure>
<p>在InfoPlist.strings(Chinese(Simplified))添加</p>
<figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">CFBundleDisplayName</span>=<span class="string">"中国"</span>;</span><br></pre></td></tr></table></figure>
<h2 id="程序内容本地化">程序内容本地化</h2><p>新建一个文件 <code>Localizable.strings</code></p>
<p>在Localizable.strings(English)添加<br><figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">"key"</span> = <span class="string">"english value"</span>;</span><br></pre></td></tr></table></figure></p>
<p>在Localizable.strings(Chinese(Simplified))添加</p>
<figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">"key"</span> = <span class="string">"中文内容"</span>;</span><br></pre></td></tr></table></figure>
<p>使用方法</p>
<figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">- (<span class="keyword">void</span>)viewDidLoad</span><br><span class="line">&#123;</span><br><span class="line">    [<span class="keyword">super</span> viewDidLoad];</span><br><span class="line">    <span class="built_in">UILabel</span> *label = [[<span class="built_in">UILabel</span> alloc] init];</span><br><span class="line">    label<span class="variable">.frame</span> = <span class="built_in">CGRectMake</span>(<span class="number">20</span>, <span class="number">40</span>, <span class="number">250</span>, <span class="number">60</span>);</span><br><span class="line">    label<span class="variable">.text</span> = <span class="built_in">NSLocalizedString</span>(<span class="string">@"key"</span>, <span class="string">@"这里是注释"</span>);</span><br><span class="line">    [<span class="keyword">self</span><span class="variable">.view</span> addSubview:label];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    <summary type="html">
    <![CDATA[<h2 id="程序名称本地化">程序名称本地化</h2><p>点击<code>项目</code> &gt; <code>PROJECT</code> &gt; <code>Info</code> &gt; <code>Localizations</code> 添加要支持的语言</p>
<p><img src="/img/localizion3.png" alt=""><br>]]>
    
    </summary>
    
      <category term="Localizaion" scheme="http://lecason.com/tags/Localizaion/"/>
    
      <category term="iOS" scheme="http://lecason.com/tags/iOS/"/>
    
      <category term="iOS" scheme="http://lecason.com/categories/iOS/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[iOS PNChart 图表生成使用]]></title>
    <link href="http://lecason.com/2015/09/02/iOS-PNChart-Use/"/>
    <id>http://lecason.com/2015/09/02/iOS-PNChart-Use/</id>
    <published>2015-09-02T07:27:20.000Z</published>
    <updated>2015-09-05T08:54:46.000Z</updated>
    <content type="html"><![CDATA[<h2 id="项目导入_PNLineChart">项目导入 PNLineChart</h2><p>确保已安装 <code>CocoaPods</code>，切换到你的项目目录。</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> pod \<span class="string">'PNChart\'</span> &gt; podfile</span><br><span class="line">pod install</span><br></pre></td></tr></table></figure>
<h2 id="使用_PNLineChart">使用 PNLineChart</h2><p>创建一个PNLineChart</p>
<figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor">#import <span class="title">"PNChart.h"</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 初使化PNLineChart</span></span><br><span class="line">PNLineChart * lineChart = [[PNLineChart alloc] initWithFrame:<span class="built_in">CGRectMake</span>(<span class="number">0</span>, <span class="number">135.0</span>, SCREEN_WIDTH, <span class="number">200.0</span>)];</span><br><span class="line"><span class="comment">// 设置X轴</span></span><br><span class="line">[lineChart setXLabels:@[<span class="string">@"SEP 1"</span>,<span class="string">@"SEP 2"</span>,<span class="string">@"SEP 3"</span>,<span class="string">@"SEP 4"</span>,<span class="string">@"SEP 5"</span>]];</span><br><span class="line"><span class="comment">// 设置Y轴</span></span><br><span class="line">[<span class="keyword">self</span><span class="variable">.lineChart</span> setYLabels:@[</span><br><span class="line">    <span class="string">@"0 min"</span>,</span><br><span class="line">    <span class="string">@"50 min"</span>,</span><br><span class="line">    <span class="string">@"100 min"</span>,</span><br><span class="line">    <span class="string">@"150 min"</span>,</span><br><span class="line">    <span class="string">@"200 min"</span>,</span><br><span class="line">    <span class="string">@"250 min"</span>,</span><br><span class="line">    <span class="string">@"300 min"</span>,</span><br><span class="line">]</span><br><span class="line">];</span><br><span class="line"></span><br><span class="line"><span class="comment">// 创建线1</span></span><br><span class="line"><span class="built_in">NSArray</span> * data01Array = @[@<span class="number">60.1</span>, @<span class="number">160.1</span>, @<span class="number">126.4</span>, @<span class="number">262.2</span>, @<span class="number">186.2</span>];</span><br><span class="line">PNLineChartData *data01 = [PNLineChartData new];</span><br><span class="line">data01<span class="variable">.color</span> = PNFreshGreen;</span><br><span class="line">data01<span class="variable">.itemCount</span> = lineChart<span class="variable">.xLabels</span><span class="variable">.count</span>;</span><br><span class="line"><span class="comment">//点的样式</span></span><br><span class="line">data01<span class="variable">.inflexionPointStyle</span> = PNLineChartPointStyleCircle;</span><br><span class="line">data01<span class="variable">.getData</span> = ^(<span class="built_in">NSUInteger</span> index) &#123;</span><br><span class="line"><span class="built_in">CGFloat</span> yValue = [data01Array[index] floatValue];</span><br><span class="line"><span class="keyword">return</span> [PNLineChartDataItem dataItemWithY:yValue];</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 创建线2</span></span><br><span class="line"><span class="built_in">NSArray</span> * data02Array = @[@<span class="number">20.1</span>, @<span class="number">180.1</span>, @<span class="number">26.4</span>, @<span class="number">202.2</span>, @<span class="number">126.2</span>];</span><br><span class="line">PNLineChartData *data02 = [PNLineChartData new];</span><br><span class="line">data02<span class="variable">.color</span> = PNTwitterColor;</span><br><span class="line">data02<span class="variable">.itemCount</span> = lineChart<span class="variable">.xLabels</span><span class="variable">.count</span>;</span><br><span class="line"><span class="comment">//点的样式</span></span><br><span class="line">data02<span class="variable">.inflexionPointStyle</span> = PNLineChartPointStyleCircle;</span><br><span class="line">data02<span class="variable">.getData</span> = ^(<span class="built_in">NSUInteger</span> index) &#123;</span><br><span class="line"><span class="built_in">CGFloat</span> yValue = [data02Array[index] floatValue];</span><br><span class="line"><span class="keyword">return</span> [PNLineChartDataItem dataItemWithY:yValue];</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 把线添加到表里</span></span><br><span class="line">lineChart<span class="variable">.chartData</span> = @[data01, data02];</span><br><span class="line">[lineChart strokeChart];</span><br><span class="line"></span><br><span class="line"><span class="comment">//添加表添加到视图里</span></span><br><span class="line">[<span class="keyword">self</span><span class="variable">.view</span> addSubview:lineChart];</span><br></pre></td></tr></table></figure>
<a id="more"></a>
<p>实现代理</p>
<figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">//添加协议</span></span><br><span class="line"><span class="class"><span class="keyword">@interface</span> <span class="title">ViewController</span> () &lt;<span class="title">PNChartDelegate</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//设置代理</span></span><br><span class="line">lineChart<span class="variable">.delegate</span> = <span class="keyword">self</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//实现方法</span></span><br><span class="line">- (<span class="keyword">void</span>)userClickedOnLineKeyPoint:(<span class="built_in">CGPoint</span>)point lineIndex:(<span class="built_in">NSInteger</span>)lineIndex pointIndex:(<span class="built_in">NSInteger</span>)pointIndex&#123;</span><br><span class="line"><span class="built_in">NSLog</span>(<span class="string">@"Click Key on line %f, %f line index is %d and point index is %d"</span>,point<span class="variable">.x</span>, point<span class="variable">.y</span>,(<span class="keyword">int</span>)lineIndex, (<span class="keyword">int</span>)pointIndex);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">- (<span class="keyword">void</span>)userClickedOnLinePoint:(<span class="built_in">CGPoint</span>)point lineIndex:(<span class="built_in">NSInteger</span>)lineIndex&#123;</span><br><span class="line"><span class="built_in">NSLog</span>(<span class="string">@"Click on line %f, %f, line index is %d"</span>,point<span class="variable">.x</span>, point<span class="variable">.y</span>, (<span class="keyword">int</span>)lineIndex);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
    <summary type="html">
    <![CDATA[<h2 id="项目导入_PNLineChart">项目导入 PNLineChart</h2><p>确保已安装 <code>CocoaPods</code>，切换到你的项目目录。</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> pod \<span class="string">'PNChart\'</span> &gt; podfile</span><br><span class="line">pod install</span><br></pre></td></tr></table></figure>
<h2 id="使用_PNLineChart">使用 PNLineChart</h2><p>创建一个PNLineChart</p>
<figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor">#import <span class="title">"PNChart.h"</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 初使化PNLineChart</span></span><br><span class="line">PNLineChart * lineChart = [[PNLineChart alloc] initWithFrame:<span class="built_in">CGRectMake</span>(<span class="number">0</span>, <span class="number">135.0</span>, SCREEN_WIDTH, <span class="number">200.0</span>)];</span><br><span class="line"><span class="comment">// 设置X轴</span></span><br><span class="line">[lineChart setXLabels:@[<span class="string">@"SEP 1"</span>,<span class="string">@"SEP 2"</span>,<span class="string">@"SEP 3"</span>,<span class="string">@"SEP 4"</span>,<span class="string">@"SEP 5"</span>]];</span><br><span class="line"><span class="comment">// 设置Y轴</span></span><br><span class="line">[<span class="keyword">self</span><span class="variable">.lineChart</span> setYLabels:@[</span><br><span class="line">    <span class="string">@"0 min"</span>,</span><br><span class="line">    <span class="string">@"50 min"</span>,</span><br><span class="line">    <span class="string">@"100 min"</span>,</span><br><span class="line">    <span class="string">@"150 min"</span>,</span><br><span class="line">    <span class="string">@"200 min"</span>,</span><br><span class="line">    <span class="string">@"250 min"</span>,</span><br><span class="line">    <span class="string">@"300 min"</span>,</span><br><span class="line">]</span><br><span class="line">];</span><br><span class="line"></span><br><span class="line"><span class="comment">// 创建线1</span></span><br><span class="line"><span class="built_in">NSArray</span> * data01Array = @[@<span class="number">60.1</span>, @<span class="number">160.1</span>, @<span class="number">126.4</span>, @<span class="number">262.2</span>, @<span class="number">186.2</span>];</span><br><span class="line">PNLineChartData *data01 = [PNLineChartData new];</span><br><span class="line">data01<span class="variable">.color</span> = PNFreshGreen;</span><br><span class="line">data01<span class="variable">.itemCount</span> = lineChart<span class="variable">.xLabels</span><span class="variable">.count</span>;</span><br><span class="line"><span class="comment">//点的样式</span></span><br><span class="line">data01<span class="variable">.inflexionPointStyle</span> = PNLineChartPointStyleCircle;</span><br><span class="line">data01<span class="variable">.getData</span> = ^(<span class="built_in">NSUInteger</span> index) &#123;</span><br><span class="line"><span class="built_in">CGFloat</span> yValue = [data01Array[index] floatValue];</span><br><span class="line"><span class="keyword">return</span> [PNLineChartDataItem dataItemWithY:yValue];</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 创建线2</span></span><br><span class="line"><span class="built_in">NSArray</span> * data02Array = @[@<span class="number">20.1</span>, @<span class="number">180.1</span>, @<span class="number">26.4</span>, @<span class="number">202.2</span>, @<span class="number">126.2</span>];</span><br><span class="line">PNLineChartData *data02 = [PNLineChartData new];</span><br><span class="line">data02<span class="variable">.color</span> = PNTwitterColor;</span><br><span class="line">data02<span class="variable">.itemCount</span> = lineChart<span class="variable">.xLabels</span><span class="variable">.count</span>;</span><br><span class="line"><span class="comment">//点的样式</span></span><br><span class="line">data02<span class="variable">.inflexionPointStyle</span> = PNLineChartPointStyleCircle;</span><br><span class="line">data02<span class="variable">.getData</span> = ^(<span class="built_in">NSUInteger</span> index) &#123;</span><br><span class="line"><span class="built_in">CGFloat</span> yValue = [data02Array[index] floatValue];</span><br><span class="line"><span class="keyword">return</span> [PNLineChartDataItem dataItemWithY:yValue];</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 把线添加到表里</span></span><br><span class="line">lineChart<span class="variable">.chartData</span> = @[data01, data02];</span><br><span class="line">[lineChart strokeChart];</span><br><span class="line"></span><br><span class="line"><span class="comment">//添加表添加到视图里</span></span><br><span class="line">[<span class="keyword">self</span><span class="variable">.view</span> addSubview:lineChart];</span><br></pre></td></tr></table></figure>]]>
    
    </summary>
    
      <category term="iOS" scheme="http://lecason.com/tags/iOS/"/>
    
      <category term="iOS" scheme="http://lecason.com/categories/iOS/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Objective-C NSDictionary 与 JsonString 之间的转换]]></title>
    <link href="http://lecason.com/2015/08/31/Objective-C-Dictonary-To-JsonString-And-Back/"/>
    <id>http://lecason.com/2015/08/31/Objective-C-Dictonary-To-JsonString-And-Back/</id>
    <published>2015-08-31T05:11:43.000Z</published>
    <updated>2015-09-05T09:20:15.000Z</updated>
    <content type="html"><![CDATA[<h2 id="NSDictionary_转_JsonString">NSDictionary 转 JsonString</h2><figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">NSDictionary</span> *dic = @&#123;<span class="string">@"cmd"</span>:<span class="string">@"login"</span>,<span class="string">@"account"</span>:<span class="string">@"18688889999"</span>,<span class="string">@"password"</span>:<span class="string">@"0ca175b9c0f726a831d895e269332461"</span>&#125;;</span><br><span class="line"></span><br><span class="line"><span class="built_in">NSData</span> *jsonData = [<span class="built_in">NSJSONSerialization</span></span><br><span class="line">                        dataWithJSONObject:dic options:<span class="built_in">NSJSONWritingPrettyPrinted</span> error:<span class="literal">nil</span>];</span><br><span class="line"></span><br><span class="line"><span class="built_in">NSString</span> *jsonString = [[<span class="built_in">NSString</span> alloc] initWithData:jsonData encoding:<span class="built_in">NSUTF8StringEncoding</span>];</span><br><span class="line"></span><br><span class="line"><span class="built_in">NSLog</span>(<span class="string">@"jsonStirng %@"</span>,jsonString);</span><br></pre></td></tr></table></figure>
<h2 id="JsonString_转_NSDicionary">JsonString 转 NSDicionary</h2><figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">NSString</span> *jsonString = <span class="string">@"&#123;\"cmd\":\"login\",\"account\": \"18688889999\",\"password\": \"0ca175b9c0f726a831d895e269332461\"&#125;"</span>;</span><br><span class="line"></span><br><span class="line"><span class="built_in">NSData</span> *jsonData = [jsonString dataUsingEncoding:<span class="built_in">NSUTF8StringEncoding</span>];</span><br><span class="line">   </span><br><span class="line"><span class="built_in">NSDictionary</span> *jsonDic = [<span class="built_in">NSJSONSerialization</span> JSONObjectWithData:data options:<span class="built_in">NSJSONReadingMutableLeaves</span> error:<span class="literal">nil</span>];</span><br><span class="line"></span><br><span class="line"><span class="built_in">NSLog</span>(<span class="string">@"jsonDic %@"</span>, jsonDic);</span><br></pre></td></tr></table></figure>]]></content>
    <summary type="html">
    <![CDATA[<h2 id="NSDictionary_转_JsonString">NSDictionary 转 JsonString</h2><figure class="highlight objectivec"><table><tr><td class="gutter"><pre><sp]]>
    </summary>
    
      <category term="Objective-C" scheme="http://lecason.com/tags/Objective-C/"/>
    
      <category term="Objective-C" scheme="http://lecason.com/categories/Objective-C/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[PHP 写个简单的Post API 以及 iOS 请求分析]]></title>
    <link href="http://lecason.com/2015/08/30/PHP-JSON-Test/"/>
    <id>http://lecason.com/2015/08/30/PHP-JSON-Test/</id>
    <published>2015-08-30T04:20:56.000Z</published>
    <updated>2015-09-05T09:22:13.000Z</updated>
    <content type="html"><![CDATA[<p>由于各种原因，以及没写过后台API，想测试一下POST，但是没有API,就想用PHP自己写一个，查了一下。发现PHP请求POST数据有3种方法。由于没有以前没有学过PHP，找了一下资料，就试试，写了以下博文。所以这些都是个人推测。</p>
<h2 id="方法1_用表单方法接收">方法1 用表单方法接收</h2><p>最常见的方法是：$_POST[‘fieldname’];</p>
<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$_POST</span>[<span class="string">'fieldname'</span>];</span><br></pre></td></tr></table></figure>
<p>说明：只能接收 Content-Type: application/x-www-form-urlencoded 提交的数据<br>解释：也就是表单POST过来的数据</p>
<h3 id="PHP_源码">PHP 源码</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor">&lt;?php</span></span><br><span class="line"><span class="variable">$username</span> = <span class="variable">$_POST</span>[<span class="string">'username'</span>];  </span><br><span class="line"><span class="variable">$password</span> = <span class="variable">$_POST</span>[<span class="string">'password'</span>];</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"username:"</span>.<span class="variable">$username</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"\n"</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"password:"</span>.<span class="variable">$password</span>; <span class="comment">//只是简单的打印</span></span><br><span class="line"><span class="preprocessor">?&gt;</span></span><br></pre></td></tr></table></figure>
<a id="more"></a>
<h3 id="iOS_NSString测试代码">iOS NSString测试代码</h3><figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//请求URL</span></span><br><span class="line"><span class="built_in">NSString</span> *urlStr = <span class="string">@"http://121.201.63.206/wel.php"</span>;</span><br><span class="line"><span class="built_in">NSURL</span> *url = [<span class="built_in">NSURL</span> URLWithString:urlStr];</span><br><span class="line"></span><br><span class="line"><span class="comment">//请求方法</span></span><br><span class="line"><span class="built_in">NSMutableURLRequest</span> *request = [<span class="built_in">NSMutableURLRequest</span> requestWithURL:url];</span><br><span class="line">request<span class="variable">.HTTPMethod</span> = <span class="string">@"POST"</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//请求参数</span></span><br><span class="line"><span class="built_in">NSString</span> *str = <span class="string">@"username=lecason&amp;password=0ca175b9c0f726a831d895e269332461"</span>;</span><br><span class="line"><span class="built_in">NSData</span> *data = [str dataUsingEncoding:<span class="built_in">NSUTF8StringEncoding</span>];</span><br><span class="line"></span><br><span class="line"><span class="comment">//发送请求</span></span><br><span class="line">[request setHTTPBody:data];</span><br><span class="line"></span><br><span class="line"><span class="comment">//打印请求</span></span><br><span class="line"><span class="built_in">NSData</span> *received = [<span class="built_in">NSURLConnection</span> sendSynchronousRequest:request returningResponse:<span class="literal">nil</span> error:<span class="literal">nil</span>];</span><br><span class="line"><span class="built_in">NSString</span> *returnStr = [[<span class="built_in">NSString</span> alloc]initWithData:received encoding:<span class="built_in">NSUTF8StringEncoding</span>];</span><br><span class="line"><span class="built_in">NSLog</span>(<span class="string">@"%@"</span>,returnStr);</span><br></pre></td></tr></table></figure>
<p>这时候查看<code>Form</code>请求数据是这个样子的：</p>
<p><img src="/img/phppost1.png" alt=""></p>
<p>这时候查看<code>Text</code>请求数据是这个样子的：</p>
<p><img src="/img/phppost2.png" alt=""></p>
<p>这时候查看返回是这样子的:</p>
<p><img src="/img/phppost3.png" alt=""></p>
<p>iOS打印是这样子的:</p>
<p><img src="/img/phppost4.png" alt=""></p>
<h3 id="iOS_NSDictionary测试代码">iOS NSDictionary测试代码</h3><figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"> <span class="comment">//请求URL</span></span><br><span class="line"><span class="built_in">NSString</span> *urlStr = <span class="string">@"http://121.201.63.206/wel.php"</span>;</span><br><span class="line"><span class="built_in">NSURL</span> *url = [<span class="built_in">NSURL</span> URLWithString:urlStr];</span><br><span class="line"></span><br><span class="line"><span class="comment">//请求方法</span></span><br><span class="line"><span class="built_in">NSMutableURLRequest</span> *request = [<span class="built_in">NSMutableURLRequest</span> requestWithURL:url];</span><br><span class="line">request<span class="variable">.HTTPMethod</span> = <span class="string">@"POST"</span>;</span><br><span class="line"></span><br><span class="line"><span class="built_in">NSDictionary</span> *jsonDic = [<span class="built_in">NSDictionary</span> dictionaryWithObjectsAndKeys: <span class="string">@"lecason"</span>,<span class="string">@"username"</span>,<span class="string">@"0ca175b9c0f726a831d895e269332461"</span>,<span class="string">@"password"</span>,<span class="literal">nil</span>];</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> ([<span class="built_in">NSJSONSerialization</span> isValidJSONObject:jsonDic])</span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">NSError</span> *error;</span><br><span class="line">    <span class="built_in">NSData</span> *jsonData = [<span class="built_in">NSJSONSerialization</span> dataWithJSONObject:jsonDic options:<span class="built_in">NSJSONWritingPrettyPrinted</span> error:&amp;error];</span><br><span class="line">    <span class="built_in">NSString</span> *json =[[<span class="built_in">NSString</span> alloc] initWithData:jsonData encoding:<span class="built_in">NSUTF8StringEncoding</span>];</span><br><span class="line">    <span class="built_in">NSLog</span>(<span class="string">@"请求的Json数据 :%@"</span>,json);</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">    <span class="comment">//发送请求</span></span><br><span class="line">    [request setHTTPBody:jsonData];</span><br><span class="line"></span><br><span class="line">    <span class="built_in">NSData</span> *received = [<span class="built_in">NSURLConnection</span> sendSynchronousRequest:request returningResponse:<span class="literal">nil</span> error:<span class="literal">nil</span>];</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">NSString</span> *returnStr = [[<span class="built_in">NSString</span> alloc]initWithData:received encoding:<span class="built_in">NSUTF8StringEncoding</span>];</span><br><span class="line">    <span class="built_in">NSLog</span>(<span class="string">@"返回的Json数据 :%@"</span>,returnStr);</span><br><span class="line">    </span><br><span class="line"> </span><br><span class="line">    <span class="comment">//转化成字典并打印返回的Json</span></span><br><span class="line">    <span class="built_in">NSDictionary</span> *dic = [<span class="built_in">NSJSONSerialization</span> JSONObjectWithData:received</span><br><span class="line">                                                        options:<span class="built_in">NSJSONReadingAllowFragments</span></span><br><span class="line">                                                          error:&amp;error];</span><br><span class="line">    <span class="built_in">NSLog</span>(<span class="string">@"转化成字典 %@"</span>,dic);</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>这时候查看<code>Form</code>请求数据是这个样子的：可以看到请求的内容已经成为了<em>表单名</em> ！</p>
<p><img src="/img/phppost5.png" alt=""></p>
<p>这时候查看<code>Text</code>请求数据是这个样子的：</p>
<p><img src="/img/phppost6.png" alt=""></p>
<p>结果为空，因为我们表单【username】【password】都没有接收到数据。这时候查看返回是这样子的:</p>
<p><img src="/img/phppost7.png" alt=""></p>
<p>iOS打印是这样子的:</p>
<p><img src="/img/phppost8.png" alt=""></p>
<h2 id="方法2_读取_POST_的原始数据">方法2 读取 POST 的原始数据</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">file_get_contents(<span class="string">"php://input"</span>)</span><br></pre></td></tr></table></figure>
<p>说明：<br>允许读取 POST 的原始数据。<br>和 <code>$HTTP_RAW_POST_DATA</code> 比起来，它给内存带来的压力较小，并且不需要任何特殊的 php.ini 设置。<br><code>php://input</code> 不能用于 <code>enctype=”multipart/form-data”</code><br>由于APP端用<code>Dictionary</code>和<code>NSJSONSerialization</code>组建出来是个纯<code>Json</code>格式文件。所以用这种方法来得到APP推送上来的数据最好。</p>
<h3 id="PHP_源码-1">PHP 源码</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor">&lt;?php</span></span><br><span class="line"><span class="variable">$postValue</span> = file_get_contents(<span class="string">"php://input"</span>);</span><br><span class="line"><span class="variable">$postValue</span> = str_replace(<span class="string">"\n"</span>,<span class="keyword">null</span>,<span class="variable">$postValue</span>); <span class="comment">//把换行符去掉</span></span><br><span class="line"><span class="keyword">echo</span> json_encode(<span class="variable">$postValue</span>); <span class="comment">//json化输出</span></span><br><span class="line"><span class="preprocessor">?&gt;</span></span><br></pre></td></tr></table></figure>
<h3 id="iOS_NSString测试代码-1">iOS NSString测试代码</h3><figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//请求URL</span></span><br><span class="line"><span class="built_in">NSString</span> *urlStr = <span class="string">@"http://121.201.63.206/wel.php"</span>;</span><br><span class="line"><span class="built_in">NSURL</span> *url = [<span class="built_in">NSURL</span> URLWithString:urlStr];</span><br><span class="line"></span><br><span class="line"><span class="comment">//请求方法</span></span><br><span class="line"><span class="built_in">NSMutableURLRequest</span> *request = [<span class="built_in">NSMutableURLRequest</span> requestWithURL:url];</span><br><span class="line">request<span class="variable">.HTTPMethod</span> = <span class="string">@"POST"</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//请求参数</span></span><br><span class="line"><span class="built_in">NSString</span> *str = <span class="string">@"username=lecason&amp;password=0ca175b9c0f726a831d895e269332461"</span>;</span><br><span class="line"><span class="built_in">NSData</span> *data = [str dataUsingEncoding:<span class="built_in">NSUTF8StringEncoding</span>];</span><br><span class="line"></span><br><span class="line"><span class="comment">//发送请求</span></span><br><span class="line">[request setHTTPBody:data];</span><br><span class="line"></span><br><span class="line"><span class="comment">//打印请求</span></span><br><span class="line"><span class="built_in">NSData</span> *received = [<span class="built_in">NSURLConnection</span> sendSynchronousRequest:request returningResponse:<span class="literal">nil</span> error:<span class="literal">nil</span>];</span><br><span class="line"><span class="built_in">NSString</span> *returnStr = [[<span class="built_in">NSString</span> alloc]initWithData:received encoding:<span class="built_in">NSUTF8StringEncoding</span>];</span><br><span class="line"><span class="built_in">NSLog</span>(<span class="string">@"%@"</span>,returnStr);</span><br></pre></td></tr></table></figure>
<p>这时候查看<code>Form</code>请求数据是这个样子的：</p>
<p><img src="/img/phppost9.png" alt=""></p>
<p>这时候查看<code>Text</code>请求数据是这个样子的：</p>
<p><img src="/img/phppost10.png" alt=""></p>
<p>这时候查看返回是这样子的:</p>
<p><img src="/img/phppost11.png" alt=""></p>
<p>iOS打印是这样子的:</p>
<p><img src="/img/phppost12.png" alt=""></p>
<h3 id="iOS_NSDictionary测试代码-1">iOS NSDictionary测试代码</h3><figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"> <span class="comment">//请求URL</span></span><br><span class="line"><span class="built_in">NSString</span> *urlStr = <span class="string">@"http://121.201.63.206/wel.php"</span>;</span><br><span class="line"><span class="built_in">NSURL</span> *url = [<span class="built_in">NSURL</span> URLWithString:urlStr];</span><br><span class="line"></span><br><span class="line"><span class="comment">//请求方法</span></span><br><span class="line"><span class="built_in">NSMutableURLRequest</span> *request = [<span class="built_in">NSMutableURLRequest</span> requestWithURL:url];</span><br><span class="line">request<span class="variable">.HTTPMethod</span> = <span class="string">@"POST"</span>;</span><br><span class="line"></span><br><span class="line"><span class="built_in">NSDictionary</span> *jsonDic = [<span class="built_in">NSDictionary</span> dictionaryWithObjectsAndKeys: <span class="string">@"lecason"</span>,<span class="string">@"username"</span>,<span class="string">@"0ca175b9c0f726a831d895e269332461"</span>,<span class="string">@"password"</span>,<span class="literal">nil</span>];</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> ([<span class="built_in">NSJSONSerialization</span> isValidJSONObject:jsonDic])</span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">NSError</span> *error;</span><br><span class="line">    <span class="built_in">NSData</span> *jsonData = [<span class="built_in">NSJSONSerialization</span> dataWithJSONObject:jsonDic options:<span class="built_in">NSJSONWritingPrettyPrinted</span> error:&amp;error];</span><br><span class="line">    <span class="built_in">NSString</span> *json =[[<span class="built_in">NSString</span> alloc] initWithData:jsonData encoding:<span class="built_in">NSUTF8StringEncoding</span>];</span><br><span class="line">    <span class="built_in">NSLog</span>(<span class="string">@"请求的Json数据 :%@"</span>,json);</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">    <span class="comment">//发送请求</span></span><br><span class="line">    [request setHTTPBody:jsonData];</span><br><span class="line"></span><br><span class="line">    <span class="built_in">NSData</span> *received = [<span class="built_in">NSURLConnection</span> sendSynchronousRequest:request returningResponse:<span class="literal">nil</span> error:<span class="literal">nil</span>];</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">NSString</span> *returnStr = [[<span class="built_in">NSString</span> alloc]initWithData:received encoding:<span class="built_in">NSUTF8StringEncoding</span>];</span><br><span class="line">    <span class="built_in">NSLog</span>(<span class="string">@"返回的Json数据 :%@"</span>,returnStr);</span><br><span class="line">    </span><br><span class="line"> </span><br><span class="line">    <span class="comment">//转化成字典并打印返回的Json</span></span><br><span class="line">    <span class="built_in">NSDictionary</span> *dic = [<span class="built_in">NSJSONSerialization</span> JSONObjectWithData:received</span><br><span class="line">                                                        options:<span class="built_in">NSJSONReadingAllowFragments</span></span><br><span class="line">                                                          error:&amp;error];</span><br><span class="line">    <span class="built_in">NSLog</span>(<span class="string">@"转化成字典 %@"</span>,dic);</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>这时候查看<code>Form</code>请求数据是这个样子的：</p>
<p><img src="/img/phppost13.png" alt=""></p>
<p>这时候查看<code>Text</code>请求数据是这个样子的：</p>
<p><img src="/img/phppost14.png" alt=""></p>
<p>因为我们接收到的是流，所以我们得到了POST上来的Json数据！这时候查看返回是这样子的:</p>
<p><img src="/img/phppost15.png" alt=""></p>
<p>iOS打印是这样子的:</p>
<p><img src="/img/phppost16.png" alt=""></p>
<h3 id="用AFNetworking来请求">用AFNetworking来请求</h3><figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">NSString</span> *urlStr = <span class="string">@"http://121.201.63.206/wel.php"</span>;</span><br><span class="line"></span><br><span class="line"><span class="built_in">NSDictionary</span> *parmas = @&#123;<span class="string">@"cmd"</span>:<span class="string">@"login"</span>,<span class="string">@"account"</span>:<span class="string">@"18688888999"</span>,<span class="string">@"password"</span>:<span class="string">@"0ca175b9c0f726a831d895e269332461"</span>&#125;;</span><br><span class="line"></span><br><span class="line">AFHTTPRequestOperationManager *manager = [AFHTTPRequestOperationManager manager];</span><br><span class="line">manager<span class="variable">.responseSerializer</span> = [AFHTTPResponseSerializer serializer];</span><br><span class="line">manager<span class="variable">.responseSerializer</span><span class="variable">.acceptableContentTypes</span> = [<span class="built_in">NSSet</span> setWithObject:<span class="string">@"text/html"</span>];</span><br><span class="line"></span><br><span class="line">[manager POST:urlStr parameters:parmas success:^(AFHTTPRequestOperation *operation, <span class="keyword">id</span> responseObject) &#123;</span><br><span class="line">            <span class="built_in">NSString</span> *returnStr = [[<span class="built_in">NSString</span> alloc]initWithData:responseObject encoding:<span class="built_in">NSUTF8StringEncoding</span>];</span><br><span class="line">            <span class="built_in">NSLog</span>(<span class="string">@"返回的Json数据 :%@"</span>,returnStr);</span><br><span class="line">    </span><br><span class="line">&#125; failure:^(AFHTTPRequestOperation *operation, <span class="built_in">NSError</span> *error) &#123;</span><br><span class="line">        <span class="built_in">NSLog</span>(<span class="string">@"error : %@"</span>,error);</span><br><span class="line">&#125;];</span><br></pre></td></tr></table></figure>
<p>这时候查看<code>Form</code>请求数据是这个样子的：</p>
<p><img src="/img/phppost17.png" alt=""></p>
<p>这时候查看<code>Text</code>请求数据是这个样子的：</p>
<p><img src="/img/phppost18.png" alt=""></p>
<p>这时候查看返回是这样子的:</p>
<p><img src="/img/phppost19.png" alt=""></p>
<p>iOS打印是这样子的:</p>
<p><img src="/img/phppost20.png" alt=""></p>
<p>可以看出，AFNetworking是把参数拆分，已模拟表单的方式来接收数据的。这时候我们PHP端就可以判断，如果接收到的是纯Json就用<code>json_decode()</code>和<code>json_encode()</code>来处理数据。如果是表单就用表单来处理。当然，这是服务端处理的方法，也可以客户端适应服务端，拼接好参数发送。</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>由于各种原因，以及没写过后台API，想测试一下POST，但是没有API,就想用PHP自己写一个，查了一下。发现PHP请求POST数据有3种方法。由于没有以前没有学过PHP，找了一下资料，就试试，写了以下博文。所以这些都是个人推测。</p>
<h2 id="方法1_用表单方法接收">方法1 用表单方法接收</h2><p>最常见的方法是：$_POST[‘fieldname’];</p>
<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$_POST</span>[<span class="string">'fieldname'</span>];</span><br></pre></td></tr></table></figure>
<p>说明：只能接收 Content-Type: application/x-www-form-urlencoded 提交的数据<br>解释：也就是表单POST过来的数据</p>
<h3 id="PHP_源码">PHP 源码</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor">&lt;?php</span></span><br><span class="line"><span class="variable">$username</span> = <span class="variable">$_POST</span>[<span class="string">'username'</span>];  </span><br><span class="line"><span class="variable">$password</span> = <span class="variable">$_POST</span>[<span class="string">'password'</span>];</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"username:"</span>.<span class="variable">$username</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"\n"</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"password:"</span>.<span class="variable">$password</span>; <span class="comment">//只是简单的打印</span></span><br><span class="line"><span class="preprocessor">?&gt;</span></span><br></pre></td></tr></table></figure>]]>
    
    </summary>
    
      <category term="PHP" scheme="http://lecason.com/tags/PHP/"/>
    
      <category term="PHP" scheme="http://lecason.com/categories/PHP/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[iOS 原生 API 请求数据的方式]]></title>
    <link href="http://lecason.com/2015/08/29/iOS-jsonRequest/"/>
    <id>http://lecason.com/2015/08/29/iOS-jsonRequest/</id>
    <published>2015-08-29T00:45:39.000Z</published>
    <updated>2015-09-05T08:59:34.000Z</updated>
    <content type="html"><![CDATA[<h2 id="Post_用_NSString_组建">Post 用 NSString 组建</h2><figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//请求URL</span></span><br><span class="line"><span class="built_in">NSString</span> *urlStr = <span class="string">@"http://www.sinaapp.com/interface.php"</span>;</span><br><span class="line"><span class="built_in">NSURL</span> *url = [<span class="built_in">NSURL</span> URLWithString:urlStr];</span><br><span class="line"></span><br><span class="line"><span class="comment">//请求方法</span></span><br><span class="line"><span class="built_in">NSMutableURLRequest</span> *request = [<span class="built_in">NSMutableURLRequest</span> requestWithURL:url];</span><br><span class="line">request<span class="variable">.HTTPMethod</span> = <span class="string">@"POST"</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//请求参数</span></span><br><span class="line"><span class="built_in">NSString</span> *str = <span class="string">@"request=&#123;\"cmd\":\"login\",\"account\": \"18688889999\",\"password\": \"0ca175b9c0f726a831d895e269332461\"&#125;"</span>;</span><br><span class="line"><span class="built_in">NSData</span> *data = [str dataUsingEncoding:<span class="built_in">NSUTF8StringEncoding</span>];</span><br><span class="line"></span><br><span class="line"><span class="comment">//发送请求</span></span><br><span class="line">[request setHTTPBody:data];</span><br><span class="line"></span><br><span class="line"><span class="comment">//打印请求</span></span><br><span class="line"><span class="built_in">NSData</span> *received = [<span class="built_in">NSURLConnection</span> sendSynchronousRequest:request returningResponse:<span class="literal">nil</span> error:<span class="literal">nil</span>];</span><br><span class="line"><span class="built_in">NSString</span> *returnStr = [[<span class="built_in">NSString</span> alloc]initWithData:received encoding:<span class="built_in">NSUTF8StringEncoding</span>];</span><br><span class="line"><span class="built_in">NSLog</span>(<span class="string">@"%@"</span>,returnStr);</span><br></pre></td></tr></table></figure>
<p>这时候请求的数据是这样子的：<br><img src="/img/nsmutableurlrequest1.jpg" alt=""></p>
<h2 id="Post_用NSDictionary组建">Post 用NSDictionary组建</h2><figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//请求URL</span></span><br><span class="line"><span class="built_in">NSString</span> *urlStr = <span class="string">@"http://www.sinaapp.com/interface.php"</span>;</span><br><span class="line"><span class="built_in">NSURL</span> *url = [<span class="built_in">NSURL</span> URLWithString:urlStr];</span><br><span class="line"></span><br><span class="line"><span class="comment">//请求方法</span></span><br><span class="line"><span class="built_in">NSMutableURLRequest</span> *request = [<span class="built_in">NSMutableURLRequest</span> requestWithURL:url];</span><br><span class="line">request<span class="variable">.HTTPMethod</span> = <span class="string">@"POST"</span>;</span><br><span class="line"></span><br><span class="line"><span class="built_in">NSDictionary</span> *jsonDic = [<span class="built_in">NSDictionary</span> dictionaryWithObjectsAndKeys:<span class="string">@"login"</span>,<span class="string">@"cmd"</span>,<span class="string">@"18688889999"</span>,<span class="string">@"account"</span>,<span class="string">@"0ca175b9c0f726a831d895e269332461"</span>,<span class="string">@"password"</span> ,<span class="literal">nil</span>];</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> ([<span class="built_in">NSJSONSerialization</span> isValidJSONObject:jsonDic])</span><br><span class="line">    </span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">NSError</span> *error;</span><br><span class="line">    <span class="built_in">NSData</span> *jsonData = [<span class="built_in">NSJSONSerialization</span> dataWithJSONObject:jsonDic options:<span class="built_in">NSJSONWritingPrettyPrinted</span> error:&amp;error];</span><br><span class="line">    <span class="built_in">NSString</span> *json =[[<span class="built_in">NSString</span> alloc] initWithData:jsonData encoding:<span class="built_in">NSUTF8StringEncoding</span>];</span><br><span class="line">    <span class="built_in">NSLog</span>(<span class="string">@"请求的Json数据 :%@"</span>,json);</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">    <span class="comment">//发送请求</span></span><br><span class="line">    [request setHTTPBody:jsonData];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//打印请求</span></span><br><span class="line"><span class="built_in">NSData</span> *received = [<span class="built_in">NSURLConnection</span> sendSynchronousRequest:request returningResponse:<span class="literal">nil</span> error:<span class="literal">nil</span>];</span><br><span class="line"><span class="built_in">NSString</span> *returnStr = [[<span class="built_in">NSString</span> alloc]initWithData:received encoding:<span class="built_in">NSUTF8StringEncoding</span>];</span><br><span class="line"><span class="built_in">NSLog</span>(<span class="string">@"接收的Json数据 :%@"</span>,returnStr);</span><br></pre></td></tr></table></figure>
<p>这时候请求的数据是这样子的：<br><img src="/img/nsmutableurlrequest2.jpg" alt=""></p>
]]></content>
    <summary type="html">
    <![CDATA[<h2 id="Post_用_NSString_组建">Post 用 NSString 组建</h2><figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line]]>
    </summary>
    
      <category term="iOS" scheme="http://lecason.com/tags/iOS/"/>
    
      <category term="iOS" scheme="http://lecason.com/categories/iOS/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Objective-C Hex NSString 与 基础类型之间的转换]]></title>
    <link href="http://lecason.com/2015/08/28/Objective-C-Hex-String-NSData-Convert/"/>
    <id>http://lecason.com/2015/08/28/Objective-C-Hex-String-NSData-Convert/</id>
    <published>2015-08-28T01:53:28.000Z</published>
    <updated>2015-09-05T09:21:37.000Z</updated>
    <content type="html"><![CDATA[<h2 id="十六进制字符串Hex_NSString_转换成_NSData">十六进制字符串Hex NSString 转换成 NSData</h2><p>创建一个NSString的类别</p>
<figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">@interface</span> <span class="title">NSString</span> (<span class="title">NSStringHexToBytes</span>)</span></span><br><span class="line">- (<span class="built_in">NSData</span> *)hexToBytes;</span><br><span class="line"><span class="keyword">@end</span></span><br></pre></td></tr></table></figure>
<figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor">#import <span class="title">"NSStringHexToBytes.h"</span></span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">@implementation</span> <span class="title">NSString</span> (<span class="title">NSStringHexToBytes</span>)</span></span><br><span class="line"></span><br><span class="line">- (<span class="built_in">NSData</span> *) hexToBytes &#123;</span><br><span class="line">    <span class="built_in">NSMutableData</span>* data = [<span class="built_in">NSMutableData</span> data];</span><br><span class="line">    <span class="keyword">int</span> idx;</span><br><span class="line">    <span class="keyword">for</span> (idx = <span class="number">0</span>; idx+<span class="number">2</span> &lt;= <span class="keyword">self</span><span class="variable">.length</span>; idx+=<span class="number">2</span>) &#123;</span><br><span class="line">        <span class="built_in">NSRange</span> range = <span class="built_in">NSMakeRange</span>(idx, <span class="number">2</span>);</span><br><span class="line">        <span class="built_in">NSString</span>* hexStr = [<span class="keyword">self</span> substringWithRange:range];</span><br><span class="line">        <span class="built_in">NSScanner</span>* scanner = [<span class="built_in">NSScanner</span> scannerWithString:hexStr];</span><br><span class="line">        <span class="keyword">unsigned</span> <span class="keyword">int</span> intValue;</span><br><span class="line">        [scanner scanHexInt:&amp;intValue];</span><br><span class="line">        [data appendBytes:&amp;intValue length:<span class="number">1</span>];  </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> data;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">@end</span></span><br></pre></td></tr></table></figure>
<p>使用方法</p>
<figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">NSString</span> *hexStr = <span class="string">@"808080"</span>;</span><br><span class="line"><span class="built_in">NSData</span> *data = hexStr<span class="variable">.hexToBytes</span>;</span><br><span class="line"><span class="built_in">NSLog</span>(<span class="string">@"%@"</span>,data);</span><br></pre></td></tr></table></figure>
<h2 id="Int_转换成_NSdata">Int 转换成 NSdata</h2><figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> i = <span class="number">1</span>;</span><br><span class="line"><span class="built_in">NSData</span> *data = [<span class="built_in">NSData</span> dataWithBytes: &amp;i length: <span class="keyword">sizeof</span>(i)];</span><br></pre></td></tr></table></figure>
<h2 id="NSdata_转换成_Int">NSdata 转换成 Int</h2><figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> i;</span><br><span class="line">[data getBytes: &amp;i length: <span class="keyword">sizeof</span>(i)];</span><br></pre></td></tr></table></figure>
<h2 id="Int_数据转_Hex_十六进制_字符串">Int 数据转 Hex 十六进制 字符串</h2><figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">i = <span class="number">10</span>;</span><br><span class="line"></span><br><span class="line"><span class="built_in">NSMutableString</span> *str = [[<span class="built_in">NSMutableString</span> alloc]initWithFormat:<span class="string">@"%02x"</span>,i ];</span><br></pre></td></tr></table></figure>
]]></content>
    <summary type="html">
    <![CDATA[<h2 id="十六进制字符串Hex_NSString_转换成_NSData">十六进制字符串Hex NSString 转换成 NSData</h2><p>创建一个NSString的类别</p>
<figure class="highlight objectivec"><tabl]]>
    </summary>
    
      <category term="Objective-C" scheme="http://lecason.com/tags/Objective-C/"/>
    
      <category term="Objective-C" scheme="http://lecason.com/categories/Objective-C/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[iOS Bluetooth 设置后台运行]]></title>
    <link href="http://lecason.com/2015/08/27/iOS-Bluetooth-Background-Mode/"/>
    <id>http://lecason.com/2015/08/27/iOS-Bluetooth-Background-Mode/</id>
    <published>2015-08-27T02:03:23.000Z</published>
    <updated>2015-09-05T09:06:22.000Z</updated>
    <content type="html"><![CDATA[<h2 id="方法一_在_info-plist_设置">方法一 在 info.plist 设置</h2><p>在<code>info.plist里面</code>添加一条</p>
<ul>
<li><code>UIBackgroundModes</code></li>
</ul>
<p>并设置两个条目</p>
<ul>
<li><code>App communicates using CoreBluetooth</code></li>
<li><code>App communicates using CoreBluetooth</code></li>
</ul>
<h2 id="方法二_在项目设置里面设置">方法二 在项目设置里面设置</h2><p>点击左侧蓝色项目 &gt; Targets &gt; Capabilities</p>
<p><img src="/img/bluetoothBackgroundMode.png" alt=""></p>
]]></content>
    <summary type="html">
    <![CDATA[<h2 id="方法一_在_info-plist_设置">方法一 在 info.plist 设置</h2><p>在<code>info.plist里面</code>添加一条</p>
<ul>
<li><code>UIBackgroundModes</code></li>
</ul]]>
    </summary>
    
      <category term="iOS" scheme="http://lecason.com/tags/iOS/"/>
    
      <category term="iOS" scheme="http://lecason.com/categories/iOS/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Objective-C 定时器 NSTimer 使用]]></title>
    <link href="http://lecason.com/2015/08/26/Objective-CNSTimer/"/>
    <id>http://lecason.com/2015/08/26/Objective-CNSTimer/</id>
    <published>2015-08-26T10:05:22.000Z</published>
    <updated>2015-09-05T09:18:31.000Z</updated>
    <content type="html"><![CDATA[<p>NSTimer 有一个属性叫 fireDate ，意思就是开始时间。所以我们设置一个超远的时间就是暂停，设置当前时间就是开始。</p>
<h2 id="创建">创建</h2><figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">_timer = [<span class="built_in">NSTimer</span> scheduledTimerWithTimeInterval:<span class="number">1</span> target:<span class="keyword">self</span> selector:<span class="keyword">@selector</span>(testTimer) userInfo:<span class="literal">nil</span> repeats:<span class="literal">YES</span>];</span><br></pre></td></tr></table></figure>
<h2 id="暂停">暂停</h2><figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[_timer setFireDate:[<span class="built_in">NSDate</span> distantFuture]];</span><br></pre></td></tr></table></figure>
<h2 id="继续">继续</h2><figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[_timer setFireDate:[<span class="built_in">NSDate</span> date]];</span><br></pre></td></tr></table></figure>
<h2 id="停止">停止</h2><figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[_time invalidate];</span><br></pre></td></tr></table></figure>
]]></content>
    <summary type="html">
    <![CDATA[<p>NSTimer 有一个属性叫 fireDate ，意思就是开始时间。所以我们设置一个超远的时间就是暂停，设置当前时间就是开始。</p>
<h2 id="创建">创建</h2><figure class="highlight objectivec"><table><tr><t]]>
    </summary>
    
      <category term="Objective-C" scheme="http://lecason.com/tags/Objective-C/"/>
    
      <category term="Objective-C" scheme="http://lecason.com/categories/Objective-C/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[开发者账号为设备创建开发调试证书]]></title>
    <link href="http://lecason.com/2015/08/22/Create-A-Cert-For-Device/"/>
    <id>http://lecason.com/2015/08/22/Create-A-Cert-For-Device/</id>
    <published>2015-08-22T11:37:35.000Z</published>
    <updated>2015-09-05T09:07:24.000Z</updated>
    <content type="html"><![CDATA[<h2 id="创建对电脑授权真机开发的证书">创建对电脑授权真机开发的证书</h2><ul>
<li>从苹果开发者中心进入<a href="https://developer.apple.com" target="_blank" rel="external">https://developer.apple.com</a> Member Center。</li>
<li><a href="https://devimages.apple.com.edgekey.net/assets/elements/membercenter/images/member-center-home-icons_2x.png" target="_blank" rel="external"></a>进入Certificates,Identifiers &amp; Profiles</li>
<li><a href="https://devimages.apple.com.edgekey.net/assets/elements/icons/32x32/folder-certificates_2x.png" target="_blank" rel="external"></a>在iOS Apps 里面点击 Certificates。</li>
<li>点击左边<code>Certificates</code>选项里面点。在后边<code>+</code>号里面添加证书。</li>
<li>点击下面选项继续</li>
</ul>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">iOS App Development</span><br><span class="line">Sign development versions of your iOS app.</span><br></pre></td></tr></table></figure>
<ul>
<li>在点击继续</li>
</ul>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">To manually generate a Certificate, you need a Certificate Signing Request (CSR) file from your Mac. To create a CSR file, follow the instructions below to create one using Keychain Access.</span><br><span class="line"></span><br><span class="line">Create a CSR file.</span><br><span class="line">In the Applications folder on your Mac, open the Utilities folder and launch Keychain Access.</span><br><span class="line"></span><br><span class="line">Within the Keychain Access drop down menu, select Keychain Access &gt; Certificate Assistant &gt; Request a Certificate from a Certificate Authority.</span><br><span class="line"></span><br><span class="line">In the Certificate Information window, enter the following information:</span><br><span class="line">In the User Email Address field, enter your email address.</span><br><span class="line">In the Common Name field, create a name <span class="keyword">for</span> your private key (e.g., John Doe Dev Key).</span><br><span class="line">The CA Email Address field should be left empty.</span><br><span class="line">In the <span class="string">"Request is"</span> group, select the <span class="string">"Saved to disk"</span> option.</span><br><span class="line">Click Continue within Keychain Access to complete the CSR generating process.</span><br></pre></td></tr></table></figure>
<ul>
<li><p>上传以前创建的 <code>CertificateSigningRequest.certSigningRequest</code> 文件</p>
</li>
<li><p>下载创建完成的文件</p>
</li>
</ul>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Download, Install and Backup</span><br><span class="line">Download your certificate to your Mac, <span class="keyword">then</span> double click the .cer file to install <span class="keyword">in</span> Keychain Access. Make sure to save a backup copy of your private and public keys somewhere secure.</span><br></pre></td></tr></table></figure>
<h2 id="添加允许真机调试的设备">添加允许真机调试的设备</h2><ul>
<li>点击左边目录中的“Devices”，同样点击右上方的“十”号，进行添加。</li>
<li>在“Register Device”里面中的“Name”填写设备名字，将来连接上对应的设备后，会在Xcode里面显示出来这个名字的。</li>
<li>在“UDID”里面填写设备的UDID，这个过程，需要通过手机或者ITunes获取，这里笔者就通过ITunes来获得了，因为ITunes自带拷贝。</li>
<li>点击“Generate”，来生成我们最后的证书。</li>
</ul>
<h2 id="创建真机调度配置文件">创建真机调度配置文件</h2><ul>
<li>选择“Provisioning Profiles”目录下的“All”，同样点击右上方的“十”号</li>
<li>在Select App ID里面选择刚才设置的ID。</li>
</ul>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">If you plan to use services such as Game Center, In-App Purchase, and Push Notifications, or want a Bundle ID unique to a single app, use an explicit App ID. If you want to create one provisioning profile <span class="keyword">for</span> multiple apps or don<span class="string">'t need a specific Bundle ID, select a wildcard App ID. Wildcard App IDs use an asterisk (*) as the last digit in the Bundle ID field. Please note that iOS App IDs and Mac App IDs cannot be used interchangeably.</span></span><br></pre></td></tr></table></figure>
<ul>
<li>下载创建好的配置文件在Mac上双击</li>
</ul>
<h2 id="Xcode上设置真机调度">Xcode上设置真机调度</h2><ul>
<li>选择工程目录下的“Supporting Files”目录下的工程名字.plist文件或者“info.plist”文件（Tips：在Xcode6.0一下都是工程名.plist，Xcode6.0以上才是info.plist）。修改里面的“Bundle identifier”标示，改为我们刚才申请的标识，如果工程中有Tests测试文件夹存在，则在测试文件的info.plist做同样修改。</li>
<li>打开你工程根目录，同命的蓝色文件，在中间的地方先选择”TARGET”下的工程同名文件，在最右边的搭接面里面选择“Build Setting”，然后找到“Code Signing”选项，在“Provisioning Profile”里面选择我们第19步创建的证书，通过名字找到。之后修改“Provisioning Profile”上面的“Code Signing Identity”选择我们通过证书找到的授权证书。四个选项全部需要修改。<br>做完这一步，回到我们中间比较窄的界面，选择“PROJECT”中的工程更同名文件，进行上述操作。</li>
<li>确保设备已连接值电脑，并在解锁状态下，在Xcode运行旁边选择“运行设备”，如图，找到自己的设备，选择，运行，等待加载吧。</li>
</ul>
]]></content>
    <summary type="html">
    <![CDATA[<h2 id="创建对电脑授权真机开发的证书">创建对电脑授权真机开发的证书</h2><ul>
<li>从苹果开发者中心进入<a href="https://developer.apple.com" target="_blank" rel="external">https://d]]>
    </summary>
    
      <category term="iOS" scheme="http://lecason.com/tags/iOS/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Objective-C NSdata 打印二进制流]]></title>
    <link href="http://lecason.com/2015/08/19/Objective-C-How-To-NSLog-NSData-In-Binary/"/>
    <id>http://lecason.com/2015/08/19/Objective-C-How-To-NSLog-NSData-In-Binary/</id>
    <published>2015-08-19T03:05:22.000Z</published>
    <updated>2015-09-05T09:12:47.000Z</updated>
    <content type="html"><![CDATA[<p>如果你想要把 <code>NSData</code> 里面的数据用纯二进制的方式打印出来，可以从 <a href="http://stackoverflow.com/questions/9173773/how-to-show-content-of-nsdata-in-bits" target="_blank" rel="external">Stackoverflow</a> 找到答案，在这里就可以清楚看到 <code>Xcode 6</code> 里面 <code>int</code> 类型是用 32 位二进制来处理的。</p>
<h2 id="打印字节流">打印字节流</h2><figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/// 定义一个 NSData  为十六进制的0x80 。</span></span><br><span class="line"><span class="built_in">NSMutableData</span> *myData = [[<span class="built_in">NSMutableData</span> alloc] init];</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">char</span> cmd = <span class="number">0x80</span>; </span><br><span class="line">[myData appendBytes:&amp;cmd length:<span class="keyword">sizeof</span>(cmd)];  </span><br><span class="line"></span><br><span class="line"><span class="comment">/// 定义一个指针，指向 myData 的内存</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">char</span> *byte = [myData bytes];</span><br><span class="line"><span class="built_in">NSLog</span>(<span class="string">@"%s"</span>,byte);</span><br></pre></td></tr></table></figure>
<a id="more"></a>
<h2 id="打印二进制流">打印二进制流</h2><figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/// 定义一个 NSData  为十六进制的0x80 。</span></span><br><span class="line"><span class="built_in">NSMutableData</span> *myData = [[<span class="built_in">NSMutableData</span> alloc] init];</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">char</span> cmd = <span class="number">0x80</span>;</span><br><span class="line">[myData appendBytes:&amp;cmd length:<span class="keyword">sizeof</span>(cmd)];</span><br><span class="line"></span><br><span class="line"><span class="comment">/// 定义一个指针，指向 myData 的内存</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">char</span> *byte = [myData bytes];</span><br><span class="line"><span class="keyword">unsigned</span> <span class="keyword">int</span> length = [data length];</span><br><span class="line"></span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;length; i++) &#123;</span><br><span class="line">		<span class="keyword">char</span> n = byte[i];</span><br><span class="line">		<span class="keyword">char</span> buffer[<span class="number">9</span>];</span><br><span class="line">		buffer[<span class="number">8</span>] = <span class="number">0</span>;</span><br><span class="line">   		<span class="keyword">int</span> j = <span class="number">8</span>;  		</span><br><span class="line">   	</span><br><span class="line">   		<span class="keyword">while</span>(j &gt; <span class="number">0</span>) &#123;</span><br><span class="line">      		<span class="keyword">if</span>(n &amp; <span class="number">0x01</span>) &#123;</span><br><span class="line">          	buffer[--j] = <span class="string">'1'</span>;</span><br><span class="line">          	&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">       	   	buffer[--j] = <span class="string">'0'</span>;</span><br><span class="line">       	   	&#125;</span><br><span class="line">			n &gt;&gt;= <span class="number">1</span>;</span><br><span class="line"> 		&#125;</span><br><span class="line"> 		printf(<span class="string">"%s "</span>,buffer);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>]]></content>
    <summary type="html">
    <![CDATA[<p>如果你想要把 <code>NSData</code> 里面的数据用纯二进制的方式打印出来，可以从 <a href="http://stackoverflow.com/questions/9173773/how-to-show-content-of-nsdata-in-bits">Stackoverflow</a> 找到答案，在这里就可以清楚看到 <code>Xcode 6</code> 里面 <code>int</code> 类型是用 32 位二进制来处理的。</p>
<h2 id="打印字节流">打印字节流</h2><figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/// 定义一个 NSData  为十六进制的0x80 。</span></span><br><span class="line"><span class="built_in">NSMutableData</span> *myData = [[<span class="built_in">NSMutableData</span> alloc] init];</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">char</span> cmd = <span class="number">0x80</span>; </span><br><span class="line">[myData appendBytes:&amp;cmd length:<span class="keyword">sizeof</span>(cmd)];  </span><br><span class="line"></span><br><span class="line"><span class="comment">/// 定义一个指针，指向 myData 的内存</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">char</span> *byte = [myData bytes];</span><br><span class="line"><span class="built_in">NSLog</span>(<span class="string">@"%s"</span>,byte);</span><br></pre></td></tr></table></figure>]]>
    
    </summary>
    
      <category term="Objective-C" scheme="http://lecason.com/tags/Objective-C/"/>
    
      <category term="Objective-C" scheme="http://lecason.com/categories/Objective-C/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[iOS 自定义对象的序列化]]></title>
    <link href="http://lecason.com/2015/08/19/iOS-Custom-Object-NSCoding/"/>
    <id>http://lecason.com/2015/08/19/iOS-Custom-Object-NSCoding/</id>
    <published>2015-08-19T03:05:22.000Z</published>
    <updated>2015-09-05T09:11:05.000Z</updated>
    <content type="html"><![CDATA[<p>面向对象的程序在运行的时候会创建一个复杂的对象图，经常要以二进制的方法序列化这个对象图，这个过程叫做Archiving. 二进制流可以通过网络或写入文件中（来源于某教材的一段话），本人的理解是当你于写数据需要本地存储时，即将你的数据写到硬盘上的时候，你就必须对他进行序列化，转换成二进制文件，从而便于在磁盘上的读写，同理在取出的时候必须将其在反序列化，这样才能将数据读出来，就好比加密和解密的过程。</p>
<h3 id="创建自定义对象并遵守_&lt;NSCoding&gt;_协议">创建自定义对象并遵守 <code>&lt;NSCoding&gt;</code> 协议</h3><figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor">#import <span class="title">&lt;Foundation/Foundation.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="built_in">NS_ENUM</span>(<span class="built_in">NSUInteger</span>, DeviceType) &#123;</span><br><span class="line">	DeviceTypeMyDevice,</span><br><span class="line">	DeviceTypeAuthDevice,</span><br><span class="line">	DeviceTypeTempDevice</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">@interface</span> <span class="title">BluetoothDevice</span> : <span class="title">NSObject</span> &lt;<span class="title">NSCoding</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">@property</span> (<span class="keyword">strong</span>,<span class="keyword">nonatomic</span>) <span class="built_in">NSString</span> *deviceName;</span><br><span class="line"><span class="keyword">@property</span> (<span class="keyword">assign</span>,<span class="keyword">nonatomic</span>) <span class="built_in">BOOL</span> soundisOn;</span><br><span class="line"><span class="keyword">@property</span> (<span class="keyword">strong</span>,<span class="keyword">nonatomic</span>) <span class="built_in">NSString</span> *authoriseCode;</span><br><span class="line"><span class="keyword">@property</span> (<span class="keyword">assign</span>,<span class="keyword">nonatomic</span>) <span class="built_in">BOOL</span> displayPage;</span><br><span class="line"><span class="keyword">@property</span> (<span class="keyword">assign</span>,<span class="keyword">nonatomic</span>) DeviceType type;</span><br><span class="line"></span><br><span class="line"><span class="keyword">@end</span></span><br></pre></td></tr></table></figure>
<a id="more"></a>
<h3 id="实现协议,看数据类型用不同的encode_和_decode。">实现协议,看数据类型用不同的encode 和 decode。</h3><ul>
<li>Object 用 encodeObject</li>
<li>BOOL 用 encodeBool</li>
<li>Enum 用 encodeInt</li>
</ul>
<figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">-(instancetype)initWithCoder:(<span class="built_in">NSCoder</span> *)aDecoder</span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">self</span> = [<span class="keyword">super</span> init];</span><br><span class="line">	<span class="keyword">if</span> (<span class="keyword">self</span>) &#123;</span><br><span class="line">	_deviceName = [aDecoder decodeObjectForKey:<span class="string">@"deviceName"</span>];</span><br><span class="line">	_soundisOn  = [aDecoder decodeBoolForKey:<span class="string">@"soundisOn"</span>];</span><br><span class="line">	_authoriseCode = [aDecoder decodeObjectForKey:<span class="string">@"authoriseCode"</span>];</span><br><span class="line">	_displayPage = [aDecoder decodeBoolForKey:<span class="string">@"displayPage"</span>];</span><br><span class="line">	_type = [aDecoder decodeIntForKey:<span class="string">@"type"</span>];</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="keyword">self</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">-(<span class="keyword">void</span>)encodeWithCoder:(<span class="built_in">NSCoder</span> *)aCoder</span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">	[aCoder encodeObject:_deviceName forKey:<span class="string">@"deviceName"</span>];</span><br><span class="line">	[aCoder encodeBool:_soundisOn forKey:<span class="string">@"soundisOn"</span>];</span><br><span class="line">	[aCoder encodeObject:_authoriseCode forKey:<span class="string">@"authoriseCode"</span>];</span><br><span class="line">	[aCoder encodeBool:_displayPage forKey:<span class="string">@"displayPage"</span>];</span><br><span class="line">	[aCoder encodeInt:_type forKey:<span class="string">@"type"</span>];</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
    <summary type="html">
    <![CDATA[<p>面向对象的程序在运行的时候会创建一个复杂的对象图，经常要以二进制的方法序列化这个对象图，这个过程叫做Archiving. 二进制流可以通过网络或写入文件中（来源于某教材的一段话），本人的理解是当你于写数据需要本地存储时，即将你的数据写到硬盘上的时候，你就必须对他进行序列化，转换成二进制文件，从而便于在磁盘上的读写，同理在取出的时候必须将其在反序列化，这样才能将数据读出来，就好比加密和解密的过程。</p>
<h3 id="创建自定义对象并遵守_&lt;NSCoding&gt;_协议">创建自定义对象并遵守 <code>&lt;NSCoding&gt;</code> 协议</h3><figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor">#import <span class="title">&lt;Foundation/Foundation.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="built_in">NS_ENUM</span>(<span class="built_in">NSUInteger</span>, DeviceType) &#123;</span><br><span class="line">	DeviceTypeMyDevice,</span><br><span class="line">	DeviceTypeAuthDevice,</span><br><span class="line">	DeviceTypeTempDevice</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">@interface</span> <span class="title">BluetoothDevice</span> : <span class="title">NSObject</span> &lt;<span class="title">NSCoding</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">@property</span> (<span class="keyword">strong</span>,<span class="keyword">nonatomic</span>) <span class="built_in">NSString</span> *deviceName;</span><br><span class="line"><span class="keyword">@property</span> (<span class="keyword">assign</span>,<span class="keyword">nonatomic</span>) <span class="built_in">BOOL</span> soundisOn;</span><br><span class="line"><span class="keyword">@property</span> (<span class="keyword">strong</span>,<span class="keyword">nonatomic</span>) <span class="built_in">NSString</span> *authoriseCode;</span><br><span class="line"><span class="keyword">@property</span> (<span class="keyword">assign</span>,<span class="keyword">nonatomic</span>) <span class="built_in">BOOL</span> displayPage;</span><br><span class="line"><span class="keyword">@property</span> (<span class="keyword">assign</span>,<span class="keyword">nonatomic</span>) DeviceType type;</span><br><span class="line"></span><br><span class="line"><span class="keyword">@end</span></span><br></pre></td></tr></table></figure>]]>
    
    </summary>
    
      <category term="iOS" scheme="http://lecason.com/tags/iOS/"/>
    
      <category term="iOS" scheme="http://lecason.com/categories/iOS/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Objective-C 已经组合数的值求它们的组成]]></title>
    <link href="http://lecason.com/2015/08/19/Objective-C-Find-Conbine/"/>
    <id>http://lecason.com/2015/08/19/Objective-C-Find-Conbine/</id>
    <published>2015-08-19T03:05:22.000Z</published>
    <updated>2015-09-05T09:09:23.000Z</updated>
    <content type="html"><![CDATA[<p>在蓝牙开发的时候，当想发现特征<code>characteristic</code>里面可以写的时候再保存这个写的特征到本地属性。这时候我就想写</p>
<figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> (propertie <span class="keyword">in</span> characteristic<span class="variable">.properties</span>)&#123;</span><br><span class="line">	<span class="keyword">if</span> (propertie == CBCharacteristicPropertyWrite)</span><br><span class="line">	_writePropertie = propertie</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>但是发现<code>characteristic.properties</code>是一个十六进制的值0x22。这时候我就点开<code>CBCharacteristicProperties</code>发现是一个枚举：</p>
<figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">typedef</span> <span class="built_in">NS_OPTIONS</span>(<span class="built_in">NSUInteger</span>, CBCharacteristicProperties) &#123;</span><br><span class="line">    CBCharacteristicPropertyBroadcast = <span class="number">0x01</span>,</span><br><span class="line">    CBCharacteristicPropertyRead	= <span class="number">0x02</span>,</span><br><span class="line">    CBCharacteristicPropertyWriteWithoutResponse = <span class="number">0x04</span>,</span><br><span class="line">    CBCharacteristicPropertyWrite 	= <span class="number">0x08</span>,</span><br><span class="line">    CBCharacteristicPropertyNotify = <span class="number">0x10</span>,</span><br><span class="line">    CBCharacteristicPropertyIndicate	 = <span class="number">0x20</span>,</span><br><span class="line">    CBCharacteristicPropertyAuthenticatedSignedWrites = <span class="number">0x40</span>,</span><br><span class="line">    CBCharacteristicPropertyExtendedProperties = <span class="number">0x80</span>,</span><br><span class="line">    CBCharacteristicPropertyNotifyEncryptionRequired <span class="built_in">NS_ENUM_AVAILABLE</span>(NA, <span class="number">6</span>_0)		= <span class="number">0x100</span>,</span><br><span class="line">    CBCharacteristicPropertyIndicateEncryptionRequired <span class="built_in">NS_ENUM_AVAILABLE</span>(NA, <span class="number">6</span>_0)	= <span class="number">0x200</span></span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>
<p>就猜想0x22应该是由上面的组合而成，而且知道了值就应该能反推出来值是由哪个组成的。猜想算法，先用结果<code>0x22</code>减去枚举的值，从大到小开始减，一直循环到0，就能找出组合数。</p>
<figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> propertie = <span class="number">0x22</span>;    <span class="comment">/// 返回的值</span></span><br><span class="line"><span class="keyword">int</span> properties = <span class="number">0x200</span>;  <span class="comment">/// 枚举最大的值</span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++) &#123;</span><br><span class="line">    <span class="keyword">if</span> ((propertie - properties) &lt; <span class="number">0</span>) &#123;</span><br><span class="line">        properties = properties / <span class="number">2</span>;  <span class="comment">/// 倍数增长就除以2</span></span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        propertie = propertie - propertie / <span class="number">2</span>;</span><br><span class="line">        <span class="built_in">NSLog</span>(<span class="string">@"%d"</span>,(propertie - <span class="number">1</span>) / <span class="number">2</span> );</span><br><span class="line">        <span class="keyword">switch</span> ((propertie - <span class="number">1</span>) / <span class="number">2</span>) &#123;</span><br><span class="line">            <span class="keyword">case</span> CBCharacteristicPropertyIndicateEncryptionRequired:</span><br><span class="line">                <span class="built_in">NSLog</span>(<span class="string">@"CBCharacteristicPropertyIndicateEncryptionRequired"</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> CBCharacteristicPropertyNotifyEncryptionRequired:</span><br><span class="line">                <span class="built_in">NSLog</span>(<span class="string">@"CBCharacteristicPropertyNotifyEncryptionRequired"</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> CBCharacteristicPropertyExtendedProperties:</span><br><span class="line">                <span class="built_in">NSLog</span>(<span class="string">@"CBCharacteristicPropertyExtendedProperties"</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> CBCharacteristicPropertyAuthenticatedSignedWrites:</span><br><span class="line">                <span class="built_in">NSLog</span>(<span class="string">@"CBCharacteristicPropertyAuthenticatedSignedWrites"</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> CBCharacteristicPropertyIndicate:</span><br><span class="line">                <span class="built_in">NSLog</span>(<span class="string">@"CBCharacteristicPropertyIndicate"</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> CBCharacteristicPropertyNotify:</span><br><span class="line">                <span class="built_in">NSLog</span>(<span class="string">@"CBCharacteristicPropertyNotify"</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> CBCharacteristicPropertyWrite:</span><br><span class="line">                <span class="built_in">NSLog</span>(<span class="string">@"CBCharacteristicPropertyWrite"</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> CBCharacteristicPropertyWriteWithoutResponse:</span><br><span class="line">                <span class="built_in">NSLog</span>(<span class="string">@"CBCharacteristicPropertyWriteWithoutResponse"</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> CBCharacteristicPropertyRead:</span><br><span class="line">                <span class="built_in">NSLog</span>(<span class="string">@"CBCharacteristicPropertyRead"</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> CBCharacteristicPropertyBroadcast:</span><br><span class="line">                <span class="built_in">NSLog</span>(<span class="string">@"CBCharacteristicPropertyBroadcast"</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">default</span>:</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>但是发现上面的算法是有错误的，所以又写了另一个算法。</p>
<figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> propertie = <span class="number">22</span>;    <span class="comment">/// 返回的值</span></span><br><span class="line"><span class="keyword">int</span> properties = <span class="number">512</span>;  <span class="comment">/// 枚举最大的值</span></span><br><span class="line">    </span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt;= <span class="number">512</span>; i++) &#123;</span><br><span class="line">      <span class="keyword">if</span> (propertie - properties &gt;= <span class="number">0</span>) &#123;     <span class="comment">//第一次，寻找可以除最大的数</span></span><br><span class="line">           propertie = propertie % properties;</span><br><span class="line">           <span class="built_in">NSLog</span>(<span class="string">@"分解数：%d"</span>,properties);</span><br><span class="line">           <span class="keyword">if</span> (propertie == <span class="number">0</span>) &#123;</span><br><span class="line">               <span class="keyword">break</span>;</span><br><span class="line">           &#125;</span><br><span class="line">       &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        properties = properties / <span class="number">2</span>;</span><br><span class="line">	&#125;</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure>
]]></content>
    <summary type="html">
    <![CDATA[<p>在蓝牙开发的时候，当想发现特征<code>characteristic</code>里面可以写的时候再保存这个写的特征到本地属性。这时候我就想写</p>
<figure class="highlight objectivec"><table><tr><td class="g]]>
    </summary>
    
      <category term="iOS" scheme="http://lecason.com/tags/iOS/"/>
    
      <category term="Objective-C" scheme="http://lecason.com/categories/Objective-C/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[iOS UITableViewCell里面的自定义控件传值]]></title>
    <link href="http://lecason.com/2015/08/18/iOS-Custom-Switch-PassCell/"/>
    <id>http://lecason.com/2015/08/18/iOS-Custom-Switch-PassCell/</id>
    <published>2015-08-18T06:36:44.000Z</published>
    <updated>2015-09-05T09:14:40.000Z</updated>
    <content type="html"><![CDATA[<p>TableViewCell里面添加了一个Switch，当点击Switch的时候，把当前点击的行和自身的isOn值传给拥有TableViewCell的TableView来处理。</p>
<h2 id="处理TableViewCell">处理TableViewCell</h2><p>先新建一个TableViewCell的文件，定义代理变量，和添加zjSwitch属性。</p>
<figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">@interface</span> <span class="title">SettingTableViewCell</span> : <span class="title">UITableViewCell</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">@property</span> (<span class="keyword">strong</span>,<span class="keyword">nonatomic</span>) ZJSwitch *zjSwitch; <span class="comment">/// 自定义的Switch或者系统的</span></span><br><span class="line"><span class="keyword">@property</span> (<span class="keyword">weak</span>,<span class="keyword">nonatomic</span>) <span class="keyword">id</span>&lt;ZJSwitchDelegate&gt; delegate;</span><br><span class="line"></span><br><span class="line"><span class="keyword">@end</span></span><br></pre></td></tr></table></figure>
<a id="more"></a>
<p>在initWithStyle方法里面并添加Switch。</p>
<figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">- (instancetype)initWithStyle:(<span class="built_in">UITableViewCellStyle</span>)style reuseIdentifier:(<span class="built_in">NSString</span> *)reuseIdentifier</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">self</span> = [<span class="keyword">super</span> initWithStyle:style reuseIdentifier:reuseIdentifier];</span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">self</span>) &#123;</span><br><span class="line">        <span class="keyword">self</span><span class="variable">.zjSwitch</span> = [[ZJSwitch alloc] initWithFrame:<span class="built_in">CGRectMake</span>(<span class="keyword">self</span><span class="variable">.frame</span><span class="variable">.size</span><span class="variable">.width</span> - <span class="number">20</span>, <span class="number">15</span>, <span class="number">60</span>, <span class="number">31</span>)];</span><br><span class="line">        <span class="keyword">self</span><span class="variable">.zjSwitch</span><span class="variable">.backgroundColor</span> = [<span class="built_in">UIColor</span> clearColor];</span><br><span class="line">        [<span class="keyword">self</span><span class="variable">.zjSwitch</span> addTarget:<span class="keyword">self</span> action:<span class="keyword">@selector</span>(handleSwitchEvent:) forControlEvents:<span class="built_in">UIControlEventValueChanged</span>];</span><br><span class="line">        [<span class="keyword">self</span> addSubview:<span class="keyword">self</span><span class="variable">.zjSwitch</span>];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">self</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>定义一个代理</p>
<figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">@protocol</span> <span class="title">ZJSwitchDelegate</span> &lt;<span class="title">NSObject</span>&gt;</span></span><br><span class="line"></span><br><span class="line">- (<span class="keyword">void</span>)zjSwitchTouch:(<span class="built_in">BOOL</span>)isON inCell:(SettingTableViewCell *)cell;</span><br><span class="line"></span><br><span class="line"><span class="keyword">@end</span></span><br></pre></td></tr></table></figure>
<p>Switch点击的时候就把值通过代理传出去</p>
<figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">- (<span class="keyword">void</span>)handleSwitchEvent:(<span class="keyword">id</span>)sender</span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">/// 把当前是否打开的值通过代理传出去</span></span><br><span class="line">    SettingTableViewCell * cell = (SettingTableViewCell *)[sender superview];</span><br><span class="line">    [<span class="keyword">self</span><span class="variable">.delegate</span> zjSwitchTouch:<span class="keyword">self</span><span class="variable">.zjSwitch</span><span class="variable">.isOn</span> inCell:cell];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="处理TabelView">处理TabelView</h2><p>遵守协议</p>
<figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">@interface</span> <span class="title">TableViewController</span> ()&lt;<span class="title">ZJSwitchDelegate</span>&gt;</span></span><br><span class="line"><span class="keyword">@end</span></span><br></pre></td></tr></table></figure>
<p>在cellForRowAtIndexPath里面设置代理为自己</p>
<figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cell<span class="variable">.delegate</span> = <span class="keyword">self</span>;</span><br></pre></td></tr></table></figure>
<p>当点击Cell上的Switch的时候，就会触发TableView里面的代理方法</p>
<figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">- (<span class="keyword">void</span>)zjSwitchTouch:(<span class="built_in">BOOL</span>)isON inCell:(SettingTableViewCell *)cell</span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">BOOL</span> ison = isON;</span><br><span class="line">    <span class="built_in">NSLog</span>(<span class="string">@"%@ %@"</span>,cell<span class="variable">.settingsNameLabel</span><span class="variable">.text</span>,ison?<span class="string">@"开"</span>:<span class="string">@"关"</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    <summary type="html">
    <![CDATA[<p>TableViewCell里面添加了一个Switch，当点击Switch的时候，把当前点击的行和自身的isOn值传给拥有TableViewCell的TableView来处理。</p>
<h2 id="处理TableViewCell">处理TableViewCell</h2><p>先新建一个TableViewCell的文件，定义代理变量，和添加zjSwitch属性。</p>
<figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">@interface</span> <span class="title">SettingTableViewCell</span> : <span class="title">UITableViewCell</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">@property</span> (<span class="keyword">strong</span>,<span class="keyword">nonatomic</span>) ZJSwitch *zjSwitch; <span class="comment">/// 自定义的Switch或者系统的</span></span><br><span class="line"><span class="keyword">@property</span> (<span class="keyword">weak</span>,<span class="keyword">nonatomic</span>) <span class="keyword">id</span>&lt;ZJSwitchDelegate&gt; delegate;</span><br><span class="line"></span><br><span class="line"><span class="keyword">@end</span></span><br></pre></td></tr></table></figure>]]>
    
    </summary>
    
      <category term="iOS" scheme="http://lecason.com/tags/iOS/"/>
    
      <category term="iOS" scheme="http://lecason.com/categories/iOS/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Mac 安装 Hexo 教程]]></title>
    <link href="http://lecason.com/2015/08/16/How-To-Install-Hexo-In-Mac/"/>
    <id>http://lecason.com/2015/08/16/How-To-Install-Hexo-In-Mac/</id>
    <published>2015-08-16T15:05:35.000Z</published>
    <updated>2015-09-05T13:37:35.000Z</updated>
    <content type="html"><![CDATA[<p>Hexo,作者是来自湾湾的<code>tommy351</code>大神,一个基于 <code>Node.js</code> 的博客框架，可以实现一个静态网页组成的博客，而且更轻更快，更适合程序猿使用。Hexo 是一个轻量的静态博客框架。通过Hexo可以快速生成一个静态博客框架,仅需要几条命令就可以完成,相当方便。<br>而架设Hexo的环境更简单了 不需要lnmp/lamp这些繁琐复杂的环境 仅仅需要一个简单的http服务器即可使用 或者使用互联网上免费的页面托管服务比如Hexo的官方网站<a href="http://hexo.io" target="_blank" rel="external">http://hexo.io</a> 就是托管于github的pages服务上。</p>
<h2 id="下载安装Node-js">下载安装Node.js</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://nodejs.org/dist/v0.<span class="number">12.7</span>/node-v0.<span class="number">12.7</span>.pkg</span><br></pre></td></tr></table></figure>
<p>把Node.js的官方源替换为淘宝npm源，再执行安装Hexo。</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo npm install -g cnpm --registry=https://registry.npm.taobao.org</span><br></pre></td></tr></table></figure>
<a id="more"></a> 
<h2 id="通过npm安装Hexo">通过npm安装Hexo</h2><p>新建一个文件夹用来保存Blog</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mkdir blog</span><br><span class="line"><span class="built_in">cd</span> blog</span><br></pre></td></tr></table></figure>
<p>初使化Hexo</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo init</span><br><span class="line">sudo npm install</span><br></pre></td></tr></table></figure>
<p>如果安装失败，我尝试下面的命令来安装</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo npm install --unsafe-perm --verbose -g hexo</span><br></pre></td></tr></table></figure>
<h2 id="Hexo的配置方法">Hexo的配置方法</h2><p>所有配置通过<code>_config.yml</code>来配置</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Archives</span></span><br><span class="line">archive: <span class="number">1</span> <span class="comment">#设置为1 是全部展示</span></span><br><span class="line">category: <span class="number">2</span></span><br><span class="line">tag: <span class="number">2</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Server</span></span><br><span class="line">port: <span class="number">4000</span> <span class="comment">#本地服务器端口是4000</span></span><br><span class="line">server_ip: localhost <span class="comment">#本地服务器地址</span></span><br><span class="line">logger: <span class="literal">false</span></span><br><span class="line">logger_format: dev</span><br><span class="line"></span><br><span class="line"><span class="comment"># Date / Time format</span></span><br><span class="line">date_format: MMM D YYYY <span class="comment">#日期格式</span></span><br><span class="line">time_format: H:mm:ss <span class="comment">#时间格式</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Pagination</span></span><br><span class="line"><span class="comment">## Set per_page to 0 to disable pagination</span></span><br><span class="line">per_page: <span class="number">10</span></span><br><span class="line">pagination_dir: page</span><br><span class="line"></span><br><span class="line"><span class="comment"># Disqus</span></span><br><span class="line">disqus_shortname: <span class="comment">#disqus的用户名称</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Extensions</span></span><br><span class="line">theme: landscape <span class="comment">#主题设置</span></span><br><span class="line">exclude_generator:</span><br><span class="line"></span><br><span class="line"><span class="comment"># Deployment</span></span><br><span class="line">deploy:</span><br><span class="line">  <span class="built_in">type</span>:</span><br><span class="line">Hexo主题设置</span><br><span class="line"></span><br><span class="line">同样编辑主题文件夹的_config.yml</span><br><span class="line"></span><br><span class="line"><span class="comment"># Header</span></span><br><span class="line">menu:    <span class="comment">#导航栏连接</span></span><br><span class="line">   Home: /</span><br><span class="line">   Archives: /archives</span><br><span class="line">rss: /atom.xml  <span class="comment">#rss地址  默认即可</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Content</span></span><br><span class="line">excerpt_link: Read More <span class="comment">#阅读更多的文字显示</span></span><br><span class="line">fancybox: <span class="literal">true</span> <span class="comment">#开启fancybox效果</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Sidebar  #侧边栏设置</span></span><br><span class="line">sidebar: right</span><br><span class="line">widgets:</span><br><span class="line">  - category</span><br><span class="line">  - tag</span><br><span class="line">  - tagcloud</span><br><span class="line">  - archive</span><br><span class="line">  - recent_posts</span><br><span class="line"></span><br><span class="line"><span class="comment"># Miscellaneous # 社交网络和统计连接地址</span></span><br><span class="line">google_analytics: <span class="comment"># google analytics ID</span></span><br><span class="line">favicon: /favicon.png <span class="comment"># 网站的favicon</span></span><br><span class="line">twitter:</span><br><span class="line">google_plus:</span><br><span class="line">fb_admins:</span><br><span class="line">fb_app_id:</span><br></pre></td></tr></table></figure>
<h3 id="配置_Github_Pages">配置 Github Pages</h3><p>想上传到github要先配置好hexo。</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure>
<p>再改_config.yum配置文件下面</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># You can use this:</span></span><br><span class="line">deploy:</span><br><span class="line">  <span class="built_in">type</span>: git</span><br><span class="line">  repo: &lt;repository url&gt;</span><br><span class="line">  branch: [branch]</span><br><span class="line">  message: [message]</span><br><span class="line"></span><br><span class="line"><span class="comment"># or this:</span></span><br><span class="line">deploy:</span><br><span class="line">  <span class="built_in">type</span>: git</span><br><span class="line">  message: [message]</span><br><span class="line">  repo: </span><br><span class="line">    github: &lt;repository url&gt;,[branch]</span><br><span class="line">    gitcafe: &lt;repository url&gt;,[branch]</span><br></pre></td></tr></table></figure>
<p>配置git的一个例子</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Deployment</span></span><br><span class="line"><span class="comment">## Docs: http://hexo.io/docs/deployment.html</span></span><br><span class="line">deploy: </span><br><span class="line"> <span class="built_in">type</span>: git</span><br><span class="line"> repo: https://github.com/lecason/lecason.github.io.git</span><br><span class="line"> branch: master   </span><br><span class="line"> -----------------------</span><br></pre></td></tr></table></figure>
<h3 id="添加RSS">添加RSS</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo npm install hexo-generator-feed --save <span class="comment">#安装feed</span></span><br></pre></td></tr></table></figure>
<p>在_config.yml里添加</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rss: /atom.xml</span><br></pre></td></tr></table></figure>
<h3 id="添加Wixo主题">添加Wixo主题</h3><p>在博客根目录下执行如下命令。</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/wzpan/hexo-theme-wixo.git themes/wixo</span><br></pre></td></tr></table></figure>
<p>Wixo 需要安装 Hexo 3.0 及以上版本，请先升级您的 Hexo 程序，再启用此主题。<br>修改你的博客根目录下的_config.yml配置文件中的theme属性，将其设置为wixo。</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">theme: wixo</span><br></pre></td></tr></table></figure>
<p>配置主题</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">rss: atom.xml</span><br><span class="line">fancybox: <span class="literal">true</span></span><br><span class="line">favicon: favicon.png</span><br><span class="line">fold: <span class="literal">true</span>  <span class="comment"># 是否开启所有目录功能</span></span><br><span class="line">google_analytics:</span><br><span class="line">scratch_name: Scratch  <span class="comment"># 新建文章的时候没有目录标签会默认放在这个目录</span></span><br></pre></td></tr></table></figure>
<p>用<code>hexo new post &#39;test&#39;</code>生成的文章配置的一个例子</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">title: Tag Plugins</span><br><span class="line">date: <span class="number">2014</span>-<span class="number">03</span>-<span class="number">16</span> <span class="number">10</span>:<span class="number">17</span>:<span class="number">16</span></span><br><span class="line">categories: Docs <span class="comment"># 文件夹功能</span></span><br><span class="line">toc: <span class="literal">true</span>  <span class="comment"># 目录功能开关</span></span><br><span class="line">---</span><br></pre></td></tr></table></figure>
<p>更新主题</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> themes/wixo</span><br><span class="line">git pull origin master</span><br></pre></td></tr></table></figure>
<p>请先备份您主题目录下的 _config.yml 文件后再升级。主题的配置文件在主题的<code>_config.yml</code>里面配置。</p>
<h3 id="给主题没带有目录功能的Hexo加上目录功能">给主题没带有目录功能的Hexo加上目录功能</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo npm install hexo-toc --save</span><br></pre></td></tr></table></figure>
<p>然后在<code>_config.yml</code>里面添加</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">toc:</span><br><span class="line">  maxDepth: <span class="number">3</span></span><br></pre></td></tr></table></figure>
<p>然后在文章里面想要的位置添加<code>&lt;!-- toc --&gt;</code>就可以了。</p>
<h2 id="Hexo部署方法">Hexo部署方法</h2><h3 id="推送到_Github_Pages">推送到 Github Pages</h3><p>修改后就可以部署上去了</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo clean <span class="comment">#清除缓存 网页正常情况下可以忽略此条命令</span></span><br><span class="line">hexo g <span class="comment">#生成静态网页</span></span><br><span class="line">hexo d <span class="comment">#开始部署</span></span><br></pre></td></tr></table></figure>
<h3 id="本地查看">本地查看</h3><p>本地服务查看 localhost:4000</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo server <span class="comment">#本地服务查看</span></span><br></pre></td></tr></table></figure>
<h2 id="写文章">写文章</h2><h3 id="新建文章">新建文章</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new post &lt;title&gt;</span><br></pre></td></tr></table></figure>
<h3 id="新建页面">新建页面</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new page &lt;title&gt;</span><br></pre></td></tr></table></figure>
<p>然后你会发现source里面多了个目录about，里面有个index.md。其实你也可以手动建立。页面的格式和文章一样。接着把链接加上,在主题下的<code>_config.yml</code>里面的menu一项，添加一行<code>About: /about</code>。</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">##### Menu</span></span><br><span class="line">menu:</span><br><span class="line">  Home: /</span><br><span class="line">  Archives: /archives</span><br><span class="line">  iOS: /iOS</span><br><span class="line">  About: /about</span><br><span class="line"><span class="comment">## you can create `tags` and `categories` folders in `../source`.</span></span><br><span class="line"><span class="comment">## And create a `index.md` file in each of them.</span></span><br><span class="line"><span class="comment">## set `front-matter`as</span></span><br><span class="line"><span class="comment">## layout: tags (or categories)</span></span><br><span class="line"><span class="comment">## title: tags (or categories)</span></span><br><span class="line"><span class="comment">## ---</span></span><br></pre></td></tr></table></figure>
<p>创建出来的<code>index.md</code>文件前缀</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">title: title <span class="comment">#文章标题</span></span><br><span class="line">date: <span class="number">2015</span>-<span class="number">02</span>-<span class="number">05</span> <span class="number">12</span>:<span class="number">47</span>:<span class="number">44</span> <span class="comment">#文章生成时间</span></span><br><span class="line">categories: <span class="comment">#文章分类目录 可以省略</span></span><br><span class="line">tags: <span class="comment">#文章标签 可以省略</span></span><br><span class="line">description: <span class="comment">#你对本页的描述 可以省略</span></span><br><span class="line">---   </span><br><span class="line">这里开始使用markdown格式输入你的正文。</span><br></pre></td></tr></table></figure>
<h3 id="多标签注意语法格式">多标签注意语法格式</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">tags:</span><br><span class="line">- 标签<span class="number">1</span></span><br><span class="line">- 标签<span class="number">2</span></span><br><span class="line">- 标签<span class="number">3</span></span><br><span class="line">- etc...</span><br></pre></td></tr></table></figure>
<p>或者用</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[tags1,tags2]</span><br></pre></td></tr></table></figure>
<h3 id="设置文章摘要">设置文章摘要</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">以上是文章摘要</span><br><span class="line">&lt;!--more--&gt;</span><br><span class="line">以下是余下全文</span><br></pre></td></tr></table></figure>
<h2 id="可能的问题">可能的问题</h2><p>有可能权限有问题,出现这种错误把package.json 的归属从root改回你当前的用户。</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Error: EACCES, open <span class="string">'/Users/lecason/Documents/Blog/package.json'</span></span><br><span class="line">    at Error (native)</span><br></pre></td></tr></table></figure>
<p>生成的文章有问题，注意查看代码块之间要有换行，标题之间要有空格。</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>Hexo,作者是来自湾湾的<code>tommy351</code>大神,一个基于 <code>Node.js</code> 的博客框架，可以实现一个静态网页组成的博客，而且更轻更快，更适合程序猿使用。Hexo 是一个轻量的静态博客框架。通过Hexo可以快速生成一个静态博客框架,仅需要几条命令就可以完成,相当方便。<br>而架设Hexo的环境更简单了 不需要lnmp/lamp这些繁琐复杂的环境 仅仅需要一个简单的http服务器即可使用 或者使用互联网上免费的页面托管服务比如Hexo的官方网站<a href="http://hexo.io">http://hexo.io</a> 就是托管于github的pages服务上。</p>
<h2 id="下载安装Node-js">下载安装Node.js</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://nodejs.org/dist/v0.<span class="number">12.7</span>/node-v0.<span class="number">12.7</span>.pkg</span><br></pre></td></tr></table></figure>
<p>把Node.js的官方源替换为淘宝npm源，再执行安装Hexo。</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo npm install -g cnpm --registry=https://registry.npm.taobao.org</span><br></pre></td></tr></table></figure>]]>
    
    </summary>
    
      <category term="Hexo" scheme="http://lecason.com/tags/Hexo/"/>
    
  </entry>
  
</feed>

<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title><![CDATA[LECASON]]></title>
  
  <link href="/atom.xml" rel="self"/>
  <link href="http://lecason.com/"/>
  <updated>2015-10-24T03:08:54.000Z</updated>
  <id>http://lecason.com/</id>
  
  <author>
    <name><![CDATA[Lecason]]></name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title><![CDATA[iOS 插入耳机的时候强制通过手机自带扬声器来播放声音]]></title>
    <link href="http://lecason.com/2015/10/24/Force-audio-output-to-speakers-while-headphones-are-plugged-in/"/>
    <id>http://lecason.com/2015/10/24/Force-audio-output-to-speakers-while-headphones-are-plugged-in/</id>
    <published>2015-10-24T02:51:26.000Z</published>
    <updated>2015-10-24T03:08:54.000Z</updated>
    <content type="html"><![CDATA[<h2 id="系统要求">系统要求</h2><p>iOS Version &lt;= 6.0</p>
<h2 id="新建文件">新建文件</h2><p><code>AudioRouter.h</code></p>
<figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor">#import <span class="title">&lt;Foundation/Foundation.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">@interface</span> <span class="title">AudioRouter</span> : <span class="title">NSObject</span></span></span><br><span class="line"></span><br><span class="line">+ (<span class="keyword">void</span>) initAudioSessionRouting;</span><br><span class="line">+ (<span class="keyword">void</span>) switchToDefaultHardware;</span><br><span class="line">+ (<span class="keyword">void</span>) forceOutputToBuiltInSpeakers;</span><br><span class="line"></span><br><span class="line"><span class="keyword">@end</span></span><br></pre></td></tr></table></figure>
<p><code>AudioRouter.m</code></p>
<figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor">#import <span class="title">"AudioRouter.h"</span></span></span><br><span class="line"><span class="preprocessor">#import <span class="title">&lt;AudioToolbox/AudioToolbox.h&gt;</span></span></span><br><span class="line"><span class="preprocessor">#import <span class="title">&lt;AVFoundation/AVFoundation.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">@implementation</span> <span class="title">AudioRouter</span></span></span><br><span class="line"></span><br><span class="line"><span class="preprocessor">#define IS_DEBUGGING NO</span></span><br><span class="line"><span class="preprocessor">#define IS_DEBUGGING_EXTRA_INFO NO</span></span><br><span class="line"></span><br><span class="line">+ (<span class="keyword">void</span>) initAudioSessionRouting &#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Called once to route all audio through speakers, even if something's plugged into the headphone jack</span></span><br><span class="line">    <span class="keyword">static</span> <span class="built_in">BOOL</span> audioSessionSetup = <span class="literal">NO</span>;</span><br><span class="line">    <span class="keyword">if</span> (audioSessionSetup == <span class="literal">NO</span>) &#123;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// set category to accept properties assigned below</span></span><br><span class="line">        <span class="built_in">NSError</span> *sessionError = <span class="literal">nil</span>;</span><br><span class="line">        [[<span class="built_in">AVAudioSession</span> sharedInstance] setCategory:<span class="built_in">AVAudioSessionCategoryPlayAndRecord</span> withOptions:<span class="built_in">AVAudioSessionCategoryOptionDefaultToSpeaker</span> error: &amp;sessionError];</span><br><span class="line"></span><br><span class="line">        <span class="comment">// Doubly force audio to come out of speaker</span></span><br><span class="line">        <span class="built_in">UInt32</span> audioRouteOverride = kAudioSessionOverrideAudioRoute_Speaker;</span><br><span class="line">        AudioSessionSetProperty (kAudioSessionProperty_OverrideAudioRoute, <span class="keyword">sizeof</span>(audioRouteOverride), &amp;audioRouteOverride);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// fix issue with audio interrupting video recording - allow audio to mix on top of other media</span></span><br><span class="line">        <span class="built_in">UInt32</span> doSetProperty = <span class="number">1</span>;</span><br><span class="line">        AudioSessionSetProperty (kAudioSessionProperty_OverrideCategoryMixWithOthers, <span class="keyword">sizeof</span>(doSetProperty), &amp;doSetProperty);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// set active</span></span><br><span class="line">        [[<span class="built_in">AVAudioSession</span> sharedInstance] setActive: <span class="literal">YES</span> error: <span class="literal">nil</span>];</span><br><span class="line"></span><br><span class="line">        <span class="comment">// add listener for audio input changes</span></span><br><span class="line">        AudioSessionAddPropertyListener (kAudioSessionProperty_AudioRouteChange, onAudioRouteChange, <span class="literal">nil</span> );</span><br><span class="line">        AudioSessionAddPropertyListener (kAudioSessionProperty_AudioInputAvailable, onAudioRouteChange, <span class="literal">nil</span> );</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Force audio to come out of speaker</span></span><br><span class="line">    [[<span class="built_in">AVAudioSession</span> sharedInstance] overrideOutputAudioPort:<span class="built_in">AVAudioSessionPortOverrideSpeaker</span> error:<span class="literal">nil</span>];</span><br><span class="line"></span><br><span class="line">    <span class="comment">// set flag</span></span><br><span class="line">    audioSessionSetup = <span class="literal">YES</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">+ (<span class="keyword">void</span>) switchToDefaultHardware &#123;</span><br><span class="line">    <span class="comment">// Remove forcing to built-in speaker</span></span><br><span class="line">    <span class="built_in">UInt32</span> audioRouteOverride = kAudioSessionOverrideAudioRoute_None;</span><br><span class="line">    AudioSessionSetProperty (kAudioSessionProperty_OverrideAudioRoute, <span class="keyword">sizeof</span>(audioRouteOverride), &amp;audioRouteOverride);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">+ (<span class="keyword">void</span>) forceOutputToBuiltInSpeakers &#123;</span><br><span class="line">    <span class="comment">// Re-force audio to come out of speaker</span></span><br><span class="line">    <span class="built_in">UInt32</span> audioRouteOverride = kAudioSessionOverrideAudioRoute_Speaker;</span><br><span class="line">    AudioSessionSetProperty (kAudioSessionProperty_OverrideAudioRoute, <span class="keyword">sizeof</span>(audioRouteOverride), &amp;audioRouteOverride);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">void</span> onAudioRouteChange (<span class="keyword">void</span>* clientData, AudioSessionPropertyID inID, <span class="built_in">UInt32</span> dataSize, <span class="keyword">const</span> <span class="keyword">void</span>* inData) &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>( IS_DEBUGGING == <span class="literal">YES</span> ) &#123;</span><br><span class="line">        <span class="built_in">NSLog</span>(<span class="string">@"==== Audio Harware Status ===="</span>);</span><br><span class="line">        <span class="built_in">NSLog</span>(<span class="string">@"Current Input:  %@"</span>, [AudioRouter getAudioSessionInput]);</span><br><span class="line">        <span class="built_in">NSLog</span>(<span class="string">@"Current Output: %@"</span>, [AudioRouter getAudioSessionOutput]);</span><br><span class="line">        <span class="built_in">NSLog</span>(<span class="string">@"Current hardware route: %@"</span>, [AudioRouter getAudioSessionRoute]);</span><br><span class="line">        <span class="built_in">NSLog</span>(<span class="string">@"=============================="</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>( IS_DEBUGGING_EXTRA_INFO == <span class="literal">YES</span> ) &#123;</span><br><span class="line">        <span class="built_in">NSLog</span>(<span class="string">@"==== Audio Harware Status (EXTENDED) ===="</span>);</span><br><span class="line">        <span class="built_in">CFDictionaryRef</span> dict = (<span class="built_in">CFDictionaryRef</span>)inData;</span><br><span class="line">        <span class="built_in">CFNumberRef</span> reason = <span class="built_in">CFDictionaryGetValue</span>(dict, kAudioSession_RouteChangeKey_Reason);</span><br><span class="line">        <span class="built_in">CFDictionaryRef</span> oldRoute = <span class="built_in">CFDictionaryGetValue</span>(dict, kAudioSession_AudioRouteChangeKey_PreviousRouteDescription);</span><br><span class="line">        <span class="built_in">CFDictionaryRef</span> newRoute = <span class="built_in">CFDictionaryGetValue</span>(dict, kAudioSession_AudioRouteChangeKey_CurrentRouteDescription);</span><br><span class="line">        <span class="built_in">NSLog</span>(<span class="string">@"Audio old route: %@"</span>, oldRoute);</span><br><span class="line">        <span class="built_in">NSLog</span>(<span class="string">@"Audio new route: %@"</span>, newRoute);</span><br><span class="line">        <span class="built_in">NSLog</span>(<span class="string">@"Audio reason: %@"</span>,reason);</span><br><span class="line">        <span class="built_in">NSLog</span>(<span class="string">@"========================================="</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">+ (<span class="built_in">NSString</span>*) getAudioSessionInput &#123;</span><br><span class="line">    <span class="built_in">UInt32</span> routeSize;</span><br><span class="line">    AudioSessionGetPropertySize(kAudioSessionProperty_AudioRouteDescription, &amp;routeSize);</span><br><span class="line">    <span class="built_in">CFDictionaryRef</span> desc; <span class="comment">// this is the dictionary to contain descriptions</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// make the call to get the audio description and populate the desc dictionary</span></span><br><span class="line">    AudioSessionGetProperty (kAudioSessionProperty_AudioRouteDescription, &amp;routeSize, &amp;desc);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// the dictionary contains 2 keys, for input and output. Get output array</span></span><br><span class="line">    <span class="built_in">CFArrayRef</span> outputs = <span class="built_in">CFDictionaryGetValue</span>(desc, kAudioSession_AudioRouteKey_Inputs);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// the output array contains 1 element - a dictionary</span></span><br><span class="line">    <span class="built_in">CFDictionaryRef</span> diction = <span class="built_in">CFArrayGetValueAtIndex</span>(outputs, <span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// get the output description from the dictionary</span></span><br><span class="line">    <span class="built_in">CFStringRef</span> input = <span class="built_in">CFDictionaryGetValue</span>(diction, kAudioSession_AudioRouteKey_Type);</span><br><span class="line">    <span class="keyword">return</span> [<span class="built_in">NSString</span> stringWithFormat:<span class="string">@"%@"</span>, input];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">+ (<span class="built_in">NSString</span>*) getAudioSessionOutput &#123;</span><br><span class="line">    <span class="built_in">UInt32</span> routeSize;</span><br><span class="line">    AudioSessionGetPropertySize(kAudioSessionProperty_AudioRouteDescription, &amp;routeSize);</span><br><span class="line">    <span class="built_in">CFDictionaryRef</span> desc; <span class="comment">// this is the dictionary to contain descriptions</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// make the call to get the audio description and populate the desc dictionary</span></span><br><span class="line">    AudioSessionGetProperty (kAudioSessionProperty_AudioRouteDescription, &amp;routeSize, &amp;desc);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// the dictionary contains 2 keys, for input and output. Get output array</span></span><br><span class="line">    <span class="built_in">CFArrayRef</span> outputs = <span class="built_in">CFDictionaryGetValue</span>(desc, kAudioSession_AudioRouteKey_Outputs);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// the output array contains 1 element - a dictionary</span></span><br><span class="line">    <span class="built_in">CFDictionaryRef</span> diction = <span class="built_in">CFArrayGetValueAtIndex</span>(outputs, <span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// get the output description from the dictionary</span></span><br><span class="line">    <span class="built_in">CFStringRef</span> output = <span class="built_in">CFDictionaryGetValue</span>(diction, kAudioSession_AudioRouteKey_Type);</span><br><span class="line">    <span class="keyword">return</span> [<span class="built_in">NSString</span> stringWithFormat:<span class="string">@"%@"</span>, output];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">+ (<span class="built_in">NSString</span>*) getAudioSessionRoute &#123;</span><br><span class="line">    <span class="comment">/*</span><br><span class="line">    returns the current session route:</span><br><span class="line">    * ReceiverAndMicrophone</span><br><span class="line">    * HeadsetInOut</span><br><span class="line">    * Headset</span><br><span class="line">    * HeadphonesAndMicrophone</span><br><span class="line">    * Headphone</span><br><span class="line">    * SpeakerAndMicrophone</span><br><span class="line">    * Speaker</span><br><span class="line">    * HeadsetBT</span><br><span class="line">    * LineInOut</span><br><span class="line">    * Lineout</span><br><span class="line">    * Default</span><br><span class="line">    */</span></span><br><span class="line"></span><br><span class="line">    <span class="built_in">UInt32</span> rSize = <span class="keyword">sizeof</span> (<span class="built_in">CFStringRef</span>);</span><br><span class="line">    <span class="built_in">CFStringRef</span> route;</span><br><span class="line">    AudioSessionGetProperty (kAudioSessionProperty_AudioRoute, &amp;rSize, &amp;route);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (route == <span class="literal">NULL</span>) &#123;</span><br><span class="line">        <span class="built_in">NSLog</span>(<span class="string">@"Silent switch is currently on"</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="string">@"None"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> [<span class="built_in">NSString</span> stringWithFormat:<span class="string">@"%@"</span>, route];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="把bomb-png_改成_bomb-wav_拉进项目文件夹里面">把bomb.png 改成 bomb.wav 拉进项目文件夹里面</h2><p><img src="/img/bomb.png" alt=""></p>
<h2 id="新建一个播放声音的方法">新建一个播放声音的方法</h2><figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">- (<span class="keyword">void</span>)playMusic</span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">CFBundleRef</span> mainBundle = <span class="built_in">CFBundleGetMainBundle</span>();</span><br><span class="line">    <span class="built_in">CFURLRef</span>        soundFileURLRef;</span><br><span class="line">    SystemSoundID   soundFileObject;</span><br><span class="line">    soundFileURLRef  = <span class="built_in">CFBundleCopyResourceURL</span> (mainBundle,<span class="built_in">CFSTR</span> (<span class="string">"bomb"</span>),<span class="built_in">CFSTR</span> (<span class="string">"wav"</span>),<span class="literal">NULL</span>);</span><br><span class="line">    AudioServicesCreateSystemSoundID (soundFileURLRef,&amp;soundFileObject);</span><br><span class="line">    AudioServicesPlaySystemSound (soundFileObject);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="使用方法">使用方法</h2><figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">- (<span class="keyword">void</span>)viewDidLoad</span><br><span class="line">&#123;</span><br><span class="line">    [<span class="keyword">super</span> viewDidLoad];</span><br><span class="line">    [AudioRouter initAudioSessionRouting];</span><br><span class="line">    [AudioRouter switchToDefaultHardware];</span><br><span class="line">    [AudioRouter forceOutputToBuiltInSpeakers];</span><br><span class="line">    [<span class="keyword">self</span> playMusic];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="参考资料">参考资料</h2><ul>
<li><a href="http://uihacker.blogspot.it/2013/08/ios-force-audio-output-to-speakers.html" target="_blank" rel="external">Force audio output to speakers while headphones are plugged in</a></li>
<li><a href="http://blog.csdn.net/lixing333/article/details/43154541" target="_blank" rel="external">iOS录音和播放的那些事儿：几个奇葩的需求</a></li>
</ul>
]]></content>
    <summary type="html">
    <![CDATA[<h2 id="系统要求">系统要求</h2><p>iOS Version &lt;= 6.0</p>
<h2 id="新建文件">新建文件</h2><p><code>AudioRouter.h</code></p>
<figure class="highlight object]]>
    </summary>
    
      <category term="iOS" scheme="http://lecason.com/tags/iOS/"/>
    
      <category term="iOS" scheme="http://lecason.com/categories/iOS/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[iOS 基于 CSR8670 蓝牙芯片的蓝牙耳机开发]]></title>
    <link href="http://lecason.com/2015/10/23/iOS-CSR8670-Bluetooth-Headset-Development/"/>
    <id>http://lecason.com/2015/10/23/iOS-CSR8670-Bluetooth-Headset-Development/</id>
    <published>2015-10-23T07:33:39.000Z</published>
    <updated>2015-10-23T07:35:32.000Z</updated>
    <content type="html"><![CDATA[<h2 id="CSR8670_蓝牙芯片的基本参数">CSR8670 蓝牙芯片的基本参数</h2><p>基于CSR8670 4.0双模蓝牙模块，包含了A2DP（音乐播放），AVRCP（流媒体控制及音乐封面<br>传输），HFP（免提通话），SPP（数据传输），PBAPC（电话本同步），HID（鼠标），BLE<br>DataTrans（低功耗模式下的小数据传输）等协议。模块上的VREG高电平开机、低电平关机，开<br>机后自动连接最近连接的手机。蓝牙模块与MCU执行UART 通信，使用AT指令实现连接、断开、<br>拨打电话、音乐播放及远程控制、下载电话本、数据传输等功能。方案因采用4.0双模式，无需<br>MFI认证可以兼容安卓、苹果和微软等平台的数据通信。</p>
]]></content>
    <summary type="html">
    <![CDATA[<h2 id="CSR8670_蓝牙芯片的基本参数">CSR8670 蓝牙芯片的基本参数</h2><p>基于CSR8670 4.0双模蓝牙模块，包含了A2DP（音乐播放），AVRCP（流媒体控制及音乐封面<br>传输），HFP（免提通话），SPP（数据传输），PBAPC（电话本同]]>
    </summary>
    
      <category term="iOS" scheme="http://lecason.com/tags/iOS/"/>
    
      <category term="iOS" scheme="http://lecason.com/categories/iOS/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[CentOS LAMP 环境安装]]></title>
    <link href="http://lecason.com/2015/10/21/Centos-LAMP/"/>
    <id>http://lecason.com/2015/10/21/Centos-LAMP/</id>
    <published>2015-10-21T09:29:48.000Z</published>
    <updated>2015-10-21T09:42:31.000Z</updated>
    <content type="html"><![CDATA[<h1 id="中文问题">中文问题</h1><ul>
<li>Apache支持中文</li>
</ul>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># vi /etc/httpd/conf/httpd.conf</span></span><br></pre></td></tr></table></figure>
<p>在里面把 AddDefaultCharset UTF-8 改成</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># AddDefaultCharset GB2312</span></span><br></pre></td></tr></table></figure>
<ul>
<li>PHP支持中文</li>
</ul>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># vi /etc/php.ini</span></span><br></pre></td></tr></table></figure>
<p>在里面把 ;default_charset = “iso-8859-1”改成：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># default_charset = GB2312</span></span><br></pre></td></tr></table></figure>
<ul>
<li>MySQL支持中文</li>
</ul>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># vi /etc/my.cnf</span></span><br></pre></td></tr></table></figure>
<p>在里面加上</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[mysqld]</span><br><span class="line">character-set-server=utf8</span><br><span class="line">collation-server=utf8_general_ci</span><br><span class="line">[client]</span><br><span class="line">default-character-set=utf8</span><br></pre></td></tr></table></figure>
]]></content>
    <summary type="html">
    <![CDATA[<h1 id="中文问题">中文问题</h1><ul>
<li>Apache支持中文</li>
</ul>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1]]>
    </summary>
    
  </entry>
  
  <entry>
    <title><![CDATA[iOS 监听来电事件]]></title>
    <link href="http://lecason.com/2015/10/21/detecting-the-call-events-in-ios/"/>
    <id>http://lecason.com/2015/10/21/detecting-the-call-events-in-ios/</id>
    <published>2015-10-21T03:06:43.000Z</published>
    <updated>2015-10-21T03:09:26.000Z</updated>
    <content type="html"><![CDATA[<p>注意，ARC下不设置成员变量会释放掉无法监听。</p>
<figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">@interface</span> <span class="title">AppDelegate</span> ()</span></span><br><span class="line"><span class="keyword">@property</span> (<span class="keyword">strong</span>, <span class="keyword">nonatomic</span>) CTCallCenter *callCenter;</span><br><span class="line"><span class="keyword">@end</span></span><br></pre></td></tr></table></figure>
<figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">-(<span class="keyword">void</span>)detectCall</span><br><span class="line">&#123;</span><br><span class="line">    _callCenter = [[CTCallCenter alloc] init];</span><br><span class="line">    _callCenter<span class="variable">.callEventHandler</span>=^(CTCall* call)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (call<span class="variable">.callState</span> == CTCallStateDisconnected)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">NSLog</span>(<span class="string">@"Call has been disconnected"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (call<span class="variable">.callState</span> == CTCallStateConnected)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">NSLog</span>(<span class="string">@"Call has just been connected"</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(call<span class="variable">.callState</span> == CTCallStateIncoming)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">NSLog</span>(<span class="string">@"Call is incoming"</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (call<span class="variable">.callState</span> ==CTCallStateDialing)</span><br><span class="line">            &#123;</span><br><span class="line">        <span class="built_in">NSLog</span>(<span class="string">@"call is dialing"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">NSLog</span>(<span class="string">@"Nothing is done"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    <summary type="html">
    <![CDATA[<p>注意，ARC下不设置成员变量会释放掉无法监听。</p>
<figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span ]]>
    </summary>
    
      <category term="iOS" scheme="http://lecason.com/tags/iOS/"/>
    
      <category term="iOS" scheme="http://lecason.com/categories/iOS/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[iOS 自动布局AutoLayout]]></title>
    <link href="http://lecason.com/2015/10/08/iOS-AutoLayout/"/>
    <id>http://lecason.com/2015/10/08/iOS-AutoLayout/</id>
    <published>2015-10-08T03:31:50.000Z</published>
    <updated>2015-10-08T03:45:10.000Z</updated>
    <content type="html"><![CDATA[<p>用代码来写自动布局，要先把 <code>[view setTranslatesAutoresizingMaskIntoConstraints:NO];</code> 设置成 <code>NO</code>,不然自动布局将不生效，会按以前的AutoresizingMask来进行设置。</p>
<h2 id="设置View的大小为100_x_100,然后在Controller-view中居中">设置View的大小为100 x 100,然后在Controller.view中居中</h2><figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">- (<span class="keyword">void</span>)viewDidLoad</span><br><span class="line">&#123;</span><br><span class="line">    [<span class="keyword">super</span> viewDidLoad];</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 添加View</span></span><br><span class="line">    <span class="built_in">UIView</span> *view = [[<span class="built_in">UIView</span> alloc] init];</span><br><span class="line">    view<span class="variable">.backgroundColor</span> = [<span class="built_in">UIColor</span> redColor];</span><br><span class="line">    [view setTranslatesAutoresizingMaskIntoConstraints:<span class="literal">NO</span>];</span><br><span class="line">    [<span class="keyword">self</span><span class="variable">.view</span> addSubview:view];</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 设置水平居中</span></span><br><span class="line">    <span class="built_in">NSLayoutConstraint</span> *centerX = [<span class="built_in">NSLayoutConstraint</span> constraintWithItem:view attribute:<span class="built_in">NSLayoutAttributeCenterX</span> relatedBy:<span class="built_in">NSLayoutRelationEqual</span> toItem:<span class="keyword">self</span><span class="variable">.view</span> attribute:<span class="built_in">NSLayoutAttributeCenterX</span> multiplier:<span class="number">1</span> constant:<span class="number">0</span>];</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 设置垂直居中</span></span><br><span class="line">    <span class="built_in">NSLayoutConstraint</span> *centerY = [<span class="built_in">NSLayoutConstraint</span> constraintWithItem:view attribute:<span class="built_in">NSLayoutAttributeCenterY</span> relatedBy:<span class="built_in">NSLayoutRelationEqual</span> toItem:<span class="keyword">self</span><span class="variable">.view</span> attribute:<span class="built_in">NSLayoutAttributeCenterY</span> multiplier:<span class="number">1</span> constant:<span class="number">0</span>];</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 设置宽度</span></span><br><span class="line">    <span class="built_in">NSLayoutConstraint</span> *width = [<span class="built_in">NSLayoutConstraint</span> constraintWithItem:view attribute:<span class="built_in">NSLayoutAttributeWidth</span> relatedBy:<span class="built_in">NSLayoutRelationEqual</span> toItem:<span class="literal">nil</span> attribute:<span class="built_in">NSLayoutAttributeNotAnAttribute</span> multiplier:<span class="number">1</span> constant:<span class="number">100</span>];</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 设置高度</span></span><br><span class="line">    <span class="built_in">NSLayoutConstraint</span> *height = [<span class="built_in">NSLayoutConstraint</span> constraintWithItem:view attribute:<span class="built_in">NSLayoutAttributeHeight</span> relatedBy:<span class="built_in">NSLayoutRelationEqual</span> toItem:<span class="literal">nil</span> attribute:<span class="built_in">NSLayoutAttributeNotAnAttribute</span> multiplier:<span class="number">1</span> constant:<span class="number">100</span>];</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 激活布局</span></span><br><span class="line">    centerX<span class="variable">.active</span> = <span class="literal">YES</span>;</span><br><span class="line">    centerY<span class="variable">.active</span> = <span class="literal">YES</span>;</span><br><span class="line">    width<span class="variable">.active</span> = <span class="literal">YES</span>;</span><br><span class="line">    height<span class="variable">.active</span> = <span class="literal">YES</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>效果：</p>
<p><img src="/img/iosautolayout1.png" alt=""></p>
<h2 id="设置View上下左右的边距为20">设置View上下左右的边距为20</h2><figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">- (<span class="keyword">void</span>)viewDidLoad</span><br><span class="line">&#123;</span><br><span class="line">    [<span class="keyword">super</span> viewDidLoad];</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 添加View</span></span><br><span class="line">    <span class="built_in">UIView</span> *view = [[<span class="built_in">UIView</span> alloc] init];</span><br><span class="line">    view<span class="variable">.backgroundColor</span> = [<span class="built_in">UIColor</span> redColor];</span><br><span class="line">    [view setTranslatesAutoresizingMaskIntoConstraints:<span class="literal">NO</span>];</span><br><span class="line">    [<span class="keyword">self</span><span class="variable">.view</span> addSubview:view];</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 设置距离</span></span><br><span class="line">    <span class="built_in">NSLayoutConstraint</span> *left = [<span class="built_in">NSLayoutConstraint</span> constraintWithItem:view attribute:<span class="built_in">NSLayoutAttributeLeft</span> relatedBy:<span class="built_in">NSLayoutRelationEqual</span> toItem:<span class="keyword">self</span><span class="variable">.view</span> attribute:<span class="built_in">NSLayoutAttributeLeft</span> multiplier:<span class="number">1</span> constant:<span class="number">20</span>];</span><br><span class="line"></span><br><span class="line">    <span class="built_in">NSLayoutConstraint</span> *right = [<span class="built_in">NSLayoutConstraint</span> constraintWithItem:view attribute:<span class="built_in">NSLayoutAttributeRight</span> relatedBy:<span class="built_in">NSLayoutRelationEqual</span> toItem:<span class="keyword">self</span><span class="variable">.view</span> attribute:<span class="built_in">NSLayoutAttributeRight</span> multiplier:<span class="number">1</span> constant:-<span class="number">20</span>];</span><br><span class="line"></span><br><span class="line">    <span class="built_in">NSLayoutConstraint</span> *top = [<span class="built_in">NSLayoutConstraint</span> constraintWithItem:view attribute:<span class="built_in">NSLayoutAttributeTop</span> relatedBy:<span class="built_in">NSLayoutRelationEqual</span> toItem:<span class="keyword">self</span><span class="variable">.view</span> attribute:<span class="built_in">NSLayoutAttributeTop</span> multiplier:<span class="number">1</span> constant:<span class="number">20</span>];</span><br><span class="line"></span><br><span class="line">    <span class="built_in">NSLayoutConstraint</span> *bottom = [<span class="built_in">NSLayoutConstraint</span> constraintWithItem:view attribute:<span class="built_in">NSLayoutAttributeBottom</span> relatedBy:<span class="built_in">NSLayoutRelationEqual</span> toItem:<span class="keyword">self</span><span class="variable">.view</span> attribute:<span class="built_in">NSLayoutAttributeBottom</span> multiplier:<span class="number">1</span> constant:-<span class="number">20</span>];</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 激活布局</span></span><br><span class="line">    left<span class="variable">.active</span> = <span class="literal">YES</span>;</span><br><span class="line">    right<span class="variable">.active</span> = <span class="literal">YES</span>;</span><br><span class="line">    top<span class="variable">.active</span> = <span class="literal">YES</span>;</span><br><span class="line">    bottom<span class="variable">.active</span> = <span class="literal">YES</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>效果：</p>
<p><img src="/img/iosautolayout2.png" alt=""></p>
]]></content>
    <summary type="html">
    <![CDATA[<p>用代码来写自动布局，要先把 <code>[view setTranslatesAutoresizingMaskIntoConstraints:NO];</code> 设置成 <code>NO</code>,不然自动布局将不生效，会按以前的AutoresizingMask来进]]>
    </summary>
    
      <category term="iOS" scheme="http://lecason.com/tags/iOS/"/>
    
      <category term="iOS" scheme="http://lecason.com/categories/iOS/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Map 高德地图开发]]></title>
    <link href="http://lecason.com/2015/09/29/Gaode-Map/"/>
    <id>http://lecason.com/2015/09/29/Gaode-Map/</id>
    <published>2015-09-29T01:16:27.000Z</published>
    <updated>2015-09-29T14:40:44.000Z</updated>
    <content type="html"><![CDATA[<p>LBS开放平台地址：<a href="http://lbs.amap.com" target="_blank" rel="external">http://lbs.amap.com</a>，申请API并导入相关文件，iOS 8在<code>Info.plist</code>里面添加设置 <code>NSLocationWhenInUseUsageDescription</code>请求权限。</p>
<h2 id="创建地图并显示">创建地图并显示</h2><p>创建MAMapView</p>
<figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor">#import <span class="title">"ViewController.h"</span></span></span><br><span class="line"><span class="preprocessor">#import <span class="title">&lt;MAMapKit/MAMapKit.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="preprocessor">#define APIKey @<span class="title">"f9ddf1dd0e1d7ab50f0d24c6e02e512c"</span></span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">@interface</span> <span class="title">ViewController</span> ()  &lt;<span class="title">MAMapViewDelegate</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">@property</span> (<span class="keyword">nonatomic</span>, <span class="keyword">strong</span>) MAMapView *mapView;</span><br><span class="line"></span><br><span class="line"><span class="keyword">@end</span></span><br></pre></td></tr></table></figure>
<p>初使化，在viewDidLoad里面</p>
<figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">- (<span class="keyword">void</span>)initMapView &#123;</span><br><span class="line"></span><br><span class="line">    [MAMapServices sharedServices]<span class="variable">.apiKey</span> = APIKey;</span><br><span class="line">    _mapView = [[MAMapView alloc] initWithFrame:<span class="built_in">CGRectMake</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="built_in">CGRectGetWidth</span>(<span class="keyword">self</span><span class="variable">.view</span><span class="variable">.bounds</span>), <span class="built_in">CGRectGetHeight</span>(<span class="keyword">self</span><span class="variable">.view</span><span class="variable">.bounds</span>))];</span><br><span class="line">    _mapView<span class="variable">.delegate</span> = <span class="keyword">self</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    [<span class="keyword">self</span><span class="variable">.view</span> addSubview:_mapView];</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="创建导航Button">创建导航Button</h2><p>记得在viewDidLoad里面init</p>
<figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">- (<span class="keyword">void</span>)initControls &#123;</span><br><span class="line"></span><br><span class="line">    _locationButton = [[<span class="built_in">UIButton</span> alloc] initWithFrame:<span class="built_in">CGRectMake</span>(<span class="number">20</span>, <span class="built_in">CGRectGetHeight</span>(_mapView<span class="variable">.bounds</span>) - <span class="number">80</span>, <span class="number">40</span>, <span class="number">40</span>)];</span><br><span class="line">    _locationButton<span class="variable">.autoresizingMask</span> = <span class="built_in">UIViewAutoresizingFlexibleRightMargin</span> | <span class="built_in">UIViewAutoresizingFlexibleTopMargin</span>;</span><br><span class="line">    _locationButton<span class="variable">.backgroundColor</span> = [<span class="built_in">UIColor</span> whiteColor];</span><br><span class="line">    _locationButton<span class="variable">.layer</span><span class="variable">.cornerRadius</span> = <span class="number">5</span>;</span><br><span class="line">    [_locationButton addTarget:<span class="keyword">self</span> action:<span class="keyword">@selector</span>(locateAction) forControlEvents:<span class="built_in">UIControlEventTouchDown</span>];</span><br><span class="line">    [_locationButton setImage:[<span class="built_in">UIImage</span> imageNamed:<span class="string">@""</span>] forState:<span class="built_in">UIControlStateNormal</span>];</span><br><span class="line">    [_mapView addSubview:_locationButton];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">- (<span class="keyword">void</span>)locateAction &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (_mapView<span class="variable">.userTrackingMode</span> != MAUserTrackingModeFollow) &#123;</span><br><span class="line">    [_mapView setUserTrackingMode: MAUserTrackingModeFollow animated:<span class="literal">YES</span>];</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>状态改变的时候调用接口</p>
<figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 当userTrackingMode改变时调用此接口</span></span><br><span class="line">- (<span class="keyword">void</span>)mapView:(MAMapView *)mapView didChangeUserTrackingMode:(MAUserTrackingMode)mode animated:(<span class="built_in">BOOL</span>)animated &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (mode == MAUserTrackingModeNone) &#123;</span><br><span class="line">        _locationButton<span class="variable">.backgroundColor</span> = [<span class="built_in">UIColor</span> whiteColor];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (mode == MAUserTrackingModeFollow) &#123;</span><br><span class="line">        _locationButton<span class="variable">.backgroundColor</span> = [<span class="built_in">UIColor</span> blueColor];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="地理编码和逆地理编码查找当前坐标地址">地理编码和逆地理编码查找当前坐标地址</h2><p>导入头文件以及设置代理</p>
<figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="preprocessor">#import <span class="title">&lt;AMapSearchKit/AMapSearchKit.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">@interface</span> <span class="title">ViewController</span> ()  &lt;<span class="title">AMapSearchDelegate</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">@property</span> (<span class="keyword">nonatomic</span>, <span class="keyword">strong</span>) AMapSearchAPI *search;</span><br><span class="line"></span><br><span class="line"><span class="keyword">@end</span></span><br></pre></td></tr></table></figure>
<p>初始化</p>
<figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">- (<span class="keyword">void</span>)initSearch &#123;</span><br><span class="line"></span><br><span class="line">    [AMapSearchServices sharedServices]<span class="variable">.apiKey</span> = APIKey;</span><br><span class="line">    _search = [[AMapSearchAPI alloc] init];</span><br><span class="line">    _search<span class="variable">.delegate</span> = <span class="keyword">self</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>按下locationButton时，保存地理位置信息到本地变量</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">@interface ViewController ()  &#60;MAMapViewDelegate,AMapSearchDelegate&#62;&#10;&#10;@property (nonatomic, strong) CLLocation *currentLocation;&#10;&#10;@end</span><br></pre></td></tr></table></figure>
<p>更新位置后调用接口</p>
<figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">- (<span class="keyword">void</span>)mapView:(MAMapView *)mapView didUpdateUserLocation:(MAUserLocation *)userLocation updatingLocation:(<span class="built_in">BOOL</span>)updatingLocation &#123;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">NSLog</span>(<span class="string">@"userLocaton: %@"</span>,userLocation<span class="variable">.location</span>);</span><br><span class="line">    _currentLocation = userLocation<span class="variable">.location</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>逆地理编码请求方法</p>
<figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">- (<span class="keyword">void</span>)reGeoAction &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (_currentLocation) &#123;</span><br><span class="line">        AMapReGeocodeSearchRequest *request = [[AMapReGeocodeSearchRequest alloc] init];</span><br><span class="line">        request<span class="variable">.location</span> = [AMapGeoPoint locationWithLatitude:_currentLocation<span class="variable">.coordinate</span><span class="variable">.latitude</span> longitude:_currentLocation<span class="variable">.coordinate</span><span class="variable">.longitude</span>];</span><br><span class="line">        [_search AMapReGoecodeSearch:request];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>请求后的回调方法 </p>
<figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 逆地理编码请求请求失败的时候调用接口</span></span><br><span class="line">- (<span class="keyword">void</span>)AMapSearchRequest:(<span class="keyword">id</span>)request didFailWithError:(<span class="built_in">NSError</span> *)error &#123;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">NSLog</span>(<span class="string">@"request: %@, error: %@"</span>,request,error);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 逆地理编码请求请求成功的时候调用接口</span></span><br><span class="line">- (<span class="keyword">void</span>)onReGeocodeSearchDone:(AMapReGeocodeSearchRequest *)request response:(AMapReGeocodeSearchResponse *)response &#123;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">NSLog</span>(<span class="string">@"response %@"</span>,response);</span><br><span class="line"></span><br><span class="line">    <span class="built_in">NSString</span> *title = response<span class="variable">.regeocode</span><span class="variable">.addressComponent</span><span class="variable">.city</span>;</span><br><span class="line">    <span class="keyword">if</span> (title<span class="variable">.length</span> == <span class="number">0</span>) &#123;</span><br><span class="line">    title = response<span class="variable">.regeocode</span><span class="variable">.addressComponent</span><span class="variable">.province</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 显示位置在地图的当前annotation上</span></span><br><span class="line">    _mapView<span class="variable">.userLocation</span><span class="variable">.title</span> = title;</span><br><span class="line">    _mapView<span class="variable">.userLocation</span><span class="variable">.subtitle</span> = response<span class="variable">.regeocode</span><span class="variable">.formattedAddress</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>选中定位annotation的时候进行逆地理位置编码得到位置</p>
<figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">- (<span class="keyword">void</span>)mapView:(MAMapView *)mapView didSelectAnnotationView:(MAAnnotationView *)view &#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 选中定位annotation的时候进行逆地理位置编码</span></span><br><span class="line">    <span class="keyword">if</span> ([view<span class="variable">.annotation</span> isKindOfClass:[MAUserLocation class]]) &#123;</span><br><span class="line">        [<span class="keyword">self</span> reGeoAction];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>如果出现下面错误：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">*** Terminating app due to uncaught exception <span class="string">'NSInvalidArgumentException'</span>, reason: <span class="string">'-[AMapGeoPoint coordinateString]: unrecognized selector sent to instance 0x16596810'</span></span><br><span class="line">*** First throw call stack:</span><br><span class="line">(<span class="number">0</span>x2bff349f <span class="number">0</span>x397adc8b <span class="number">0</span>x2bff88b9 <span class="number">0</span>x2bff67d7 <span class="number">0</span>x2bf28058 <span class="number">0</span>x34bf9 <span class="number">0</span>x3738f <span class="number">0</span>x356c9 <span class="number">0</span>x33b11 <span class="number">0</span>x33f27 <span class="number">0</span>x647b9 <span class="number">0</span>x79693 <span class="number">0</span>x6133b <span class="number">0</span>x2f6318bb <span class="number">0</span>x2f4e04e9 <span class="number">0</span>x2f8f501b <span class="number">0</span>x2f4a9e41 <span class="number">0</span>x2f4a7d1f <span class="number">0</span>x2bfb9d95 <span class="number">0</span>x2bfb7453 <span class="number">0</span>x2bfb785b <span class="number">0</span>x2bf053c1 <span class="number">0</span>x2bf051d3 <span class="number">0</span>x333030a9 <span class="number">0</span>x2f5137b1 <span class="number">0</span>x342b9 <span class="number">0</span>x39d2daaf)</span><br><span class="line">libc++abi.dylib: terminating with uncaught exception of <span class="built_in">type</span> NSException</span><br></pre></td></tr></table></figure>
<p>那是由于没在<code>Xcode</code> - <code>TARGETS</code> - <code>Build Settings</code>- <code>Other Linker Flags</code> 中添加 <code>-ObjC</code></p>
<h2 id="附近搜索">附近搜索</h2><p>创建Button</p>
<figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">- (<span class="keyword">void</span>)initControls &#123;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">UIButton</span> *searchButton = [[<span class="built_in">UIButton</span> alloc] initWithFrame:<span class="built_in">CGRectMake</span>(<span class="number">80</span>, <span class="built_in">CGRectGetHeight</span>(_mapView<span class="variable">.bounds</span>) - <span class="number">80</span>, <span class="number">40</span>, <span class="number">40</span>)];</span><br><span class="line">    searchButton<span class="variable">.autoresizingMask</span> = <span class="built_in">UIViewAutoresizingFlexibleRightMargin</span> | <span class="built_in">UIViewAutoresizingFlexibleTopMargin</span>;</span><br><span class="line">    searchButton<span class="variable">.backgroundColor</span> = [<span class="built_in">UIColor</span> whiteColor];</span><br><span class="line">    searchButton<span class="variable">.layer</span><span class="variable">.cornerRadius</span> = <span class="number">5</span>;</span><br><span class="line">    [searchButton addTarget:<span class="keyword">self</span> action:<span class="keyword">@selector</span>(searchAction) forControlEvents:<span class="built_in">UIControlEventTouchDown</span>];</span><br><span class="line">    [searchButton setImage:[<span class="built_in">UIImage</span> imageNamed:<span class="string">@""</span>] forState:<span class="built_in">UIControlStateNormal</span>];</span><br><span class="line">    [_mapView addSubview:searchButton];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>设置属性</p>
<figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">@interface</span> <span class="title">ViewController</span> ()  &lt;<span class="title">UITableViewDataSource</span>,<span class="title">UITableViewDelegate</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">@property</span> (<span class="keyword">nonatomic</span>, <span class="keyword">strong</span>) <span class="built_in">NSArray</span> *pois;</span><br><span class="line"><span class="keyword">@property</span> (<span class="keyword">nonatomic</span>, <span class="keyword">strong</span>) <span class="built_in">UITableView</span> *tableView;</span><br><span class="line"><span class="keyword">@property</span> (<span class="keyword">nonatomic</span>, <span class="keyword">strong</span>) <span class="built_in">NSMutableArray</span> *annotations;</span><br><span class="line"></span><br><span class="line"><span class="keyword">@end</span></span><br></pre></td></tr></table></figure>
<p>请求</p>
<figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">- (<span class="keyword">void</span>)searchAction &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (_currentLocation == <span class="literal">nil</span> || _search == <span class="literal">nil</span>) &#123;</span><br><span class="line">    <span class="built_in">NSLog</span>(<span class="string">@"Serach Fail"</span>);</span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    AMapPOIAroundSearchRequest *request = [[AMapPOIAroundSearchRequest alloc] init];</span><br><span class="line">    request<span class="variable">.location</span> = [AMapGeoPoint locationWithLatitude:_currentLocation<span class="variable">.coordinate</span><span class="variable">.latitude</span> longitude:_currentLocation<span class="variable">.coordinate</span><span class="variable">.longitude</span>];</span><br><span class="line">    request<span class="variable">.keywords</span> = <span class="string">@"商务"</span>;</span><br><span class="line">    <span class="comment">// types属性表示限定搜索POI的类别，默认为：餐饮服务|商务住宅|生活服务</span></span><br><span class="line">    <span class="comment">// POI的类型共分为20种大类别，分别为：</span></span><br><span class="line">    <span class="comment">// 汽车服务|汽车销售|汽车维修|摩托车服务|餐饮服务|购物服务|生活服务|体育休闲服务|</span></span><br><span class="line">    <span class="comment">// 医疗保健服务|住宿服务|风景名胜|商务住宅|政府机构及社会团体|科教文化服务|</span></span><br><span class="line">    <span class="comment">// 交通设施服务|金融保险服务|公司企业|道路附属设施|地名地址信息|公共设施</span></span><br><span class="line">    request<span class="variable">.types</span> = <span class="string">@"餐饮服务|商务住宅|生活服务"</span>;</span><br><span class="line">    [_search AMapPOIAroundSearch:request];</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>返回结果：</p>
<figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">- (<span class="keyword">void</span>)onPOISearchDone:(AMapPOIAroundSearchRequest *)request response:(AMapPOISearchResponse *)response</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span>(response<span class="variable">.pois</span><span class="variable">.count</span> == <span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">NSLog</span>(<span class="string">@"request: %@"</span>,request);</span><br><span class="line">    <span class="built_in">NSLog</span>(<span class="string">@"response: %@"</span>,response);</span><br><span class="line">   </span><br><span class="line">    <span class="keyword">if</span> (response<span class="variable">.pois</span><span class="variable">.count</span> &gt; <span class="number">0</span>) &#123;</span><br><span class="line">        _pois = response<span class="variable">.pois</span>;</span><br><span class="line">        [_tableView reloadData];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>显示结果,先初使化</p>
<figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">- (<span class="keyword">void</span>)initAttributes &#123;</span><br><span class="line"></span><br><span class="line">    _annotations = [[<span class="built_in">NSMutableArray</span> alloc] init];</span><br><span class="line">    _pois = <span class="literal">nil</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">- (<span class="keyword">void</span>)initTableView &#123;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">CGFloat</span> halfHeight = <span class="built_in">CGRectGetHeight</span>(<span class="keyword">self</span><span class="variable">.view</span><span class="variable">.bounds</span>) * <span class="number">0.5</span>;</span><br><span class="line">    _tableView = [[<span class="built_in">UITableView</span> alloc] initWithFrame:<span class="built_in">CGRectMake</span>(<span class="number">0</span>, halfHeight, <span class="built_in">CGRectGetWidth</span>(<span class="keyword">self</span><span class="variable">.view</span><span class="variable">.bounds</span>), <span class="built_in">CGRectGetHeight</span>(<span class="keyword">self</span><span class="variable">.view</span><span class="variable">.bounds</span>) * <span class="number">0.5</span>) style:<span class="built_in">UITableViewStylePlain</span>];</span><br><span class="line">    _tableView<span class="variable">.delegate</span> = <span class="keyword">self</span>;</span><br><span class="line">    _tableView<span class="variable">.dataSource</span> = <span class="keyword">self</span>;</span><br><span class="line">    [<span class="keyword">self</span><span class="variable">.view</span> addSubview:_tableView];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>Tableview 代理</p>
<figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">- (<span class="built_in">NSInteger</span>)tableView:(<span class="built_in">UITableView</span> *)tableView numberOfRowsInSection:(<span class="built_in">NSInteger</span>)section &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> _pois<span class="variable">.count</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">- (<span class="built_in">UITableViewCell</span> *)tableView:(<span class="built_in">UITableView</span> *)tableView cellForRowAtIndexPath:(<span class="built_in">NSIndexPath</span> *)indexPath &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">static</span> <span class="built_in">NSString</span> *cellIdentifier = <span class="string">@"cellIdentifier"</span>;</span><br><span class="line">    <span class="built_in">UITableViewCell</span> *cell = [tableView dequeueReusableCellWithIdentifier:cellIdentifier];</span><br><span class="line">    <span class="keyword">if</span> (cell == <span class="literal">nil</span>) &#123;</span><br><span class="line">        cell = [[<span class="built_in">UITableViewCell</span> alloc] initWithStyle:<span class="built_in">UITableViewCellStyleSubtitle</span> reuseIdentifier:cellIdentifier];</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    AMapPOI *poi = _pois[indexPath<span class="variable">.row</span>];</span><br><span class="line">    cell<span class="variable">.textLabel</span><span class="variable">.text</span> = poi<span class="variable">.name</span>;</span><br><span class="line">    cell<span class="variable">.detailTextLabel</span><span class="variable">.text</span> = poi<span class="variable">.address</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> cell;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="显示annotation在地图上">显示annotation在地图上</h2><p>点击TableViewCell的时候</p>
<figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">- (<span class="keyword">void</span>)tableView:(<span class="built_in">UITableView</span> *)tableView didSelectRowAtIndexPath:(<span class="built_in">NSIndexPath</span> *)indexPath &#123;</span><br><span class="line"></span><br><span class="line">    [tableView deselectRowAtIndexPath:indexPath animated:<span class="literal">YES</span>];</span><br><span class="line"></span><br><span class="line">    AMapPOI *poi = _pois[indexPath<span class="variable">.row</span>];</span><br><span class="line"></span><br><span class="line">    MAPointAnnotation *annotation = [[MAPointAnnotation alloc] init];</span><br><span class="line">    annotation<span class="variable">.coordinate</span> = CLLocationCoordinate2DMake(poi<span class="variable">.location</span><span class="variable">.latitude</span>, poi<span class="variable">.location</span><span class="variable">.longitude</span>);</span><br><span class="line">    annotation<span class="variable">.title</span> = poi<span class="variable">.name</span>;</span><br><span class="line">    annotation<span class="variable">.subtitle</span> = poi<span class="variable">.address</span>;</span><br><span class="line"></span><br><span class="line">    [_mapView removeAnnotations:_mapView<span class="variable">.annotations</span>];</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 记录下已经add过的annotation</span></span><br><span class="line">    [_annotations addObject:annotation];</span><br><span class="line"></span><br><span class="line">    [_mapView addAnnotation:annotation];</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 设置地图中心</span></span><br><span class="line">    [_mapView setCenterCoordinate:annotation<span class="variable">.coordinate</span> animated:<span class="literal">YES</span>];</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 显示calloutView</span></span><br><span class="line">    [_mapView selectAnnotation:annotation animated:<span class="literal">YES</span>];</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>重用显示annotation</p>
<figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">- (MAAnnotationView *)mapView:(MAMapView *)mapView viewForAnnotation:(<span class="keyword">id</span>&lt;MAAnnotation&gt;)annotation &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> ([annotation isKindOfClass:[MAPointAnnotation class]]) &#123;</span><br><span class="line">        <span class="keyword">static</span> <span class="built_in">NSString</span> *reuseIndentifier = <span class="string">@"reuseIndentifier"</span>;</span><br><span class="line">        MAPinAnnotationView *annotationView = (MAPinAnnotationView *)[mapView   dequeueReusableAnnotationViewWithIdentifier:reuseIndentifier];</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (annotationView == <span class="literal">nil</span>) &#123;</span><br><span class="line">        annotationView = [[MAPinAnnotationView alloc] initWithAnnotation:annotation reuseIdentifier:reuseIndentifier];</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        annotationView<span class="variable">.canShowCallout</span> = <span class="literal">YES</span>;</span><br><span class="line">        <span class="keyword">return</span> annotationView;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="literal">nil</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="移动地图的时候，更新列表位置信息">移动地图的时候，更新列表位置信息</h2><p>移动地图完成后执行的方法<br><figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">- (<span class="keyword">void</span>)mapView:(MAMapView *)mapView regionDidChangeAnimated:(<span class="built_in">BOOL</span>)animated &#123;</span><br><span class="line"></span><br><span class="line">    AMapPOIAroundSearchRequest *request = [[AMapPOIAroundSearchRequest alloc] init];</span><br><span class="line">    request<span class="variable">.location</span> = [AMapGeoPoint locationWithLatitude:_mapView<span class="variable">.centerCoordinate</span><span class="variable">.latitude</span> longitude:_mapView<span class="variable">.centerCoordinate</span><span class="variable">.longitude</span>];</span><br><span class="line">    request<span class="variable">.types</span> = <span class="string">@"餐饮服务|商务住宅|生活服务"</span>;</span><br><span class="line">    [_search AMapPOIAroundSearch:request];</span><br><span class="line"></span><br><span class="line">    MAPointAnnotation *annotation = [[MAPointAnnotation alloc] init];</span><br><span class="line">    annotation<span class="variable">.coordinate</span> = CLLocationCoordinate2DMake(_mapView<span class="variable">.centerCoordinate</span><span class="variable">.latitude</span>, _mapView<span class="variable">.centerCoordinate</span><span class="variable">.longitude</span>);</span><br><span class="line"></span><br><span class="line">    [_mapView removeAnnotations:_mapView<span class="variable">.annotations</span>];</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 记录下已经add过的annotation</span></span><br><span class="line">    [_annotations addObject:annotation];</span><br><span class="line">    [_centerAnnotationImage removeFromSuperview];</span><br><span class="line">    [_mapView addAnnotation:annotation];</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>将要移动地图的时候执行的方法</p>
<figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">- (<span class="keyword">void</span>)mapView:(MAMapView *)mapView regionWillChangeAnimated:(<span class="built_in">BOOL</span>)animated &#123;</span><br><span class="line"></span><br><span class="line">    _centerAnnotationImage = [[<span class="built_in">UIImageView</span> alloc] initWithImage:[<span class="built_in">UIImage</span> imageNamed:<span class="string">@"centerAnnotation"</span>]];</span><br><span class="line">    _centerAnnotationImage<span class="variable">.center</span> = _mapView<span class="variable">.center</span>;</span><br><span class="line">    [_mapView removeAnnotations:_mapView<span class="variable">.annotations</span>];</span><br><span class="line">    [_mapView addSubview:_centerAnnotationImage];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
    <summary type="html">
    <![CDATA[<p>LBS开放平台地址：<a href="http://lbs.amap.com" target="_blank" rel="external">http://lbs.amap.com</a>，申请API并导入相关文件，iOS 8在<code>Info.plist</code>]]>
    </summary>
    
  </entry>
  
  <entry>
    <title><![CDATA[iOS 观察者设计模式]]></title>
    <link href="http://lecason.com/2015/09/27/iOS-Observer-Design-Mode/"/>
    <id>http://lecason.com/2015/09/27/iOS-Observer-Design-Mode/</id>
    <published>2015-09-27T04:10:00.000Z</published>
    <updated>2015-09-28T01:08:13.000Z</updated>
    <content type="html"><![CDATA[<h1 id="自已实现一个观察者模式">自已实现一个观察者模式</h1><p>实现一个类似现实生活中书刊发行的模式，<code>杂志社</code> 发行管理杂志, <code>杂志</code>有杂志号，<code>读者</code>订阅杂志。</p>
<h2 id="创建定阅中心">创建定阅中心</h2><p>创建一个定阅中心<code>SubscriptionCenter.swift</code></p>
<figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="type">UIKit</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 杂志社</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">SubscriptionCenter</span>: <span class="title">NSObject</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="设计抽象接口">设计抽象接口</h2><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 杂志社</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">SubscriptionCenter</span>: <span class="title">NSObject</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 创建杂志</span></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">func</span> <span class="title">createSubscriptionNumber</span>(<span class="title">subscriptionNumber</span>: <span class="title">String</span>) </span>&#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 移除杂志</span></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">func</span> <span class="title">removeSubscriptionNumber</span>(<span class="title">subscriptionNumber</span>: <span class="title">String</span>) </span>&#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 用户定阅杂志</span></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">func</span> <span class="title">addCustomer</span>(<span class="title">customer</span>: <span class="title">AnyObject</span>,<span class="title">subscriptionNumber</span>: <span class="title">String</span>) </span>&#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 用户取消定阅</span></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">func</span> <span class="title">removeCustomer</span>(<span class="title">customer</span>: <span class="title">AnyObject</span>,<span class="title">subscriptionNumber</span>: <span class="title">String</span>) </span>&#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 杂志社发行杂志到定阅用户</span></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">func</span> <span class="title">sendMessage</span>(<span class="title">message</span>: <span class="title">AnyObject</span>, <span class="title">toSubscriptionNumber</span>: <span class="title">String</span>) </span>&#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="用协议来约束用户">用协议来约束用户</h2><p>用协议来约束可以定阅的用户</p>
<figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 用协议来约束可以定阅的用户</span></span><br><span class="line"><span class="class"><span class="keyword">protocol</span> <span class="title">SubscriptionCenterProtocol</span> </span>&#123;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 用户从这里收到杂志</span></span><br><span class="line">    <span class="func"><span class="keyword">func</span> <span class="title">subscriptionMessage</span><span class="params">(message: AnyObject, subscriptionNumber: String)</span></span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>然后修改addCustomer,和removeCustomer中的customer类型</p>
<figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 用户定阅杂志</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">func</span> <span class="title">addCustomer</span>(<span class="title">customer</span>: <span class="title">SubscriptionCenterProtocol</span>, <span class="title">subscripitonNumber</span>: <span class="title">String</span>) </span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 用户取消定阅</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">func</span> <span class="title">removeCustomer</span>(<span class="title">customer</span>: <span class="title">SubscriptionCenterProtocol</span>, <span class="title">subscriptionNumber</span>: <span class="title">String</span>) </span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="实现接口">实现接口</h2><p>通过subscriptionDictionary来管理用户</p>
<figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 杂志社</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">SubscriptionCenter</span>: <span class="title">NSObject</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 管理定义用户</span></span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">let</span> subscriptionDictionary: <span class="type">NSMutableDictionary</span>! = <span class="type">NSMutableDictionary</span>()</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 创建杂志</span></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">func</span> <span class="title">createSubscriptionNumber</span>(<span class="title">subscriptionNumber</span>: <span class="title">String</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">var</span> hashTable: <span class="type">NSHashTable</span>? = <span class="keyword">self</span>.existSubscriptionNumber(subscriptionNumber) &#123;</span><br><span class="line">            hashTable = <span class="type">NSHashTable</span>.weakObjectsHashTable()</span><br><span class="line">            subscriptionDictionary.setObject(hashTable!, forKey: subscriptionNumber)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 移除杂志</span></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">func</span> <span class="title">removeSubscriptionNumber</span>(<span class="title">subscriptionNumber</span>: <span class="title">String</span>) </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">var</span> <span class="number">_</span> = <span class="keyword">self</span>.existSubscriptionNumber(subscriptionNumber) &#123;</span><br><span class="line">            subscriptionDictionary.removeObjectForKey(subscriptionNumber)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 用户定阅杂志</span></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">func</span> <span class="title">addCustomer</span>(<span class="title">customer</span>: <span class="title">SubscriptionCenterProtocol</span>, <span class="title">subscriptionNumber</span>: <span class="title">String</span>) </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">let</span> hashTable: <span class="type">NSHashTable</span>? = <span class="keyword">self</span>.existSubscriptionNumber(subscriptionNumber)</span><br><span class="line">        hashTable?.addObject(customer)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 用户取消定阅</span></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">func</span> <span class="title">removeCustomer</span>(<span class="title">customer</span>: <span class="title">SubscriptionCenterProtocol</span>, <span class="title">subscriptionNumber</span>: <span class="title">String</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">let</span> hashTable: <span class="type">NSHashTable</span>? = <span class="keyword">self</span>.existSubscriptionNumber(subscriptionNumber)</span><br><span class="line">        hashTable?.removeObject(customer)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 杂志社发行杂志到定阅用户</span></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">func</span> <span class="title">sendMessage</span>(<span class="title">message</span>: <span class="title">AnyObject</span>, <span class="title">subscriptionNumber</span>: <span class="title">String</span>) </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">let</span> hashTable = <span class="keyword">self</span>.existSubscriptionNumber(subscriptionNumber) &#123;</span><br><span class="line">            <span class="keyword">let</span> enumerator = hashTable.objectEnumerator()</span><br><span class="line">            <span class="keyword">if</span> <span class="keyword">let</span> object:<span class="type">SubscriptionCenterProtocol</span> = enumerator.nextObject() <span class="keyword">as</span>? <span class="type">SubscriptionCenterProtocol</span> &#123;</span><br><span class="line">                    object.subscriptionMessage(message, subscriptionNumber: subscriptionNumber)</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 返回存在的订阅用户</span></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">func</span> <span class="title">existSubscriptionNumber</span>(<span class="title">subscriptionNumber</span>: <span class="title">String</span>) -&gt; <span class="title">NSHashTable</span>? </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> subscriptionDictionary.objectForKey(subscriptionNumber) <span class="keyword">as</span>? <span class="type">NSHashTable</span></span><br><span class="line">    &#125;  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="使用方法">使用方法</h2><p>记得要遵守SubscriptionCenterProtocol协议</p>
<figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ViewController</span>: <span class="title">UIViewController</span>, <span class="title">SubscriptionCenterProtocol</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">override</span> <span class="func"><span class="keyword">func</span> <span class="title">viewDidLoad</span><span class="params">()</span></span> &#123;</span><br><span class="line">        <span class="keyword">super</span>.viewDidLoad()</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 创建杂志TIMES</span></span><br><span class="line">        <span class="type">SubscriptionCenter</span>.createSubscriptionNumber(<span class="string">"TIMES"</span>)</span><br><span class="line"></span><br><span class="line">        <span class="comment">// ViewControlle定阅杂志</span></span><br><span class="line">        <span class="type">SubscriptionCenter</span>.addCustomer(<span class="keyword">self</span>, subscriptionNumber: <span class="string">"TIMES"</span>)</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 发行杂志TIMES</span></span><br><span class="line">        <span class="type">SubscriptionCenter</span>.sendMessage(<span class="string">"Swift"</span>, subscriptionNumber: <span class="string">"TIMES"</span>)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 遵守SubscriptionCenterProtocol的用户收到杂志TIMES</span></span><br><span class="line">    <span class="func"><span class="keyword">func</span> <span class="title">subscriptionMessage</span><span class="params">(message: AnyObject, subscriptionNumber: String)</span></span> &#123;</span><br><span class="line">        <span class="built_in">print</span>(message,subscriptionNumber)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>打印结果:</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Swift TIMES</span><br></pre></td></tr></table></figure>
<h1 id="系统自带的通知中心_NSNotificationCenter">系统自带的通知中心 NSNotificationCenter</h1><p>在viewDidLoad里面</p>
<figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">override</span> <span class="func"><span class="keyword">func</span> <span class="title">viewDidLoad</span><span class="params">()</span></span> &#123;</span><br><span class="line">    <span class="keyword">super</span>.viewDidLoad()</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 创建杂志</span></span><br><span class="line">    <span class="type">NSNotificationCenter</span>.defaultCenter().addObserver(<span class="keyword">self</span>, selector: <span class="string">"notificationCenterEvent:"</span>, name: <span class="string">"MUSIC"</span>, object: <span class="literal">nil</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 发行杂志</span></span><br><span class="line">    <span class="type">NSNotificationCenter</span>.defaultCenter().postNotificationName(<span class="string">"MUSIC"</span>, object: <span class="string">"Notification Message"</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>接收结果：</p>
<figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="func"><span class="keyword">func</span> <span class="title">notificationCenterEvent</span><span class="params">(sender: AnyObject)</span></span> &#123;</span><br><span class="line">    <span class="built_in">print</span>(sender)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>结果：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">NSConcreteNotification <span class="number">0</span>x7fb90ad4e860 &#123;name = MUSIC; object = Notification Message&#125;</span><br></pre></td></tr></table></figure>
<h1 id="KVO_键值观察">KVO 键值观察</h1><p>创建自定义类，注意属性前要加dynamic</p>
<figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Model</span>: <span class="title">NSObject</span> </span>&#123;</span><br><span class="line">   dynamic <span class="keyword">var</span> name: <span class="type">String</span>?</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>在viewDidLoad里面</p>
<figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> model: <span class="type">Model</span>!</span><br><span class="line"></span><br><span class="line"><span class="keyword">override</span> <span class="func"><span class="keyword">func</span> <span class="title">viewDidLoad</span><span class="params">()</span></span> &#123;</span><br><span class="line">    <span class="keyword">super</span>.viewDidLoad()</span><br><span class="line"></span><br><span class="line">    model = <span class="type">Model</span>()</span><br><span class="line">    model.addObserver(<span class="keyword">self</span>, forKeyPath: <span class="string">"name"</span>, options: <span class="type">NSKeyValueObservingOptions</span>.<span class="type">New</span>, context: <span class="literal">nil</span>)</span><br><span class="line">    model.name = <span class="string">"Swift"</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>接收结果：</p>
<figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">override</span> <span class="func"><span class="keyword">func</span> <span class="title">observeValueForKeyPath</span><span class="params">(keyPath: String?, ofObject object: AnyObject?, change: [String : AnyObject]?, context: UnsafeMutablePointer&lt;Void&gt;)</span></span> &#123;</span><br><span class="line">    <span class="built_in">print</span>(change)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>结果打印：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Optional([<span class="string">"new"</span>: Swift, <span class="string">"kind"</span>: <span class="number">1</span>])</span><br></pre></td></tr></table></figure>
<p>如果出现下面错误，那是由于没把model放在全局变量中</p>
<figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">*** <span class="type">Terminating</span> app due to uncaught exception '<span class="type">NSInternalInconsistencyException'</span>, reason: '<span class="type">An</span> instance <span class="number">0x7f9c12d2efe0</span> of <span class="class"><span class="keyword">class</span> <span class="title">ChuangChuang_2_0</span>.<span class="title">Model</span> <span class="title">was</span> <span class="title">deallocated</span> <span class="title">while</span> <span class="title">key</span> <span class="title">value</span> <span class="title">observers</span> <span class="title">were</span> <span class="title">still</span> <span class="title">registered</span> <span class="title">with</span> <span class="title">it</span>. <span class="title">Current</span> <span class="title">observation</span> <span class="title">info</span>: &lt;<span class="title">NSKeyValueObservationInfo</span> 0<span class="title">x7f9c12c07660</span>&gt; (</span><br><span class="line">&lt;<span class="title">NSKeyValueObservance</span> 0<span class="title">x7f9c12c0f600</span>: <span class="title">Observer</span>: 0<span class="title">x7f9c140aad10</span>, <span class="title">Key</span> <span class="title">path</span>: <span class="title">name</span>, <span class="title">Options</span>: &lt;<span class="title">New</span>: <span class="title">YES</span>, <span class="title">Old</span>: <span class="title">NO</span>, <span class="title">Prior</span>: <span class="title">NO</span>&gt; <span class="title">Context</span>: 0<span class="title">x0</span>, <span class="title">Property</span>: 0<span class="title">x7f9c12d2f5e0</span>&gt;</span><br><span class="line">)'</span></span><br></pre></td></tr></table></figure>
]]></content>
    <summary type="html">
    <![CDATA[<h1 id="自已实现一个观察者模式">自已实现一个观察者模式</h1><p>实现一个类似现实生活中书刊发行的模式，<code>杂志社</code> 发行管理杂志, <code>杂志</code>有杂志号，<code>读者</code>订阅杂志。</p>
<h2 id="创建定]]>
    </summary>
    
      <category term="iOS" scheme="http://lecason.com/tags/iOS/"/>
    
      <category term="iOS" scheme="http://lecason.com/categories/iOS/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Xcode 使用Github托管代码]]></title>
    <link href="http://lecason.com/2015/09/27/xcode-about-git/"/>
    <id>http://lecason.com/2015/09/27/xcode-about-git/</id>
    <published>2015-09-26T17:08:29.000Z</published>
    <updated>2015-09-28T05:19:54.000Z</updated>
    <content type="html"><![CDATA[<h1 id="Xcode_Push_项目到_GitHub">Xcode Push 项目到 GitHub</h1><blockquote>
<p>Mac 10.10.5 (14F27)<br>Xcode Version 7.1 beta (7B60)</p>
</blockquote>
<h2 id="创建Repositories">创建Repositories</h2><p>在<code>Github</code>上创建Repositories</p>
<p><img src="/img/xcodegithub1.png" alt=""></p>
<p>在<code>Xcode</code>中新建项目，勾选 <code>Create Git repositories on My Mac</code></p>
<p><img src="/img/xcodegithub3.png" alt=""></p>
<p>如果已经新建了的项目但没勾选<code>Create Git repositories on My Mac</code>的可以在<code>Xcode</code> - <code>Source Control</code> 中选择 <code>Create Working Copy</code></p>
<p><img src="/img/xcodegithub2.png" alt=""></p>
<p>选择 <code>Xcode</code> - <code>Source Control</code> - <code>Project Name Master</code> - <code>Configure Project Name</code> - <code>Remotes</code> - <code>+</code> - <code>Add Remote</code> </p>
<p><img src="/img/xcodegithub4.png" alt=""></p>
<p>然后再在Source Control里面Push就可上传到Github上面去了</p>
<p><img src="/img/xcodegithub5.png" alt=""></p>
<p>这时候Github上就可以看到已经Push上去的文件了</p>
<p><img src="/img/xcodegithub6.png" alt=""></p>
<h2 id="提交Commint">提交Commint</h2><p>Commint的意思是先把代码保存在本地，如果要更新到服务器的话，就Push上去，我们在viewDidLoad里面print(“Hello”)然后再 <code>Xcoode</code> - <code>Source Control</code> - <code>Commint</code> ，这样子代码就保存好在本地，然后再点<code>Xcoode</code> - <code>Source Control</code> - <code>Push</code>,这时候代码就会上传到服务器。效果：</p>
<p><img src="/img/xcodegithub7.png" alt=""></p>
<h2 id="更新项目Pull">更新项目Pull</h2><p>如果其他人修改了服务器上的文件，那么我们要得到服务器上最新的文件我们就要Pull回来，比如说我们直接在服务器上编辑ViewController.swift,在print(“Hello”)里面加上一个World。然后保存Commint Changes：</p>
<p><img src="/img/xcodegithub8.png" alt=""></p>
<p>这时候我们在<code>Xcode</code> - <code>Source Control</code> - <code>Pull</code>,我们就能得到服务器上更新的代码：</p>
<p><img src="/img/xcodegithub9.png" alt=""></p>
<h1 id="从_GitHub_下载项目到本地">从 GitHub 下载项目到本地</h1><p>从<code>Xcode</code> - <code>Source Control</code> 里面选择 <code>Check Out</code> ，输入Github上的地址后再保存到本地</p>
<p><img src="/img/xcodegithub10.png" alt=""></p>
<h1 id="常见错误">常见错误</h1><p>如果出现下面，那可能是Xcode 7的一个Bug</p>
<p><img src="/img/xcodegithub11.png" alt=""></p>
<p>切换到工作目录输入,注意<code>--local</code>参数：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> my/project/directory  </span><br><span class="line">git config --local user.email <span class="string">"lecason@me.com"</span>  </span><br><span class="line">git config --local user.name <span class="string">"lecason"</span></span><br></pre></td></tr></table></figure>
]]></content>
    <summary type="html">
    <![CDATA[<h1 id="Xcode_Push_项目到_GitHub">Xcode Push 项目到 GitHub</h1><blockquote>
<p>Mac 10.10.5 (14F27)<br>Xcode Version 7.1 beta (7B60)</p>
</blockquo]]>
    </summary>
    
  </entry>
  
  <entry>
    <title><![CDATA[iOS 限定UIPageViewController滑动手势识别区域]]></title>
    <link href="http://lecason.com/2015/09/25/restrict-uipageview-panning-area/"/>
    <id>http://lecason.com/2015/09/25/restrict-uipageview-panning-area/</id>
    <published>2015-09-25T02:16:19.000Z</published>
    <updated>2015-09-25T02:57:06.000Z</updated>
    <content type="html"><![CDATA[<p>做项目的时候有个需求，中间部份要显示图表，图表是可以手势识别点击放大缩小的，和UIPageViewController的手势冲突了。这时候就要限定PageViewController的识别区域了。</p>
<h2 id="子类化UIPageViewController的方法">子类化UIPageViewController的方法</h2><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="type">UIKit</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">HWPageViewController</span>: <span class="title">UIPageViewController</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">override</span> <span class="func"><span class="keyword">func</span> <span class="title">viewDidLoad</span><span class="params">()</span></span> &#123;</span><br><span class="line">        <span class="keyword">super</span>.viewDidLoad()</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>创建手势并遵守协议</p>
<figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="type">UIKit</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> scrollViewPanGestureRecognzier: <span class="type">UIPanGestureRecognizer</span>!</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">HWPageViewController</span>: <span class="title">UIPageViewController</span>,<span class="title">UIGestureRecognizerDelegate</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">override</span> <span class="func"><span class="keyword">func</span> <span class="title">viewDidLoad</span><span class="params">()</span></span> &#123;</span><br><span class="line">    <span class="keyword">super</span>.viewDidLoad()</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>加入代理 </p>
<figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">override</span> <span class="func"><span class="keyword">func</span> <span class="title">viewDidLoad</span><span class="params">()</span></span> &#123;</span><br><span class="line">    <span class="keyword">super</span>.viewDidLoad()</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> view <span class="keyword">in</span> <span class="keyword">self</span>.view.subviews &#123;</span><br><span class="line">        <span class="keyword">if</span> view.isKindOfClass(<span class="type">UIScrollView</span>.<span class="keyword">self</span>) &#123;</span><br><span class="line">                <span class="keyword">var</span> scrollView: <span class="type">UIScrollView</span> = view <span class="keyword">as</span>! <span class="type">UIScrollView</span></span><br><span class="line">                scrollViewPanGestureRecognzier = <span class="type">UIPanGestureRecognizer</span>()</span><br><span class="line">                scrollViewPanGestureRecognzier.delegate = <span class="keyword">self</span></span><br><span class="line">                scrollView.addGestureRecognizer(scrollViewPanGestureRecognzier)</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>实现代理添加识别区域</p>
<figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="func"><span class="keyword">func</span> <span class="title">gestureRecognizer</span><span class="params">(gestureRecognizer: UIGestureRecognizer, shouldRecognizeSimultaneouslyWithGestureRecognizer otherGestureRecognizer: UIGestureRecognizer)</span></span> -&gt; <span class="type">Bool</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="func"><span class="keyword">func</span> <span class="title">gestureRecognizerShouldBegin</span><span class="params">(gestureRecognizer: UIGestureRecognizer)</span></span> -&gt; <span class="type">Bool</span> &#123;</span><br><span class="line">   </span><br><span class="line">    <span class="keyword">if</span> gestureRecognizer == scrollViewPanGestureRecognzier &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">let</span> restrictValue:<span class="type">CGFloat</span> = <span class="number">100</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 标识不可滑动区域</span></span><br><span class="line">    <span class="keyword">var</span> recognizerView: <span class="type">UIView</span> = <span class="type">UIView</span>(frame: <span class="type">CGRectMake</span>(<span class="number">0</span>, <span class="number">100</span>, <span class="keyword">self</span>.view.frame.width, <span class="keyword">self</span>.view.frame.height - <span class="number">100</span>))</span><br><span class="line">    recognizerView.backgroundColor = <span class="type">UIColor</span>.darkGrayColor()</span><br><span class="line">    <span class="keyword">self</span>.view.addSubview(recognizerView)</span><br><span class="line">    <span class="comment">// 标识</span></span><br><span class="line">    <span class="keyword">var</span> lb: <span class="type">UILabel</span> = <span class="type">UILabel</span>(frame: <span class="type">CGRectMake</span>(<span class="number">90</span>,<span class="number">180</span>, <span class="number">200</span>, <span class="number">50</span>))</span><br><span class="line">    lb.text = <span class="string">"不可以滚动的区域"</span></span><br><span class="line">    lb.textColor = <span class="type">UIColor</span>.whiteColor()</span><br><span class="line">    recognizerView.addSubview(lb)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> locationInView: <span class="type">CGPoint</span> = gestureRecognizer.locationInView(<span class="keyword">self</span>.view)</span><br><span class="line">   </span><br><span class="line">    <span class="keyword">if</span>  locationInView.y &gt; restrictValue &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span></span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>效果:</p>
<p><img src="/img/restrictpageviewcontrollerarea1.png" alt=""></p>
<h2 id="不用子类化UIPageViewController的方法">不用子类化UIPageViewController的方法</h2><p>只要在实现UIPageViewControllerDataSource的类里面的Controller里面加上方法</p>
<figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">HWRootViewController</span>: <span class="title">UIViewController</span>,<span class="title">UIPageViewControllerDataSource</span>,<span class="title">UIGestureRecognizerDelegate</span> </span>&#123;&#125;</span><br></pre></td></tr></table></figure>
<p>只要加上下面代码就可以了：</p>
<figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">override</span> <span class="func"><span class="keyword">func</span> <span class="title">viewDidLoad</span><span class="params">()</span></span> &#123;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">super</span>.viewDidLoad()</span><br><span class="line"></span><br><span class="line">    <span class="keyword">let</span> gestureView = <span class="type">UIView</span>(frame: <span class="type">CGRect</span>(x:<span class="number">0</span>, y:<span class="keyword">self</span>.view.frame.height - <span class="number">180</span>, width:<span class="keyword">self</span>.view.frame.width, height:<span class="number">180</span>))</span><br><span class="line">    gestureView.backgroundColor = <span class="type">UIColor</span>(red: <span class="number">255</span>, green: <span class="number">255</span>, blue: <span class="number">255</span>, alpha: <span class="number">0.1</span>)</span><br><span class="line">    <span class="keyword">self</span>.view.addSubview(gestureView)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> x <span class="keyword">in</span> <span class="keyword">self</span>.pageVC!.view.subviews &#123;</span><br><span class="line">        <span class="keyword">if</span> x <span class="keyword">is</span> <span class="type">UIScrollView</span> &#123;</span><br><span class="line">            gestureView.addGestureRecognizer(x.panGestureRecognizer)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>只有下面浅白色那层才能滑动翻页，效果：</p>
<p><img src="/img/restrictpageviewcontrollerarea2.png" alt=""></p>
]]></content>
    <summary type="html">
    <![CDATA[<p>做项目的时候有个需求，中间部份要显示图表，图表是可以手势识别点击放大缩小的，和UIPageViewController的手势冲突了。这时候就要限定PageViewController的识别区域了。</p>
<h2 id="子类化UIPageViewController的方法]]>
    </summary>
    
      <category term="iOS" scheme="http://lecason.com/tags/iOS/"/>
    
      <category term="iOS" scheme="http://lecason.com/categories/iOS/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Debug PageControl 错乱问题]]></title>
    <link href="http://lecason.com/2015/09/24/debug-uipageviewcontroller-and-uipagecontrol/"/>
    <id>http://lecason.com/2015/09/24/debug-uipageviewcontroller-and-uipagecontrol/</id>
    <published>2015-09-24T09:17:21.000Z</published>
    <updated>2015-09-24T09:38:04.000Z</updated>
    <content type="html"><![CDATA[<p>从<code>AppCoda</code>上看到的UIPageController的Demo,里面PageViewController Delegate里面有一条：</p>
<figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">-(<span class="built_in">NSInteger</span>)presentationIndexForPageViewController:(<span class="built_in">UIPageViewController</span> *)pageViewController</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>发现如果这样子用的话，如果你在UIPageControl里面向左滑，但在主图片上面向右滑，会发生<code>Indicator</code>错乱，如下图，点在第2的位置，但图片已经是最后的图片，已经不能再向左滑。</p>
<p><img src="/img/pagecontolbug1.png" alt=""></p>
<p>这时候改成下面就可以了：</p>
<figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">-(<span class="built_in">NSInteger</span>)presentationIndexForPageViewController:(<span class="built_in">UIPageViewController</span> *)pageViewController</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">return</span> [(PageContentViewController *)[pageViewController<span class="variable">.viewControllers</span> firstObject] pageIndex];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    <summary type="html">
    <![CDATA[<p>从<code>AppCoda</code>上看到的UIPageController的Demo,里面PageViewController Delegate里面有一条：</p>
<figure class="highlight objectivec"><table><tr><t]]>
    </summary>
    
      <category term="Debug" scheme="http://lecason.com/tags/Debug/"/>
    
      <category term="Debug" scheme="http://lecason.com/categories/Debug/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[iOS 关于导航栏和UIAppearance类]]></title>
    <link href="http://lecason.com/2015/09/24/about-navigation/"/>
    <id>http://lecason.com/2015/09/24/about-navigation/</id>
    <published>2015-09-24T07:03:05.000Z</published>
    <updated>2015-09-24T08:54:08.000Z</updated>
    <content type="html"><![CDATA[<h2 id="统一设置导航栏颜色">统一设置导航栏颜色</h2><p>为了统一设置导航栏的背景颜色,在UIAppearance这个协议里面找到了一些方法：</p>
<figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">@protocol</span> <span class="title">UIAppearance</span> &lt;<span class="title">NSObject</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 为自定义类的所有实例的外观，将相关的外观修改消息发送给该类的外观代理。</span></span><br><span class="line"><span class="comment">// 例如，修改所有UINavigationBar、实例的颜色：</span></span><br><span class="line"><span class="comment">// [[UINavigationBar appearance] setBarTintColor:myColor];</span></span><br><span class="line"></span><br><span class="line">+ (instancetype)appearance;</span><br><span class="line"></span><br><span class="line"><span class="keyword">@end</span></span><br></pre></td></tr></table></figure>
<p>Swift 使用方法：</p>
<figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="func"><span class="keyword">func</span> <span class="title">application</span><span class="params">(application: UIApplication, didFinishLaunchingWithOptions launchOptions: [NSObject: AnyObject]?)</span></span> -&gt; <span class="type">Bool</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="type">UINavigationBar</span>.appearance().backgroundColor = <span class="type">UIColor</span>.greenColor()</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="设置导航栏在某个类下的颜色">设置导航栏在某个类下的颜色</h2><p>Objective-C 也可以设置包括在某表父类里面才设置背景颜色：</p>
<figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[[<span class="built_in">UINavigationBar</span> appearanceWhenContainedIn:[<span class="built_in">UITabBarController</span> class], [<span class="built_in">UISplitViewController</span> class], <span class="literal">nil</span>] setBarTintColor:myTabbedNavBarColor];</span><br></pre></td></tr></table></figure>
<p>Swift iOS9 使用方法</p>
<figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">UINavigationBar</span>.appearanceWhenContainedInInstancesOfClasses([<span class="type">MyViewController</span>.<span class="keyword">self</span>]).backgroundColor = <span class="type">UIColor</span>.greenColor()</span><br></pre></td></tr></table></figure>
<p>Swift iOS 7 - 8 使用方法</p>
<p>这个方法在7 - 8  里面不可以用，只能自已创建一个类别，下面是UIView的一个例子：</p>
<figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// UIAppearance+Swift.h</span></span><br><span class="line"><span class="class"><span class="keyword">@interface</span> <span class="title">UIView</span> (<span class="title">UIViewAppearance_Swift</span>)</span></span><br><span class="line"><span class="comment">// appearanceWhenContainedIn: is not available in Swift. This fixes that.</span></span><br><span class="line">+ (instancetype)my_appearanceWhenContainedIn:(Class&lt;<span class="built_in">UIAppearanceContainer</span>&gt;)containerClass;</span><br><span class="line"><span class="keyword">@end</span></span><br><span class="line">—</span><br></pre></td></tr></table></figure>
<figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// UIAppearance+Swift.m</span></span><br><span class="line"><span class="class"><span class="keyword">@implementation</span> <span class="title">UIView</span> (<span class="title">UIViewAppearance_Swift</span>)</span></span><br><span class="line">+ (instancetype)my_appearanceWhenContainedIn:(Class&lt;<span class="built_in">UIAppearanceContainer</span>&gt;)containerClass &#123;</span><br><span class="line"><span class="keyword">return</span> [<span class="keyword">self</span> appearanceWhenContainedIn:containerClass, <span class="literal">nil</span>];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">@end</span></span><br></pre></td></tr></table></figure>
<p>在Swift桥文件里面引入 <code>#import &quot;UIAppearance+Swift.h&quot;</code> 然后就可以使用：</p>
<figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">UITextField</span>.my_appearanceWhenContainedIn(<span class="type">MyViewController</span>.<span class="keyword">self</span>).keyboardAppearance = .<span class="type">Light</span></span><br></pre></td></tr></table></figure>
<p>这时候的效果是这样子的：</p>
<p><img src="/img/aboutnavigation1.png" alt=""></p>
<h2 id="去掉导航栏磨砂效果">去掉导航栏磨砂效果</h2><p>如果想去掉navigationBar的磨砂效果：</p>
<figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="func"><span class="keyword">func</span> <span class="title">application</span><span class="params">(application: UIApplication, didFinishLaunchingWithOptions launchOptions: [NSObject: AnyObject]?)</span></span> -&gt; <span class="type">Bool</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="type">UINavigationBar</span>.appearance().backgroundColor = <span class="type">UIColor</span>.greenColor()</span><br><span class="line">    <span class="type">UINavigationBar</span>.appearance().setBackgroundImage(<span class="type">UIImage</span>.<span class="keyword">new</span>(), forBarMetrics: <span class="type">UIBarMetrics</span>.<span class="type">Default</span>)</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>这时候的效果是这样子的：</p>
<p><img src="/img/aboutnavigation2.png" alt=""></p>
]]></content>
    <summary type="html">
    <![CDATA[<h2 id="统一设置导航栏颜色">统一设置导航栏颜色</h2><p>为了统一设置导航栏的背景颜色,在UIAppearance这个协议里面找到了一些方法：</p>
<figure class="highlight objectivec"><table><tr><td class]]>
    </summary>
    
      <category term="iOS" scheme="http://lecason.com/tags/iOS/"/>
    
      <category term="iOS" scheme="http://lecason.com/categories/iOS/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Xcode 6 创建空的项目模版]]></title>
    <link href="http://lecason.com/2015/09/23/xcode6-single-view-application-to-empty-application/"/>
    <id>http://lecason.com/2015/09/23/xcode6-single-view-application-to-empty-application/</id>
    <published>2015-09-23T14:12:46.000Z</published>
    <updated>2015-09-23T15:31:59.000Z</updated>
    <content type="html"><![CDATA[<p>运行Xcode 6，创建一个Single View Application工程。</p>
<p><code>Xcode</code> - <code>Shift + Command + N</code> - <code>Single View Applicaton</code></p>
<p>创建好后，把工程目录下的Main.storyboard和LaunchScreen.xib删除，扔进废纸篓。</p>
<p><code>Delete</code> - <code>Main.storyboard</code> + <code>LaunchScreen.xib</code></p>
<p>打开Info.plist，把Launch screen interface file base name，以及Main storyboard file base name两项，删除（点击旁边的减号即可）。</p>
<p><code>Delete</code> - <code>Launch screen interface file base name</code> + <code>Main storyboard file base name</code></p>
<p>打开工程项目属性文件，点击Target下面的第一项，再选择General选项卡，向下找到Use Asset Catalog按钮。点击它。</p>
<p><code>Project</code> - <code>TARGETS</code> - <code>Genera</code> - <code>App Icons and Launch Images</code> - <code>Use Asset Catelog</code></p>
<p>最后，在AppDelegate的第一个方法里面，“return”语句之前，添加必要代码。<br>代码只有3句，相当于分3步走。1.创建window；2.设置window背景；3.使window可见。</p>
<p>Objective-C</p>
<figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">self</span><span class="variable">.window</span> = [[<span class="built_in">UIWindow</span> alloc] initWithFrame:[[<span class="built_in">UIScreen</span> mainScreen] bounds]];</span><br><span class="line"><span class="keyword">self</span><span class="variable">.window</span><span class="variable">.backgroundColor</span> = [<span class="built_in">UIColor</span> whiteColor];</span><br><span class="line">[<span class="keyword">self</span><span class="variable">.window</span> makeKeyAndVisible];</span><br></pre></td></tr></table></figure>
<p>Swift</p>
<figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">self</span>.window = <span class="type">UIWindow</span>(frame: <span class="type">UIScreen</span>.mainScreen().bounds)</span><br><span class="line"><span class="keyword">self</span>.window?.backgroundColor = <span class="type">UIColor</span>.whiteColor()</span><br><span class="line"><span class="keyword">self</span>.window?.makeKeyAndVisible()</span><br></pre></td></tr></table></figure>
<p>Swift 创建 Navigation Controller 和 Tab Bar Controller Programmatically</p>
<figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="func"><span class="keyword">func</span> <span class="title">application</span><span class="params">(application: UIApplication, didFinishLaunchingWithOptions launchOptions: [NSObject: AnyObject]?)</span></span> -&gt; <span class="type">Bool</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> first: <span class="type">UIViewController</span> = <span class="type">UIViewController</span>()</span><br><span class="line">    <span class="keyword">var</span> second: <span class="type">UIViewController</span> = <span class="type">UIViewController</span>()</span><br><span class="line">    <span class="keyword">var</span> firstNav: <span class="type">UINavigationController</span> = <span class="type">UINavigationController</span>(rootViewController: first)</span><br><span class="line">    first.title = <span class="string">"First"</span></span><br><span class="line">    <span class="keyword">var</span> secondNav: <span class="type">UINavigationController</span> = <span class="type">UINavigationController</span>(rootViewController: second)</span><br><span class="line">    second.title = <span class="string">"Second"</span></span><br><span class="line">    <span class="keyword">var</span> tab: <span class="type">UITabBarController</span> = <span class="type">UITabBarController</span>()</span><br><span class="line">    tab.viewControllers = [firstNav,secondNav]</span><br><span class="line">    <span class="keyword">self</span>.window = <span class="type">UIWindow</span>(frame: <span class="type">UIScreen</span>.mainScreen().bounds)</span><br><span class="line">    <span class="keyword">self</span>.window?.backgroundColor = <span class="type">UIColor</span>.whiteColor()</span><br><span class="line">    <span class="keyword">self</span>.window?.rootViewController = tab</span><br><span class="line">    <span class="keyword">self</span>.window?.makeKeyAndVisible()</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="literal">true</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
    <summary type="html">
    <![CDATA[<p>运行Xcode 6，创建一个Single View Application工程。</p>
<p><code>Xcode</code> - <code>Shift + Command + N</code> - <code>Single View Applicaton</cod]]>
    </summary>
    
  </entry>
  
  <entry>
    <title><![CDATA[CentOS 横跨大平洋]]></title>
    <link href="http://lecason.com/2015/09/22/Mac-Cross-The-River/"/>
    <id>http://lecason.com/2015/09/22/Mac-Cross-The-River/</id>
    <published>2015-09-22T04:59:36.000Z</published>
    <updated>2015-09-28T05:21:35.000Z</updated>
    <content type="html"><![CDATA[<p>想要横跨太平洋，首先要安装 </p>
 <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install build-essential autoconf libtool libssl-dev wget zip unzip openssl-devel gcc</span><br></pre></td></tr></table></figure>
<p>然后下载</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget https://codeload.github.com/lecason/shadowsocks-libev/zip/master</span><br></pre></td></tr></table></figure>
<p>解压进入</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">unzip master</span><br><span class="line"><span class="built_in">cd</span> shadowsocks-libev-master</span><br></pre></td></tr></table></figure>
<p>编译安装</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bash ./configure</span><br></pre></td></tr></table></figure>
<p>出现下面输出表示configure成功：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">configure: creating ./config.status</span><br><span class="line">config.status: creating Makefile</span><br><span class="line">config.status: creating dist-build/Makefile</span><br><span class="line">config.status: creating msvc-scripts/Makefile</span><br><span class="line">config.status: creating src/Makefile</span><br><span class="line">config.status: creating src/libsodium/Makefile</span><br><span class="line">config.status: creating src/libsodium/include/Makefile</span><br><span class="line">config.status: creating src/libsodium/include/sodium/version.h</span><br><span class="line">config.status: executing depfiles commands</span><br><span class="line">config.status: executing libtool commands</span><br></pre></td></tr></table></figure>
<p>然后make</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">make</span><br><span class="line">make install</span><br></pre></td></tr></table></figure>
<p>窗口里开船</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/usr/<span class="built_in">local</span>/ss-server <span class="operator">-s</span> <span class="number">0.0</span>.<span class="number">0.0</span> -p <span class="number">8888</span> -k lecason -m aes-<span class="number">256</span>-cfb</span><br></pre></td></tr></table></figure>
<p>后台开船</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nohup /usr/<span class="built_in">local</span>/bin/ss-server <span class="operator">-s</span> IP地址 -p 端口 -k 密码 -m 加密方式 &amp;</span><br></pre></td></tr></table></figure>
<p>开机就开船</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="string">"nohup /usr/local/bin/ss-server -s IP地址 -p 端口 -k 密码 -m 加密方式 &amp;"</span> &gt;&gt; /etc/rc.local</span><br></pre></td></tr></table></figure>
<p>找船 </p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ps</span><br></pre></td></tr></table></figure>
<p>会看到 </p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">20829</span> pts/<span class="number">0</span>    <span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span> ss-server</span><br></pre></td></tr></table></figure>
<p>再Kill </p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">kill</span> <span class="number">20829</span></span><br></pre></td></tr></table></figure>
]]></content>
    <summary type="html">
    <![CDATA[<p>想要横跨太平洋，首先要安装 </p>
 <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class]]>
    </summary>
    
  </entry>
  
  <entry>
    <title><![CDATA[iOS 日期加一天]]></title>
    <link href="http://lecason.com/2015/09/21/iOS-Add-One-Day-in-NSdate/"/>
    <id>http://lecason.com/2015/09/21/iOS-Add-One-Day-in-NSdate/</id>
    <published>2015-09-21T01:52:05.000Z</published>
    <updated>2015-09-21T03:12:56.000Z</updated>
    <content type="html"><![CDATA[<p>Swift 日期加一天</p>
<figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="func"><span class="keyword">func</span> <span class="title">nextDay</span> <span class="params">()</span></span> -&gt; (<span class="type">String</span>) &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> components = <span class="type">NSDateComponents</span>()</span><br><span class="line">    components.day = <span class="number">1</span></span><br><span class="line">    <span class="keyword">var</span> expirationDate = <span class="type">NSCalendar</span>.currentCalendar().dateByAddingComponents(components,</span><br><span class="line">    toDate: date, options: <span class="type">NSCalendarOptions</span>(<span class="number">0</span>))</span><br><span class="line">    date = expirationDate</span><br><span class="line">    <span class="keyword">var</span> formatter = <span class="type">NSDateFormatter</span>()</span><br><span class="line">    formatter.dateFormat = <span class="string">"yyyy-MM-dd"</span></span><br><span class="line">    <span class="keyword">return</span> formatter.stringFromDate(expirationDate!)</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>Formatter的一些格式</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span>.常用的格式</span><br><span class="line">[dateFormatter <span class="built_in">set</span>DateFormat:@<span class="string">"yyyy-MM-dd HH:mm:ss EEEE"</span>];</span><br><span class="line"><span class="number">2013</span>-<span class="number">10</span>-<span class="number">08</span> <span class="number">20</span>:<span class="number">58</span>:<span class="number">29</span> 星期二</span><br><span class="line"></span><br><span class="line"><span class="number">2</span>.将yyyy改成yy，年份只显示后两位。注意：M表示Month，指月份；m表示minute，指分钟；两者不可混淆。</span><br><span class="line">[dateFormatter <span class="built_in">set</span>DateFormat:@<span class="string">"yy-MM-dd HH:mm:ss EEEE"</span>];</span><br><span class="line"><span class="number">13</span>-<span class="number">10</span>-<span class="number">08</span> <span class="number">21</span>:<span class="number">01</span>:<span class="number">48</span> 星期二</span><br><span class="line"></span><br><span class="line"><span class="number">3</span>.将MM改成M，dd改成d，如果月份和日期前面有<span class="number">0</span>，将会消失。</span><br><span class="line">[dateFormatter <span class="built_in">set</span>DateFormat:@<span class="string">"yyyy-M-d HH:mm:ss EEEE"</span>];</span><br><span class="line"><span class="number">2013</span>-<span class="number">10</span>-<span class="number">8</span> <span class="number">21</span>:<span class="number">03</span>:<span class="number">49</span> 星期二</span><br><span class="line"></span><br><span class="line"><span class="number">4</span>.将dd改成DD，则显示今天是今年的第几天。</span><br><span class="line">[dateFormatter <span class="built_in">set</span>DateFormat:@<span class="string">"yyyy-MM-DD HH:mm:ss EEEE"</span>];</span><br><span class="line"><span class="number">2013</span>-<span class="number">10</span>-<span class="number">281</span> <span class="number">21</span>:<span class="number">11</span>:<span class="number">07</span> 星期二</span><br><span class="line"></span><br><span class="line"><span class="number">5</span>.将HH改成H，mm改成m，ss改成s，则时分秒前面的<span class="number">0</span>将会消失。</span><br><span class="line">[dateFormatter <span class="built_in">set</span>DateFormat:@<span class="string">"yyyy-MM-dd H:m:s EEEE"</span>];</span><br><span class="line"><span class="number">2013</span>-<span class="number">10</span>-<span class="number">08</span> <span class="number">21</span>:<span class="number">7</span>:<span class="number">19</span> 星期二</span><br><span class="line"></span><br><span class="line"><span class="number">6</span>.若将HH改成hh，则时间由<span class="number">24</span>小时制变成<span class="number">12</span>小时制。</span><br><span class="line">[dateFormatter <span class="built_in">set</span>DateFormat:@<span class="string">"yyyy-MM-dd hh:mm:ss EEEE"</span>];</span><br><span class="line"><span class="number">2013</span>-<span class="number">10</span>-<span class="number">08</span> <span class="number">09</span>:<span class="number">08</span>:<span class="number">40</span> 星期二</span><br><span class="line"></span><br><span class="line"><span class="number">7</span>.为区分<span class="number">12</span>小时制的上下午，可以在中间加个a</span><br><span class="line">[dateFormatter <span class="built_in">set</span>DateFormat:@<span class="string">"yyyy-MM-dd a hh:mm:ss EEEE"</span>];</span><br><span class="line"><span class="number">2013</span>-<span class="number">10</span>-<span class="number">08</span> 下午 <span class="number">09</span>:<span class="number">17</span>:<span class="number">43</span> 星期二</span><br><span class="line"></span><br><span class="line"><span class="number">8</span>.将EEEE改成EE，则星期二变成周二</span><br><span class="line">[dateFormatter <span class="built_in">set</span>DateFormat:@<span class="string">"yyyy-MM-dd HH:mm:ss EE"</span>];</span><br><span class="line"><span class="number">2013</span>-<span class="number">10</span>-<span class="number">08</span> <span class="number">21</span>:<span class="number">15</span>:<span class="number">04</span> 周二</span><br><span class="line"></span><br><span class="line"><span class="number">9</span>.当然，也可以把年月日中间的-改成/</span><br><span class="line">a[dateFormatter <span class="built_in">set</span>DateFormat:@<span class="string">"yyyy/MM/dd a hh:mm:ss EE"</span>];</span><br><span class="line"><span class="number">2013</span>/<span class="number">10</span>/<span class="number">08</span> 下午 <span class="number">09</span>:<span class="number">19</span>:<span class="number">03</span> 周二</span><br></pre></td></tr></table></figure>]]></content>
    <summary type="html">
    <![CDATA[<p>Swift 日期加一天</p>
<figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</s]]>
    </summary>
    
      <category term="iOS" scheme="http://lecason.com/tags/iOS/"/>
    
      <category term="iOS" scheme="http://lecason.com/categories/iOS/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[iOS 设置Label的行间距 首行缩进]]></title>
    <link href="http://lecason.com/2015/09/18/iOS-Reset-Label-line-Space-Head-Index/"/>
    <id>http://lecason.com/2015/09/18/iOS-Reset-Label-line-Space-Head-Index/</id>
    <published>2015-09-18T02:54:51.000Z</published>
    <updated>2015-09-18T03:01:14.000Z</updated>
    <content type="html"><![CDATA[<p>Swift 版本</p>
 <figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="func"><span class="keyword">func</span> <span class="title">resetContent</span><span class="params">(#text:String)</span></span> -&gt; (<span class="type">NSAttributedString</span>) &#123;</span><br><span class="line">    <span class="keyword">var</span> atributedString: <span class="type">NSMutableAttributedString</span> = <span class="type">NSMutableAttributedString</span>(string: text)</span><br><span class="line">    <span class="keyword">var</span> paragraphStyle: <span class="type">NSMutableParagraphStyle</span> = <span class="type">NSMutableParagraphStyle</span>()</span><br><span class="line">    paragraphStyle.alignment = <span class="type">NSTextAlignment</span>.<span class="type">Center</span></span><br><span class="line">    paragraphStyle.maximumLineHeight = <span class="number">60</span> <span class="comment">//最大的行高</span></span><br><span class="line">    paragraphStyle.lineSpacing = <span class="number">5</span>  <span class="comment">//行自定义行高度</span></span><br><span class="line">    paragraphStyle.firstLineHeadIndent = <span class="number">0</span> <span class="comment">// 首行缩进</span></span><br><span class="line">    atributedString.addAttribute(<span class="type">NSParagraphStyleAttributeName</span>, value: paragraphStyle, range:<span class="type">NSMakeRange</span>(<span class="number">0</span>, <span class="built_in">count</span>(text)))</span><br><span class="line">    <span class="keyword">return</span> atributedString</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>Objective-C 版本</p>
<figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">- (<span class="built_in">NSAttributedString</span> *)resetContentText:(<span class="built_in">NSString</span> *)text</span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">NSMutableAttributedString</span> *attributedString = [[<span class="built_in">NSMutableAttributedString</span> alloc] initWithString:text];</span><br><span class="line">    <span class="built_in">NSMutableParagraphStyle</span> *paragraphStyle = [[<span class="built_in">NSMutableParagraphStyle</span> alloc] init];</span><br><span class="line">    paragraphStyle<span class="variable">.alignment</span> = <span class="built_in">NSTextAlignmentLeft</span>;</span><br><span class="line">    paragraphStyle<span class="variable">.maximumLineHeight</span> = <span class="number">60</span>;  <span class="comment">//最大的行高</span></span><br><span class="line">    paragraphStyle<span class="variable">.lineSpacing</span> = <span class="number">5</span>;  <span class="comment">//行自定义行高度</span></span><br><span class="line">    [paragraphStyle setFirstLineHeadIndent: <span class="number">5</span>];<span class="comment">//首行缩进 根据用户昵称宽度在加5个像素</span></span><br><span class="line">    [attributedString addAttribute:<span class="built_in">NSParagraphStyleAttributeName</span> value:paragraphStyle range:<span class="built_in">NSMakeRange</span>(<span class="number">0</span>,text<span class="variable">.length</span>)];</span><br><span class="line">    <span class="keyword">return</span> attributedString;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>使用的时候:</p>
<figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">label.attributedText = <span class="keyword">self</span>.resetContent(<span class="string">"Your String"</span>)</span><br></pre></td></tr></table></figure>]]></content>
    <summary type="html">
    <![CDATA[<p>Swift 版本</p>
 <figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</spa]]>
    </summary>
    
      <category term="iOS" scheme="http://lecason.com/tags/iOS/"/>
    
      <category term="iOS" scheme="http://lecason.com/categories/iOS/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[iOS 基础课程]]></title>
    <link href="http://lecason.com/2015/09/17/iOS-Study-Note/"/>
    <id>http://lecason.com/2015/09/17/iOS-Study-Note/</id>
    <published>2015-09-17T15:22:52.000Z</published>
    <updated>2015-09-17T16:11:15.000Z</updated>
    <content type="html"><![CDATA[<h2 id="UIWindow">UIWindow</h2><p>UIWindow级别有三个，级别有3个，<code>UIWindowLevelNormal</code> &lt; <code>UIWindowsLevelAlert</code> &lt; <code>UIWindowLevelStatusBar</code>,3个可同时显示在屏幕，每个级别可以创建多个，但同个级别同时只有一个能显示在屏幕上。</p>
<p>在AppDelegate创建窗口并显示：</p>
<figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">- (<span class="built_in">BOOL</span>)application:(<span class="built_in">UIApplication</span> *)application didFinishLaunchingWithOptions:(<span class="built_in">NSDictionary</span> *)launchOptions</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">self</span><span class="variable">.window</span> = [[<span class="built_in">UIWindow</span> alloc] initWithFrame:[[<span class="built_in">UIScreen</span> mainScreen] bounds]];</span><br><span class="line">    RootViewController *rootVC =[[RootViewController alloc] init];</span><br><span class="line">    <span class="keyword">self</span><span class="variable">.window</span><span class="variable">.rootViewController</span> = rootVC;</span><br><span class="line">    [<span class="keyword">self</span><span class="variable">.window</span> makeKeyAndVisible];</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">YES</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="UIView">UIView</h2><p>创建一个View</p>
<figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">UIView</span> *view = [[<span class="built_in">UIView</span> alloc] init];</span><br><span class="line">view<span class="variable">.frame</span> = <span class="built_in">CGRectMake</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">100</span>, <span class="number">100</span>);</span><br><span class="line">view<span class="variable">.backgroundColor</span> = [<span class="built_in">UIColor</span> blueColor];</span><br></pre></td></tr></table></figure>
<p>iPhone屏幕的尺寸</p>
<figure class="highlight gherkin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">/<span class="keyword">*</span> --------------------------------------------------</span><br><span class="line"></span><br><span class="line">3GS        3.5'    320 <span class="keyword">*</span> 480     <span class="comment">@1x  -   320 * 480</span></span><br><span class="line">4/4S       3.5'    320 <span class="keyword">*</span> 480     <span class="comment">@2x  -   640 * 960</span></span><br><span class="line">5/5c/5s    4.0'    320 <span class="keyword">*</span> 568     <span class="comment">@2x  -   640 * 1136</span></span><br><span class="line">6          4.7'    375 <span class="keyword">*</span> 667     <span class="comment">@2x  -   750 * 1344</span></span><br><span class="line">6p         5.5'    414 <span class="keyword">*</span> 736     <span class="comment">@3x  -  1242 * 2208</span></span><br><span class="line"></span><br><span class="line">status bar         22</span><br><span class="line"></span><br><span class="line">----------------------------------------------------<span class="keyword">*</span>/</span><br></pre></td></tr></table></figure>
<blockquote>
<p>bounds 边框大小，bounds.size.x , bounds.size.y 永远为0</p>
</blockquote>
<p>得到View的父视图</p>
<figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">UIView</span> *superView = view<span class="variable">.superview</span>;</span><br></pre></td></tr></table></figure>
<blockquote>
<p>坐标是根据父视图的位置来设置的，不会跨层</p>
</blockquote>
<p> 得到View的子视图</p>
<figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">NSArray</span> *subViews = view<span class="variable">.subviews</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="built_in">UIView</span> *view <span class="keyword">in</span> subViews) &#123;</span><br><span class="line">    <span class="built_in">NSLog</span>(<span class="string">@"%@"</span>,view);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>通过设置View Tag 值来得到对应的子视图</p>
<figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">view<span class="variable">.tag</span> = <span class="number">0</span></span><br><span class="line"><span class="built_in">UIView</span> *otherview = [superView viewWithTag:<span class="number">0</span>];</span><br></pre></td></tr></table></figure>
<blockquote>
<p>同一个父视图中，先加入的View会被覆盖在下面</p>
</blockquote>
]]></content>
    <summary type="html">
    <![CDATA[<h2 id="UIWindow">UIWindow</h2><p>UIWindow级别有三个，级别有3个，<code>UIWindowLevelNormal</code> &lt; <code>UIWindowsLevelAlert</code> &lt; <code>UIWi]]>
    </summary>
    
      <category term="Study" scheme="http://lecason.com/tags/Study/"/>
    
      <category term="Note" scheme="http://lecason.com/categories/Note/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Debug Linker command failed 连接命令失败]]></title>
    <link href="http://lecason.com/2015/09/17/Debug-linker-command-failed/"/>
    <id>http://lecason.com/2015/09/17/Debug-linker-command-failed/</id>
    <published>2015-09-17T02:16:32.000Z</published>
    <updated>2015-09-17T02:35:28.000Z</updated>
    <content type="html"><![CDATA[<p>项目编译的时候出现</p>
<figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">clang: <span class="keyword">error</span>: linker command failed <span class="keyword">with</span> <span class="keyword">exit</span> code <span class="number">1</span> (use -v <span class="keyword">to</span> see invocation)</span><br></pre></td></tr></table></figure>
<p>可能是由于引用的静态库文件找不到。</p>
<p>这时候，点击  <code>Build Settings</code> - <code>All</code> - <code>Search Paths</code> - <code>Library Search Paths</code> -<code>添加库文件所在位置</code></p>
<p><img src="/img/linkerfilenotfound1.png" alt=""></p>
<p>清理，编译几次试试。</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>项目编译的时候出现</p>
<figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td clas]]>
    </summary>
    
      <category term="Debug" scheme="http://lecason.com/tags/Debug/"/>
    
      <category term="Debug" scheme="http://lecason.com/categories/Debug/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Swift 调用OC .a静态库及使用C语言编程]]></title>
    <link href="http://lecason.com/2015/09/16/Swift-use-Objective-and-link-dotA-Lib/"/>
    <id>http://lecason.com/2015/09/16/Swift-use-Objective-and-link-dotA-Lib/</id>
    <published>2015-09-16T05:36:27.000Z</published>
    <updated>2015-09-16T05:57:40.000Z</updated>
    <content type="html"><![CDATA[<p>新项目用的Swift写，但要引用一个.a的静态库，还要用C语言调用.a的方法，所以就直接通过OC来中转。</p>
<p>新建一个中转的OC类 </p>
<p><img src="/img/swiftusec.png" alt=""></p>
<p>新建 <code>工程名 + “-Bridging-Header.h</code> 文件,再导入 <code>CoAPService.h</code></p>
<figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//  CoAP Swift Demo-Bridging-Header.h</span></span><br><span class="line"><span class="comment">//  CoAP Swift Demo</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//  Created by Lecason on 15/9/16.</span></span><br><span class="line"><span class="comment">//  Copyright (c) 2015年 Shenzhen Lecason Technology Co.,LTD. All rights reserved.</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"></span><br><span class="line"><span class="preprocessor">#ifndef CoAP_Swift_Demo_CoAP_Swift_Demo_Bridging_Header_h</span></span><br><span class="line"><span class="preprocessor">#define CoAP_Swift_Demo_CoAP_Swift_Demo_Bridging_Header_h</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="preprocessor">#endif</span></span><br><span class="line"></span><br><span class="line"><span class="preprocessor">#import <span class="title">"CoAPService.h"</span></span></span><br></pre></td></tr></table></figure>
<p>再把静态库和<code>libcoap.a</code>和静态库的头文件<code>coap.h</code>导入项目中，然后在中转文件中导入<code>coap.h</code></p>
<figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor">#import <span class="title">"CoAPService.h"</span></span></span><br><span class="line"><span class="preprocessor">#import <span class="title">"coap.h"</span></span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">@implementation</span> <span class="title">CoAPService</span></span></span><br><span class="line"></span><br><span class="line">- (<span class="keyword">void</span>)connectCoAPServer &#123;</span><br><span class="line">    <span class="keyword">char</span> buf[<span class="number">2048</span>] = &#123;<span class="number">0</span>&#125;;</span><br><span class="line">    <span class="keyword">int</span> ret = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">int</span> s = coap_connect(<span class="string">"8.8.8.8"</span>, <span class="number">5683</span>);</span><br><span class="line">    coap_send(s, <span class="string">"PUT"</span>, <span class="string">"/interface"</span>, <span class="string">"hello world!"</span>, <span class="number">16</span>);</span><br><span class="line">    <span class="keyword">while</span> (<span class="number">0</span> == ret)</span><br><span class="line">    &#123;</span><br><span class="line">    ret = coap_recv(s, buf, <span class="number">2048</span>);</span><br><span class="line">    sleep(<span class="number">5000</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    coap_close(s);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">@end</span></span><br></pre></td></tr></table></figure>
<p>然后在<code>ViewController.swift</code>就可以调用</p>
<figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ViewController</span>: <span class="title">UIViewController</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">override</span> <span class="func"><span class="keyword">func</span> <span class="title">viewDidLoad</span><span class="params">()</span></span> &#123;</span><br><span class="line">        <span class="keyword">super</span>.viewDidLoad()</span><br><span class="line"></span><br><span class="line">        <span class="keyword">var</span> coap: <span class="type">CoAPService</span> = <span class="type">CoAPService</span>()</span><br><span class="line">        coap.connectCoAPServer()</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
    <summary type="html">
    <![CDATA[<p>新项目用的Swift写，但要引用一个.a的静态库，还要用C语言调用.a的方法，所以就直接通过OC来中转。</p>
<p>新建一个中转的OC类 </p>
<p><img src="/img/swiftusec.png" alt=""></p>
<p>新建 <code>工程名 ]]>
    </summary>
    
      <category term="Swift" scheme="http://lecason.com/tags/Swift/"/>
    
      <category term="Swift" scheme="http://lecason.com/categories/Swift/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[iOS 远程通知的实现]]></title>
    <link href="http://lecason.com/2015/09/15/iOS-Remote-Notificaton/"/>
    <id>http://lecason.com/2015/09/15/iOS-Remote-Notificaton/</id>
    <published>2015-09-15T02:27:45.000Z</published>
    <updated>2015-09-15T07:57:15.000Z</updated>
    <content type="html"><![CDATA[<h2 id="注册推送证书">注册推送证书</h2><p>我们的客户端与苹果服务器之间和我们自己的服务器与苹果服务器之间都需要证书来进行链接。下面我们来开始进入证书的制作过程。</p>
<h3 id="生成CSR文件">生成CSR文件</h3><p>打开<code>MAC</code> - <code>钥匙串访问</code> - <code>菜单</code> - <code>证书助理</code> - <code>从证书颁发机构请求证书</code> - <code>存储到磁盘</code></p>
<p><img src="/img/remotenotification1.png" alt=""></p>
<h3 id="注册_App_IDs">注册 App IDs</h3><p>这个是程序要填入的Bundle ID,Explicit App ID是固定一个APP，Wildcard App ID是通用前缀的App</p>
<p>打开<code>developer.apple.com</code> - <code>Idenfifiers</code> - <code>App IDs</code> - <code>+</code> - <code>App ID Description</code> - <code>应用名字</code></p>
<p>App ID Description 写上自己应用名字 </p>
<p><img src="/img/remotenotification3.png" alt=""></p>
<p>Bundle ID 写上应用标识 选择<code>App ID Suffix</code> - <code>Explicit App ID</code> - <code>Bundle ID</code> - <code>App 准备用的Bundle ID</code></p>
<p><img src="/img/remotenotification4.png" alt=""></p>
<p>勾选 通知 选择<code>App Services</code> - <code>勾选</code> - <code>Push Notificatioons</code></p>
<p><img src="/img/remotenotification5.png" alt=""></p>
<p>这时候看到 provisioning profiles 是这样子的</p>
<p><img src="/img/remotenotification6.png" alt=""></p>
<h3 id="注册_Certificates">注册 Certificates</h3><p>开发推送选Apple Push Notification service SSL (Sandbox)，生产环境选Apple Push Notification service SSL (Production)</p>
<p>打开<code>developer.apple.com</code> - <code>Certificates</code> - <code>All</code> - <code>+</code> - <code>Apple Push Notification service SSL (Sandbox)</code> </p>
<p><img src="/img/remotenotification2.png" alt=""></p>
<p>选择上面配置的Bundle ID </p>
<p><img src="/img/remotenotification7.png" alt=""></p>
<p>上传生成的CSR文件</p>
<p><img src="/img/remotenotification8.png" alt=""></p>
<p>下载生成的证书，下载完成后，双击导入证书 <code>aps_development.cer</code></p>
<p><img src="/img/remotenotification9.png" alt=""></p>
<h3 id="注册测试设备_Devices">注册测试设备 Devices</h3><p>打开<code>developer.apple.com</code> - <code>Devices</code> - <code>+</code> 添加要测试的设备</p>
<p><img src="/img/remotenotification10.png" alt=""></p>
<h3 id="生成配置文件并下载_Provisioning_Profiles">生成配置文件并下载 Provisioning Profiles</h3><p>打开<code>developer.apple.com</code> - <code>Provisioning Profiles</code> -<code>All</code> - <code>+</code> </p>
<p>选择 iOS App Development</p>
<p><img src="/img/remotenotification11.png" alt=""></p>
<p>选择 App ID </p>
<p><img src="/img/remotenotification12.png" alt=""></p>
<p>选择证书</p>
<p><img src="/img/remotenotification13.png" alt=""></p>
<p>选择设备</p>
<p><img src="/img/remotenotification14.png" alt=""></p>
<p>添加配置文件名</p>
<p><img src="/img/remotenotification15.png" alt=""></p>
<p>下载保存，并双击配置文件</p>
<p><img src="/img/remotenotification16.png" alt=""></p>
<p>如果不双击导入，会出现下面的错误</p>
<p><img src="/img/remotenotification20.png" alt=""></p>
<h3 id="导出密钥">导出密钥</h3><p><code>Mac</code> - <code>钥匙串访问</code> - <code>找到我们双击导入的证书</code></p>
<p><img src="/img/remotenotification17.png" alt=""></p>
<p>设置文件名为<code>Push.p12</code>密码 <code>123456</code></p>
<p><img src="/img/remotenotification18.png" alt=""></p>
<h3 id="生成推送PEM文件">生成推送PEM文件</h3><p><code>Mac</code> - <code>终端</code> - <code>切换到刚才证书下载地址</code></p>
<p>把<code>aps_development.cer</code>的SSL证书转换为<code>PushCert.pem</code>文件:</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">openssl x509 -in aps_development.cer -inform der -out PushCert.pem</span><br></pre></td></tr></table></figure>
<p>把私钥<code>Push.p12</code>文件转化为<code>PushKey.pem</code>文件，在这里要输入原密码<code>123456</code>和设置新密码<code>123456</code>，可以设置不一样。</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">openssl pkcs12 -nocerts -out PushKey.pem -in Push.p12</span><br></pre></td></tr></table></figure>
<p>对生成的这两个pem文件再生成一个pem文件，来把证书和私钥整合到一个文件里：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat PushCert.pem PushKey.pem &gt; ck.pem</span><br></pre></td></tr></table></figure>
<h2 id="推送测试">推送测试</h2><p>下面我们要使用我们生成的SSL证书和私钥来设置一个安全的链接去链接苹果服务器：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">openssl s_client -connect gateway.sandbox.push.apple.com:<span class="number">2195</span> -cert PushCert.pem -key PushKey.pem</span><br></pre></td></tr></table></figure>
<p>执行完这一句命令后需要我们输入密语<br>Enter pass phrase for PushKey.pem:<br>我们输入<code>123456</code>按回车</p>
<p>返回 <code>Verify return code:0(ok)</code> 就成功了</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br></pre></td><td class="code"><pre><span class="line">CONNECTED(<span class="number">00000003</span>)</span><br><span class="line">depth=<span class="number">1</span> /C=US/O=Entrust, Inc./OU=www.entrust.net/rpa is incorporated by reference/OU=(c) <span class="number">2009</span> Entrust, Inc./CN=Entrust Certification Authority - L1C</span><br><span class="line">verify error:num=<span class="number">20</span>:unable to get <span class="built_in">local</span> issuer certificate</span><br><span class="line">verify <span class="built_in">return</span>:<span class="number">0</span></span><br><span class="line">---</span><br><span class="line">Certificate chain</span><br><span class="line"><span class="number">0</span> s:/C=US/ST=California/L=Cupertino/O=Apple Inc./CN=gateway.sandbox.push.apple.com</span><br><span class="line">i:/C=US/O=Entrust, Inc./OU=www.entrust.net/rpa is incorporated by reference/OU=(c) <span class="number">2009</span> Entrust, Inc./CN=Entrust Certification Authority - L1C</span><br><span class="line"><span class="number">1</span> s:/C=US/O=Entrust, Inc./OU=www.entrust.net/rpa is incorporated by reference/OU=(c) <span class="number">2009</span> Entrust, Inc./CN=Entrust Certification Authority - L1C</span><br><span class="line">i:/O=Entrust.net/OU=www.entrust.net/CPS_2048 incorp. by ref. (limits liab.)/OU=(c) <span class="number">1999</span> Entrust.net Limited/CN=Entrust.net Certification Authority (<span class="number">2048</span>)</span><br><span class="line">---</span><br><span class="line">Server certificate</span><br><span class="line">-----BEGIN CERTIFICATE-----</span><br><span class="line">MIIFMzCCBBugAwIBAgIETCMmsDANBgkqhkiG9w0BAQUFADCBsTELMAkGA1UEBhMC</span><br><span class="line">VVMxFjAUBgNVBAoTDUVudHJ1c3QsIEluYy4xOTA3BgNVBAsTMHd3dy5lbnRydXN0</span><br><span class="line">Lm5ldC9ycGEgaXMgaW5jb3Jwb3JhdGVkIGJ5IHJlZmVyZW5jZTEfMB0GA1UECxMW</span><br><span class="line">KGMpIDIwMDkgRW50cnVzdCwgSW5jLjEuMCwGA1UEAxMlRW50cnVzdCBDZXJ0aWZp</span><br><span class="line">Y2F0aW9uIEF1dGhvcml0eSAtIEwxQzAeFw0xNDA1MjMxNzQyNDJaFw0xNjA1MjQw</span><br><span class="line">NzA1MTNaMHQxCzAJBgNVBAYTAlVTMRMwEQYDVQQIEwpDYWxpZm9ybmlhMRIwEAYD</span><br><span class="line">VQQHEwlDdXBlcnRpbm8xEzARBgNVBAoTCkFwcGxlIEluYy4xJzAlBgNVBAMTHmdh</span><br><span class="line">dGV3YXkuc2FuZGJveC5wdXNoLmFwcGxlLmNvbTCCASIwDQYJKoZIhvcNAQEBBQAD</span><br><span class="line">ggEPADCCAQoCggEBAOQpUlXpU3+LJ2XR01QdVooN7S9OFOINp3/tomPaenQAwFGo</span><br><span class="line">qIakKFcN7AotWLFXFcR0QXKJkn4PL/zPKDBucyRFkc79S5+ZraGRISW<span class="keyword">fi</span>7G8XeaG</span><br><span class="line">G3GzgeVQ977Qrn0IdCswnbwLsJoErnmq4AveQajUbYueR9SxhkWBwMimSxXzXoOS</span><br><span class="line">XUOPzRvzObCxVZrvBBDSRJCeNVnVxtCmb17DM3+z5GZatBwWnvw0jgvSQsgof+uC</span><br><span class="line">idXgqcN4msv3tVH54ipmuD9kbbwvtnDCHBZRXMMmhUfFXZRuE8GBEbPfVkqB16ad</span><br><span class="line">JV4TVrVxwFENwdnsX9CXavHCgFJhtHRWKOoCH48CAwEAAaOCAY0wggGJMAsGA1Ud</span><br><span class="line">DwQEAwIFoDAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwMwYDVR0fBCww</span><br><span class="line">KjAooCagJIYiaHR0cDovL2NybC5lbnRydXN0Lm5ldC9sZXZlbDFjLmNybDBkBggr</span><br><span class="line">BgEFBQcBAQRYMFYwIwYIKwYBBQUHMAGGF2h0dHA6Ly9vY3NwLmVudHJ1c3QubmV0</span><br><span class="line">MC8GCCsGAQUFBzAChiNodHRwOi8vYWlhLmVudHJ1c3QubmV0LzIwNDgtbDFjLmNl</span><br><span class="line">cjBKBgNVHSAEQzBBMDUGCSqGSIb2fQdLAjAoMCYGCCsGAQUFBwIBFhpodHRwOi8v</span><br><span class="line">d3d3LmVudHJ1c3QubmV0L3JwYTAIBgZngQwBAgIwKQYDVR0RBCIwIIIeZ2F0ZXdh</span><br><span class="line">eS5zYW5kYm94LnB1c2guYXBwbGUuY29tMB8GA1UdIwQYMBaAFB7xq4kG+EkPATN3</span><br><span class="line"><span class="number">7</span>hR67hl8kyhNMB0GA1UdDgQWBBSSGfpGPmr9+FPcqRiStH0iKRBL7DAJBgNVHRME</span><br><span class="line">AjAAMA0GCSqGSIb3DQEBBQUAA4IBAQAkj6+okMFVl7NHqQoii4e4iPDFiia+LmHX</span><br><span class="line">BCc+<span class="number">2</span>UEOOjilYWYoZ61oeqRXQ2b4Um3dT/LPmzMkKmgEt9epKNBLA6lSkL+IzEnF</span><br><span class="line">wLQCHkL3BgvV20n5D8syzREV+<span class="number">8</span>RKmSqiYmrF8dFq8cDcstu2joEKd173EfrymWW1</span><br><span class="line">fMeaYTbjrn+vNkgM94+M4c/JnIDOhiPPbeAx9TESQZH+/<span class="number">6</span>S98hrbuPIIlmaOJsOT</span><br><span class="line">GMOUWeOTHXTCfGb1EM4SPVcyCW28TlWUBl8miqnsEO8g95jZZ25wFANlVxhfxBnP</span><br><span class="line">fwUYU5NTM3h0xi3rIlXwAKD6zLKipcQ/YXRx7oMYnAm53tfU2MxV</span><br><span class="line">-----END CERTIFICATE-----</span><br><span class="line">subject=/C=US/ST=California/L=Cupertino/O=Apple Inc./CN=gateway.sandbox.push.apple.com</span><br><span class="line">issuer=/C=US/O=Entrust, Inc./OU=www.entrust.net/rpa is incorporated by reference/OU=(c) <span class="number">2009</span> Entrust, Inc./CN=Entrust Certification Authority - L1C</span><br><span class="line">---</span><br><span class="line">Acceptable client certificate CA names</span><br><span class="line">/C=US/O=Apple Inc./OU=Apple Certification Authority/CN=Apple Root CA</span><br><span class="line">/C=US/O=Apple Inc./OU=Apple Worldwide Developer Relations/CN=Apple Worldwide Developer Relations Certification Authority</span><br><span class="line">/C=US/O=Apple Inc./OU=Apple Certification Authority/CN=Apple Application Integration Certification Authority</span><br><span class="line">---</span><br><span class="line">SSL handshake has <span class="built_in">read</span> <span class="number">3160</span> bytes and written <span class="number">2155</span> bytes</span><br><span class="line">---</span><br><span class="line">New, TLSv1/SSLv3, Cipher is AES256-SHA</span><br><span class="line">Server public key is <span class="number">2048</span> bit</span><br><span class="line">Secure Renegotiation IS supported</span><br><span class="line">Compression: NONE</span><br><span class="line">Expansion: NONE</span><br><span class="line">SSL-Session:</span><br><span class="line">Protocol  : TLSv1</span><br><span class="line">Cipher    : AES256-SHA</span><br><span class="line">Session-ID: </span><br><span class="line">Session-ID-ctx: </span><br><span class="line">Master-Key: <span class="number">208</span>E318208EB463C7F924DFDA0E80C82FC7A6B04CE89FE7AE0D99C789DE653F20F6B7FB8073C3DBBF6ED74F90A4B389D</span><br><span class="line">Key-Arg   : None</span><br><span class="line">Start Time: <span class="number">1442292792</span></span><br><span class="line">Timeout   : <span class="number">300</span> (sec)</span><br><span class="line">Verify <span class="built_in">return</span> code: <span class="number">0</span> (ok)</span><br><span class="line">---</span><br></pre></td></tr></table></figure>
<h2 id="项目测试">项目测试</h2><p>建立我们的推送的项目 <em><code>注意Bundle Identifier必须和我们推送应用的Bundle Identifier一致</code></em></p>
<p><img src="/img/remotenotification19.png" alt=""></p>
<p>iOS 8 以上在AppDelegate获得远程通知权限并注册的方法：</p>
<figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">@implementation</span> <span class="title">AppDelegate</span></span></span><br><span class="line"></span><br><span class="line">- (<span class="built_in">BOOL</span>)application:(<span class="built_in">UIApplication</span> *)application didFinishLaunchingWithOptions:(<span class="built_in">NSDictionary</span> *)launchOptions</span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">// 注册远程通知</span></span><br><span class="line">    <span class="built_in">UIUserNotificationType</span> types = <span class="built_in">UIUserNotificationTypeBadge</span> |</span><br><span class="line">    <span class="built_in">UIUserNotificationTypeSound</span> | <span class="built_in">UIUserNotificationTypeAlert</span>;</span><br><span class="line">    <span class="built_in">UIUserNotificationSettings</span> *mySettings =</span><br><span class="line">    [<span class="built_in">UIUserNotificationSettings</span> settingsForTypes:types categories:<span class="literal">nil</span>];</span><br><span class="line">    [[<span class="built_in">UIApplication</span> sharedApplication] registerUserNotificationSettings:mySettings];</span><br><span class="line">    [[<span class="built_in">UIApplication</span> sharedApplication] registerForRemoteNotifications];</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="literal">YES</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 获取DeviceToken成功</span></span><br><span class="line">- (<span class="keyword">void</span>)application:(<span class="built_in">UIApplication</span> *)application</span><br><span class="line">didRegisterForRemoteNotificationsWithDeviceToken:(<span class="built_in">NSData</span> *)deviceToken</span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">NSLog</span>(<span class="string">@"DeviceToken : %@"</span>,deviceToken);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 注册消息推送失败</span></span><br><span class="line">- (<span class="keyword">void</span>)application:(<span class="built_in">UIApplication</span> *)application</span><br><span class="line">didFailToRegisterForRemoteNotificationsWithError:(<span class="built_in">NSError</span> *)error</span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">NSLog</span>(<span class="string">@"Register Remote Notifications error : %@"</span>,error);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 处理收到的消息推送</span></span><br><span class="line">- (<span class="keyword">void</span>)application:(<span class="built_in">UIApplication</span> *)application</span><br><span class="line">didReceiveRemoteNotification:(<span class="built_in">NSDictionary</span> *)userInfo</span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">NSLog</span>(<span class="string">@"Receive remote notification : %@"</span>,userInfo);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">@end</span></span><br></pre></td></tr></table></figure>
<p>完成后，启动一次App,申请权限 </p>
<p><img src="/img/remotenotification21.jpg" alt=""></p>
<p>新建一个和<code>ck.pem</code>在同一个目录下的<code>push.php</code>文件</p>
<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// Put your device token here (without spaces):</span></span><br><span class="line"><span class="variable">$deviceToken</span> = <span class="string">'74314cc9e8f747e2fa96c2c1585c830cdf994de6b453ce9fa1c09ba396b2f9e9'</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Put your private key's passphrase here:</span></span><br><span class="line"><span class="variable">$passphrase</span> = <span class="string">'123456'</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Put your alert message here:</span></span><br><span class="line"><span class="variable">$message</span> = <span class="string">'这是一条推送消息'</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">////////////////////////////////////////////////////////////////////////////////</span></span><br><span class="line"></span><br><span class="line"><span class="variable">$ctx</span> = stream_context_create();</span><br><span class="line">stream_context_set_option(<span class="variable">$ctx</span>, <span class="string">'ssl'</span>, <span class="string">'local_cert'</span>, <span class="string">'ck.pem'</span>);</span><br><span class="line">stream_context_set_option(<span class="variable">$ctx</span>, <span class="string">'ssl'</span>, <span class="string">'passphrase'</span>, <span class="variable">$passphrase</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// Open a connection to the APNS server</span></span><br><span class="line"><span class="variable">$fp</span> = stream_socket_client(</span><br><span class="line"><span class="string">'ssl://gateway.sandbox.push.apple.com:2195'</span>, <span class="variable">$err</span>,</span><br><span class="line"><span class="variable">$errstr</span>, <span class="number">60</span>, STREAM_CLIENT_CONNECT|STREAM_CLIENT_PERSISTENT, <span class="variable">$ctx</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (!<span class="variable">$fp</span>)</span><br><span class="line"><span class="keyword">exit</span>(<span class="string">"Failed to connect: $err $errstr"</span> . PHP_EOL);</span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> <span class="string">'Connected to APNS'</span> . PHP_EOL;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Create the payload body</span></span><br><span class="line"><span class="variable">$body</span>[<span class="string">'aps'</span>] = <span class="keyword">array</span>(</span><br><span class="line"><span class="string">'alert'</span> =&gt; <span class="variable">$message</span>,</span><br><span class="line"><span class="string">'sound'</span> =&gt; <span class="string">'default'</span></span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="comment">// Encode the payload as JSON</span></span><br><span class="line"><span class="variable">$payload</span> = json_encode(<span class="variable">$body</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// Build the binary notification</span></span><br><span class="line"><span class="variable">$msg</span> = chr(<span class="number">0</span>) . pack(<span class="string">'n'</span>, <span class="number">32</span>) . pack(<span class="string">'H*'</span>, <span class="variable">$deviceToken</span>) . pack(<span class="string">'n'</span>, strlen(<span class="variable">$payload</span>)) . <span class="variable">$payload</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Send it to the server</span></span><br><span class="line"><span class="variable">$result</span> = fwrite(<span class="variable">$fp</span>, <span class="variable">$msg</span>, strlen(<span class="variable">$msg</span>));</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (!<span class="variable">$result</span>)</span><br><span class="line"><span class="keyword">echo</span> <span class="string">'Message not delivered'</span> . PHP_EOL;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="keyword">echo</span> <span class="string">'Message successfully delivered'</span> . PHP_EOL;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Close the connection to the server</span></span><br><span class="line">fclose(<span class="variable">$fp</span>);</span><br><span class="line"></span><br><span class="line"><span class="preprocessor">?&gt;</span></span><br></pre></td></tr></table></figure>
<p>切换到<code>push.php</code>所在目录,输入命令</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">php push.php</span><br></pre></td></tr></table></figure>
<p>提示下面信息就可以收到推送了</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Lecasons-RMBP:Push lecason$ php push.php</span><br><span class="line">Connected to APNS</span><br><span class="line">Message successfully delivered</span><br><span class="line">Lecasons-RMBP:Push lecason$</span><br></pre></td></tr></table></figure>
<p>这时候手机就可以收到推送消息了，测试效果：</p>
<p><img src="/img/remotenotification22.jpg" alt=""></p>
<h2 id="个推测试">个推测试</h2><p>新建一个<code>App</code> <code>应用标识</code> 要和 <code>Bundle ID</code> 一致</p>
<p><img src="/img/remotenotification23.png" alt=""></p>
<p>参考<a href="http://docs.igetui.com/pages/viewpage.action?pageId=1934126" target="_blank" rel="external">个推官方集成文档</a>集成到我们的应用里面。</p>
<p>导入<code>dist</code>文件夹和<code>所有的库文件</code>后，填好从个推上申请到的<code>AppId</code> <code>AppKey</code> <code>AppSecret</code></p>
<p><code>AppDelegate.h</code>:</p>
<figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor">#import <span class="title">&lt;UIKit/UIKit.h&gt;</span></span></span><br><span class="line"><span class="preprocessor">#import <span class="title">"GeTuiSdk.h"</span></span></span><br><span class="line"></span><br><span class="line"><span class="preprocessor">#define kAppId           @<span class="title">"PntQOqaY8H69wtmvYYjBJA"</span></span></span><br><span class="line"><span class="preprocessor">#define kAppKey          @<span class="title">"v3evaqV8Ll8DNJeb4f5o74"</span></span></span><br><span class="line"><span class="preprocessor">#define kAppSecret       @<span class="title">"82KMEAqBWt6Bntxz2L9Wd8"</span></span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">@interface</span> <span class="title">AppDelegate</span> : <span class="title">UIResponder</span> &lt;<span class="title">UIApplicationDelegate</span>,<span class="title">GeTuiSdkDelegate</span>&gt; </span>&#123;</span><br><span class="line"><span class="keyword">@private</span></span><br><span class="line"><span class="built_in">NSString</span> *_deviceToken;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">@property</span> (<span class="keyword">strong</span>, <span class="keyword">nonatomic</span>) <span class="built_in">UIWindow</span> *window;</span><br><span class="line"></span><br><span class="line"><span class="keyword">@property</span> (retain, <span class="keyword">nonatomic</span>) <span class="built_in">NSString</span> *appKey;</span><br><span class="line"><span class="keyword">@property</span> (retain, <span class="keyword">nonatomic</span>) <span class="built_in">NSString</span> *appSecret;</span><br><span class="line"><span class="keyword">@property</span> (retain, <span class="keyword">nonatomic</span>) <span class="built_in">NSString</span> *appID;</span><br><span class="line"><span class="keyword">@property</span> (retain, <span class="keyword">nonatomic</span>) <span class="built_in">NSString</span> *clientId;</span><br><span class="line"></span><br><span class="line"><span class="keyword">@end</span></span><br></pre></td></tr></table></figure>
<p><code>AppDelegate.m</code>:</p>
<figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor">#import <span class="title">"AppDelegate.h"</span></span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">@interface</span> <span class="title">AppDelegate</span> ()</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">@end</span></span><br><span class="line"></span><br><span class="line"><span class="preprocessor">#define NotifyActionKey <span class="title">"NotifyAction"</span></span></span><br><span class="line"><span class="built_in">NSString</span>* <span class="keyword">const</span> NotificationCategoryIdent  = <span class="string">@"ACTIONABLE"</span>;</span><br><span class="line"><span class="built_in">NSString</span>* <span class="keyword">const</span> NotificationActionOneIdent = <span class="string">@"ACTION_ONE"</span>;</span><br><span class="line"><span class="built_in">NSString</span>* <span class="keyword">const</span> NotificationActionTwoIdent = <span class="string">@"ACTION_TWO"</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">@implementation</span> <span class="title">AppDelegate</span></span></span><br><span class="line"></span><br><span class="line">- (<span class="built_in">BOOL</span>)application:(<span class="built_in">UIApplication</span> *)application didFinishLaunchingWithOptions:(<span class="built_in">NSDictionary</span> *)launchOptions</span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">// [1]:使用APPID/APPKEY/APPSECRENT创建个推实例</span></span><br><span class="line">    [<span class="keyword">self</span> startSdkWith:kAppId appKey:kAppKey appSecret:kAppSecret];</span><br><span class="line"></span><br><span class="line">    <span class="comment">// [2]:注册APNS</span></span><br><span class="line">    [<span class="keyword">self</span> registerRemoteNotification];</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="literal">YES</span>;</span><br><span class="line">&#125;</span><br><span class="line">- (<span class="keyword">void</span>)registerRemoteNotification </span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> ([[[<span class="built_in">UIDevice</span> currentDevice] systemVersion] floatValue] &gt;= <span class="number">8.0</span>) &#123;</span><br><span class="line">        <span class="comment">//IOS8 新的通知机制category注册</span></span><br><span class="line">        <span class="built_in">UIMutableUserNotificationAction</span> *action1;</span><br><span class="line">        action1 = [[<span class="built_in">UIMutableUserNotificationAction</span> alloc] init];</span><br><span class="line">        [action1 setActivationMode:<span class="built_in">UIUserNotificationActivationModeBackground</span>];</span><br><span class="line">        [action1 setTitle:<span class="string">@"取消"</span>];</span><br><span class="line">        [action1 setIdentifier:NotificationActionOneIdent];</span><br><span class="line">        [action1 setDestructive:<span class="literal">NO</span>];</span><br><span class="line">        [action1 setAuthenticationRequired:<span class="literal">NO</span>];</span><br><span class="line"></span><br><span class="line">        <span class="built_in">UIMutableUserNotificationAction</span> *action2;</span><br><span class="line">        action2 = [[<span class="built_in">UIMutableUserNotificationAction</span> alloc] init];</span><br><span class="line">        [action2 setActivationMode:<span class="built_in">UIUserNotificationActivationModeBackground</span>];</span><br><span class="line">        [action2 setTitle:<span class="string">@"回复"</span>];</span><br><span class="line">        [action2 setIdentifier:NotificationActionTwoIdent];</span><br><span class="line">        [action2 setDestructive:<span class="literal">NO</span>];</span><br><span class="line">        [action2 setAuthenticationRequired:<span class="literal">NO</span>];</span><br><span class="line"></span><br><span class="line">        <span class="built_in">UIMutableUserNotificationCategory</span> *actionCategory;</span><br><span class="line">        actionCategory = [[<span class="built_in">UIMutableUserNotificationCategory</span> alloc] init];</span><br><span class="line">        [actionCategory setIdentifier:NotificationCategoryIdent];</span><br><span class="line">        [actionCategory setActions:@[action1, action2]</span><br><span class="line">        forContext:<span class="built_in">UIUserNotificationActionContextDefault</span>];</span><br><span class="line"></span><br><span class="line">        <span class="built_in">NSSet</span> *categories = [<span class="built_in">NSSet</span> setWithObject:actionCategory];</span><br><span class="line">        <span class="built_in">UIUserNotificationType</span> types = (<span class="built_in">UIUserNotificationTypeAlert</span>|</span><br><span class="line">        <span class="built_in">UIUserNotificationTypeSound</span>|</span><br><span class="line">        <span class="built_in">UIUserNotificationTypeBadge</span>);</span><br><span class="line"></span><br><span class="line">        <span class="built_in">UIUserNotificationSettings</span> *settings;</span><br><span class="line">        settings = [<span class="built_in">UIUserNotificationSettings</span> settingsForTypes:types categories:categories];</span><br><span class="line">        [[<span class="built_in">UIApplication</span> sharedApplication] registerForRemoteNotifications];</span><br><span class="line">        [[<span class="built_in">UIApplication</span> sharedApplication] registerUserNotificationSettings:settings];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 获取DeviceToken成功</span></span><br><span class="line">- (<span class="keyword">void</span>)application:(<span class="built_in">UIApplication</span> *)application didRegisterForRemoteNotificationsWithDeviceToken:(<span class="built_in">NSData</span>*)deviceToken</span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">NSString</span> *token = [[deviceToken description] stringByTrimmingCharactersInSet:[<span class="built_in">NSCharacterSet</span> characterSetWithCharactersInString:<span class="string">@"&lt;&gt;"</span>]];</span><br><span class="line">    _deviceToken = [token stringByReplacingOccurrencesOfString:<span class="string">@" "</span> withString:<span class="string">@""</span>];</span><br><span class="line">    <span class="built_in">NSLog</span>(<span class="string">@"deviceToken:%@"</span>, _deviceToken);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// [3]:向个推服务器注册deviceToken</span></span><br><span class="line">    [GeTuiSdk registerDeviceToken:_deviceToken];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">- (<span class="keyword">void</span>)GeTuiSdkDidRegisterClient:(<span class="built_in">NSString</span> *)clientId</span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">// [4-EXT-1]: 个推SDK已注册，返回clientId</span></span><br><span class="line">    <span class="keyword">if</span> (_deviceToken) &#123;</span><br><span class="line">        [GeTuiSdk registerDeviceToken:_deviceToken];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 注册消息推送失败</span></span><br><span class="line">- (<span class="keyword">void</span>)application:(<span class="built_in">UIApplication</span> *)application</span><br><span class="line">didFailToRegisterForRemoteNotificationsWithError:(<span class="built_in">NSError</span> *)error</span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">NSLog</span>(<span class="string">@"Register Remote Notifications error : %@"</span>,error);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 处理收到的消息推送</span></span><br><span class="line">- (<span class="keyword">void</span>)application:(<span class="built_in">UIApplication</span> *)application</span><br><span class="line">didReceiveRemoteNotification:(<span class="built_in">NSDictionary</span> *)userInfo</span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">NSLog</span>(<span class="string">@"Receive remote notification : %@"</span>,userInfo);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">- (<span class="keyword">void</span>)startSdkWith:(<span class="built_in">NSString</span> *)appID appKey:(<span class="built_in">NSString</span> *)appKey appSecret:(<span class="built_in">NSString</span> *)appSecret</span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">NSError</span> *err = <span class="literal">nil</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//[1-1]:通过 AppId、 appKey 、appSecret 启动SDK</span></span><br><span class="line">    [GeTuiSdk startSdkWithAppId:appID appKey:appKey appSecret:appSecret delegate:<span class="keyword">self</span> error:&amp;err];</span><br><span class="line"></span><br><span class="line">    <span class="comment">//[1-2]:设置是否后台运行开关</span></span><br><span class="line">    [GeTuiSdk runBackgroundEnable:<span class="literal">YES</span>];</span><br><span class="line">    <span class="comment">//[1-3]:设置电子围栏功能，开启LBS定位服务 和 是否允许SDK 弹出用户定位请求</span></span><br><span class="line">    [GeTuiSdk lbsLocationEnable:<span class="literal">YES</span> andUserVerify:<span class="literal">YES</span>];</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">-(<span class="keyword">void</span>)applicationDidEnterBackground:(<span class="built_in">UIApplication</span> *)application</span><br><span class="line">    &#123;</span><br><span class="line">    <span class="comment">// [EXT] APP进入后台时，通知个推SDK进入后台</span></span><br><span class="line">    [GeTuiSdk enterBackground];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">@end</span></span><br></pre></td></tr></table></figure>
<p>运行APP，成功后会提示</p>
<p><img src="/img/remotenotification24.png" alt=""></p>
<p>发送透传消息</p>
<p><img src="/img/remotenotification25.png" alt=""></p>
<p>iPhone 收到推送消息的效果：</p>
<p><img src="/img/remotenotification26.png" alt=""></p>
]]></content>
    <summary type="html">
    <![CDATA[<h2 id="注册推送证书">注册推送证书</h2><p>我们的客户端与苹果服务器之间和我们自己的服务器与苹果服务器之间都需要证书来进行链接。下面我们来开始进入证书的制作过程。</p>
<h3 id="生成CSR文件">生成CSR文件</h3><p>打开<code>MAC</c]]>
    </summary>
    
      <category term="iOS" scheme="http://lecason.com/tags/iOS/"/>
    
      <category term="iOS" scheme="http://lecason.com/categories/iOS/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Debug 导入自定义库提示 Library not loaded]]></title>
    <link href="http://lecason.com/2015/09/14/Debug-Libray-not-loaded/"/>
    <id>http://lecason.com/2015/09/14/Debug-Libray-not-loaded/</id>
    <published>2015-09-14T04:57:02.000Z</published>
    <updated>2015-09-14T05:14:10.000Z</updated>
    <content type="html"><![CDATA[<p>导入自定义的库的时候，提示错误</p>
<figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">dyld:</span> Library not <span class="string">loaded:</span> <span class="regexp">/System/</span>Library<span class="regexp">/Frameworks/</span>Chart.framework/Social</span><br><span class="line">Referenced <span class="string">from:</span> <span class="regexp">/var/</span>mobile<span class="regexp">/Applications/</span><span class="number">00</span>D3E0A7-<span class="number">4</span>FF6-<span class="number">451</span>E-B11C-<span class="number">87</span>D7A189F425<span class="regexp">/sample.app/</span>sample</span><br><span class="line"><span class="string">dyld:</span> Library not <span class="string">loaded:</span> <span class="regexp">/System/</span>Library<span class="regexp">/Frameworks/</span>Chart.framework/Social</span><br><span class="line">Referenced <span class="string">from:</span> <span class="regexp">/var/</span>mobile<span class="regexp">/Applications/</span><span class="number">00</span>D3E0A7-<span class="number">4</span>FF6-<span class="number">451</span>E-B11C-<span class="number">87</span>D7A189F425<span class="regexp">/sample.app/</span>sample</span><br><span class="line"><span class="string">Reason:</span> image not found</span><br></pre></td></tr></table></figure>
<p>这时候如图点击<code>+</code> - <code>New Headers Phase</code></p>
<p><img src="/img/imagenotfound1.png" alt=""></p>
<p>再在 <code>Copy Files (0 item)</code> Destination里面选择 <code>Frameworks</code>，<code>+</code>号里面选择<code>自定义的库</code></p>
<p><img src="/img/imagenotfound2.png" alt=""></p>
<p>如果还不行可以尝试把<code>Build Phases</code> - <code>Link Binary With Libraries</code> 里<code>Chart.framework</code>后边的选项修改成为<code>Optional</code></p>
]]></content>
    <summary type="html">
    <![CDATA[<p>导入自定义的库的时候，提示错误</p>
<figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line"]]>
    </summary>
    
      <category term="Debug" scheme="http://lecason.com/tags/Debug/"/>
    
      <category term="Debug" scheme="http://lecason.com/categories/Debug/"/>
    
  </entry>
  
</feed>
